<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="string_8h" kind="file" language="C++">
    <compoundname>string.h</compoundname>
    <includes refid="format_8h" local="yes">fmt/format.h</includes>
    <includedby refid="format_8cc" local="no">format.cc</includedby>
    <incdepgraph>
      <node id="6327">
        <label>limits</label>
      </node>
      <node id="6324">
        <label>cmath</label>
      </node>
      <node id="6322">
        <label>cassert</label>
      </node>
      <node id="6329">
        <label>stdexcept</label>
      </node>
      <node id="6333">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="6334" relation="include">
        </childnode>
        <childnode refid="6335" relation="include">
        </childnode>
      </node>
      <node id="6330">
        <label>string</label>
      </node>
      <node id="6334">
        <label>limits.h</label>
      </node>
      <node id="6335">
        <label>wchar.h</label>
      </node>
      <node id="6325">
        <label>cstdio</label>
      </node>
      <node id="6331">
        <label>vector</label>
      </node>
      <node id="6332">
        <label>utility</label>
      </node>
      <node id="6321">
        <label>fmt/format.h</label>
        <link refid="format_8h"/>
        <childnode refid="6322" relation="include">
        </childnode>
        <childnode refid="6323" relation="include">
        </childnode>
        <childnode refid="6324" relation="include">
        </childnode>
        <childnode refid="6325" relation="include">
        </childnode>
        <childnode refid="6326" relation="include">
        </childnode>
        <childnode refid="6327" relation="include">
        </childnode>
        <childnode refid="6328" relation="include">
        </childnode>
        <childnode refid="6329" relation="include">
        </childnode>
        <childnode refid="6330" relation="include">
        </childnode>
        <childnode refid="6331" relation="include">
        </childnode>
        <childnode refid="6332" relation="include">
        </childnode>
        <childnode refid="6333" relation="include">
        </childnode>
      </node>
      <node id="6323">
        <label>clocale</label>
      </node>
      <node id="6320">
        <label>string.h</label>
        <link refid="string.h"/>
        <childnode refid="6321" relation="include">
        </childnode>
      </node>
      <node id="6326">
        <label>cstring</label>
      </node>
      <node id="6328">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6336">
        <label>string.h</label>
        <link refid="string.h"/>
        <childnode refid="6337" relation="include">
        </childnode>
      </node>
      <node id="6337">
        <label>format.cc</label>
        <link refid="format_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classfmt_1_1internal_1_1_string_buffer" prot="public">fmt::internal::StringBuffer</innerclass>
    <innerclass refid="classfmt_1_1_basic_string_writer" prot="public">fmt::BasicStringWriter</innerclass>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <innernamespace refid="namespacefmt_1_1internal">fmt::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>Formatting<sp/>library<sp/>for<sp/>C++<sp/>-<sp/>string<sp/>utilities</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2012<sp/>-<sp/>2016,<sp/>Victor<sp/>Zverovich</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>For<sp/>the<sp/>license<sp/>information<sp/>refer<sp/>to<sp/>format.h.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_STRING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_STRING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="format_8h" kindref="compound">fmt/format.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefmt" kindref="compound">fmt</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>buffer<sp/>that<sp/>stores<sp/>data<sp/>in<sp/>``std::string``.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="21" refid="classfmt_1_1internal_1_1_string_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfmt_1_1internal_1_1_string_buffer" kindref="compound">StringBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_buffer" kindref="compound">Buffer</ref>&lt;Char&gt;<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="classfmt_1_1internal_1_1_string_buffer_1a220b4d9e0ff572152d92456fae4a298c" refkind="member"><highlight class="normal"><sp/><sp/>std::basic_string&lt;Char&gt;<sp/><ref refid="classfmt_1_1internal_1_1_string_buffer_1a220b4d9e0ff572152d92456fae4a298c" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="classfmt_1_1internal_1_1_string_buffer_1ab772d333926208338ac9f1c1bb569475" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1internal_1_1_string_buffer_1ab772d333926208338ac9f1c1bb569475" kindref="member">grow</ref>(std::size_t<sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.resize(size);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classfmt_1_1_buffer_1a17b11ccf916407fdb464b53b3e556849" kindref="member">ptr_</ref><sp/>=<sp/>&amp;data_[0];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classfmt_1_1_buffer_1ab9c3e293679699058a2d33c4a07ad657" kindref="member">capacity_</ref><sp/>=<sp/><ref refid="classfmt_1_1_buffer_1a14fa72f0ddf584c14ffffb1446f598aa" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Moves<sp/>the<sp/>data<sp/>to<sp/>``str``<sp/>clearing<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classfmt_1_1internal_1_1_string_buffer_1a015b27f346306a25cbfd6c8305bccc46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1internal_1_1_string_buffer_1a015b27f346306a25cbfd6c8305bccc46" kindref="member">move_to</ref>(std::basic_string&lt;Char&gt;<sp/>&amp;str)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.resize(this-&gt;<ref refid="classfmt_1_1_buffer_1a3959d66180b075a0ae324ea98466e20f" kindref="member">size_</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>str.swap(data_);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classfmt_1_1_buffer_1ab9c3e293679699058a2d33c4a07ad657" kindref="member">capacity_</ref><sp/>=<sp/>this-&gt;<ref refid="classfmt_1_1_buffer_1a3959d66180b075a0ae324ea98466e20f" kindref="member">size_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classfmt_1_1_buffer_1a17b11ccf916407fdb464b53b3e556849" kindref="member">ptr_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="75" refid="classfmt_1_1_basic_string_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfmt_1_1_basic_string_writer" kindref="compound">BasicStringWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref>&lt;Char&gt;<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classfmt_1_1_basic_string_writer_1ae05f01b2206a436fe445c980c4894e03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1internal_1_1_string_buffer" kindref="compound">internal::StringBuffer&lt;Char&gt;</ref><sp/><ref refid="classfmt_1_1_basic_string_writer_1ae05f01b2206a436fe445c980c4894e03" kindref="member">buffer_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85" refid="classfmt_1_1_basic_string_writer_1a7dd722d6571cf3813b47662b3e3b9324" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_basic_string_writer_1a7dd722d6571cf3813b47662b3e3b9324" kindref="member">BasicStringWriter</ref>()<sp/>:<sp/><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref>&lt;Char&gt;(buffer_)<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classfmt_1_1_basic_string_writer_1aacbc88a87e32dd5b70208bce734aa05a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_basic_string_writer_1aacbc88a87e32dd5b70208bce734aa05a" kindref="member">move_to</ref>(std::basic_string&lt;Char&gt;<sp/>&amp;str)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_.<ref refid="classfmt_1_1internal_1_1_string_buffer_1a015b27f346306a25cbfd6c8305bccc46" kindref="member">move_to</ref>(str);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="namespacefmt_1ad07a33eb4f954050468564a84aad23ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_basic_string_writer" kindref="compound">BasicStringWriter&lt;char&gt;</ref><sp/><ref refid="namespacefmt_1ad07a33eb4f954050468564a84aad23ae" kindref="member">StringWriter</ref>;</highlight></codeline>
<codeline lineno="98" refid="namespacefmt_1a76c6bc2687ab9fbaef47b550b2bf4cbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_basic_string_writer" kindref="compound">BasicStringWriter&lt;wchar_t&gt;</ref><sp/><ref refid="namespacefmt_1a76c6bc2687ab9fbaef47b550b2bf4cbd" kindref="member">WStringWriter</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112" refid="namespacefmt_1abfd84051cd3673d750be5851ee93b05f" refkind="member"><highlight class="normal"><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><ref refid="namespacefmt_1abfd84051cd3673d750be5851ee93b05f" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_basic_memory_writer" kindref="compound">fmt::MemoryWriter</ref><sp/><ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>w<sp/>&lt;&lt;<sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.<ref refid="classfmt_1_1_basic_writer_1a91f06ced6e063ee77a99740e0e79faf6" kindref="member">str</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FMT_STRING_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/string.h"/>
  </compounddef>
</doxygen>
