<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_vertex_array_object" kind="class" language="C++" prot="public">
    <compoundname>ngl::VertexArrayObject</compoundname>
    <includes refid="_vertex_array_object_8h" local="no">VertexArrayObject.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1a9da4de123c1707a68f6e8b5d16e80445" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
        <definition>GLenum ngl::VertexArrayObject::m_drawMode</definition>
        <argsstring></argsstring>
        <name>m_drawMode</name>
        <briefdescription>
<para>the draw mode of the VAO e.g. GL_TRIANGLES </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="229" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="229" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" compoundref="_vertex_array_object_8cpp" startline="269" endline="288">draw</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" compoundref="_vertex_array_object_8cpp" startline="325" endline="345">drawInstanced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1a5476e4d87c8b8df4c79a8a31300417ee" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::VertexArrayObject::m_indicesCount</definition>
        <argsstring></argsstring>
        <name>m_indicesCount</name>
        <briefdescription>
<para>the number of faces to draw </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="233" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="233" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" compoundref="_vertex_array_object_8cpp" startline="269" endline="288">draw</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" compoundref="_vertex_array_object_8cpp" startline="325" endline="345">drawInstanced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1a54784eb115e5b3d479133c7291725676" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::VertexArrayObject::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
<para>the id of the VAO allocated by OpenGL </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="237" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="237" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a7e02916979ef53c3704f8382e248004a" compoundref="_vertex_array_object_8cpp" startline="41" endline="45">bind</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" compoundref="_vertex_array_object_8cpp" startline="53" endline="68">removeVOA</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::VertexArrayObject::m_allocated</definition>
        <argsstring></argsstring>
        <name>m_allocated</name>
        <briefdescription>
<para>flag to indicate if we have allocated the data to the VAO </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="241" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="241" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" compoundref="_vertex_array_object_8cpp" startline="53" endline="68">removeVOA</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a89ef8562c3f3631a4dacf6da302d88d3" compoundref="_vertex_array_object_8cpp" startline="70" endline="84">setData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" compoundref="_vertex_array_object_8cpp" startline="87" endline="123">setIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" compoundref="_vertex_array_object_8cpp" startline="126" endline="162">setRawIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a81097b71002b5e122c7ff0b5dbcd22d2" compoundref="_vertex_array_object_8cpp" startline="167" endline="180">updateIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1abd24371ac017f02b37cb469275387cd0" compoundref="_vertex_array_object_8cpp" startline="199" endline="212">updateData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" compoundref="_vertex_array_object_8cpp" startline="269" endline="288">draw</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" compoundref="_vertex_array_object_8cpp" startline="325" endline="345">drawInstanced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::VertexArrayObject::m_indexed</definition>
        <argsstring></argsstring>
        <name>m_indexed</name>
        <briefdescription>
<para>flag to indicate if we have an index or non index vao to draw </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="245" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="245" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" compoundref="_vertex_array_object_8cpp" startline="87" endline="123">setIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" compoundref="_vertex_array_object_8cpp" startline="126" endline="162">setRawIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a81097b71002b5e122c7ff0b5dbcd22d2" compoundref="_vertex_array_object_8cpp" startline="167" endline="180">updateIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" compoundref="_vertex_array_object_8cpp" startline="269" endline="288">draw</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" compoundref="_vertex_array_object_8cpp" startline="325" endline="345">drawInstanced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
        <definition>GLenum ngl::VertexArrayObject::m_indexType</definition>
        <argsstring></argsstring>
        <name>m_indexType</name>
        <briefdescription>
<para>Specifies the type of the values in the indices buffer. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="250" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="250" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" compoundref="_vertex_array_object_8cpp" startline="87" endline="123">setIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" compoundref="_vertex_array_object_8cpp" startline="126" endline="162">setRawIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" compoundref="_vertex_array_object_8cpp" startline="269" endline="288">draw</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" compoundref="_vertex_array_object_8cpp" startline="325" endline="345">drawInstanced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1abc2f84ab8234d603c60de78cdf7b3a7b" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::VertexArrayObject::m_iboID</definition>
        <argsstring></argsstring>
        <name>m_iboID</name>
        <briefdescription>
<para>the id of the index bufffer object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="254" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="254" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" compoundref="_vertex_array_object_8cpp" startline="87" endline="123">setIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" compoundref="_vertex_array_object_8cpp" startline="126" endline="162">setRawIndexedData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::VertexArrayObject::m_bound</definition>
        <argsstring></argsstring>
        <name>m_bound</name>
        <briefdescription>
<para>flag to indicate if we are bound </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="258" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="258" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" compoundref="_vertex_array_object_8cpp" startline="27" endline="38">VertexArrayObject</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a7e02916979ef53c3704f8382e248004a" compoundref="_vertex_array_object_8cpp" startline="41" endline="45">bind</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1adef9cd82bd893c40735668511389e0dc" compoundref="_vertex_array_object_8cpp" startline="47" endline="51">unbind</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" compoundref="_vertex_array_object_8cpp" startline="53" endline="68">removeVOA</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a89ef8562c3f3631a4dacf6da302d88d3" compoundref="_vertex_array_object_8cpp" startline="70" endline="84">setData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" compoundref="_vertex_array_object_8cpp" startline="87" endline="123">setIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" compoundref="_vertex_array_object_8cpp" startline="126" endline="162">setRawIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a81097b71002b5e122c7ff0b5dbcd22d2" compoundref="_vertex_array_object_8cpp" startline="167" endline="180">updateIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1abd24371ac017f02b37cb469275387cd0" compoundref="_vertex_array_object_8cpp" startline="199" endline="212">updateData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aafedc782cecaf14efc1011732736ccdb" compoundref="_vertex_array_object_8cpp" startline="243" endline="252">setVertexAttributePointer</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a003b5e164f1792e733d5a03de97d7b75" compoundref="_vertex_array_object_8cpp" startline="255" endline="264">setVertexAttributeIPointer</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" compoundref="_vertex_array_object_8cpp" startline="269" endline="288">draw</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" compoundref="_vertex_array_object_8cpp" startline="325" endline="345">drawInstanced</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ac1f2ec672b1fcf2b8faae9d72373c03c" compoundref="_vertex_array_object_8cpp" startline="371" endline="381">getSize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref> &gt;</type>
        <definition>std::vector&lt;GLuint&gt; ngl::VertexArrayObject::m_vboIDs</definition>
        <argsstring></argsstring>
        <name>m_vboIDs</name>
        <briefdescription>
<para>an array of VBO associated with this VAO </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="262" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="262" bodyend="-1"/>
        <referencedby refid="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" compoundref="_vertex_array_object_8cpp" startline="53" endline="68">removeVOA</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a89ef8562c3f3631a4dacf6da302d88d3" compoundref="_vertex_array_object_8cpp" startline="70" endline="84">setData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" compoundref="_vertex_array_object_8cpp" startline="87" endline="123">setIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" compoundref="_vertex_array_object_8cpp" startline="126" endline="162">setRawIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" compoundref="_vertex_array_object_8cpp" startline="231" endline="240">getVBOid</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1a10803c23d51a364ff646859dbd973a4d" compoundref="_vertex_array_object_8cpp" startline="348" endline="364">getDataPointer</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1af59923b728bad3b0019d2a367fe65f95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_vertex_array_object" kindref="compound">VertexArrayObject</ref> *</type>
        <definition>static VertexArrayObject* ngl::VertexArrayObject::createVOA</definition>
        <argsstring>(GLenum _mode)</argsstring>
        <name>createVOA</name>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
        </param>
        <briefdescription>
<para>method to return a newVOA object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a new VOA object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="58" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="58" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a7e02916979ef53c3704f8382e248004a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::bind</definition>
        <argsstring>()</argsstring>
        <name>bind</name>
        <briefdescription>
<para>bind this VOA to make it active </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="65" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="41" bodyend="45"/>
        <references refid="glew_8h_1a4c13098a615d32e7f04aa4105149564f" compoundref="glew_8h" startline="7445">glBindVertexArray</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1a54784eb115e5b3d479133c7291725676" compoundref="_vertex_array_object_8h" startline="237">m_id</references>
        <referencedby refid="classngl_1_1_vertex_array_object_1a10803c23d51a364ff646859dbd973a4d" compoundref="_vertex_array_object_8cpp" startline="348" endline="364">getDataPointer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1adef9cd82bd893c40735668511389e0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::unbind</definition>
        <argsstring>()</argsstring>
        <name>unbind</name>
        <briefdescription>
<para>unbind the VOA and set 0 to be the active VOA </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="69" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="47" bodyend="51"/>
        <references refid="glew_8h_1a4c13098a615d32e7f04aa4105149564f" compoundref="glew_8h" startline="7445">glBindVertexArray</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <referencedby refid="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" compoundref="_vertex_array_object_8cpp" startline="53" endline="68">removeVOA</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::removeVOA</definition>
        <argsstring>()</argsstring>
        <name>removeVOA</name>
        <briefdescription>
<para>delete the VOA (using OpenGL calls to clear data etc) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="73" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="53" bodyend="68"/>
        <references refid="glew_8h_1a55652a3f087bb13267a5481b6ff1fe19" compoundref="glew_8h" startline="1706">glDeleteBuffers</references>
        <references refid="glew_8h_1a214386aefdc30034088a21a6bccfbcbd" compoundref="glew_8h" startline="7446">glDeleteVertexArrays</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1a54784eb115e5b3d479133c7291725676" compoundref="_vertex_array_object_8h" startline="237">m_id</references>
        <references refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" compoundref="_vertex_array_object_8h" startline="262">m_vboIDs</references>
        <references refid="classngl_1_1_vertex_array_object_1adef9cd82bd893c40735668511389e0dc" compoundref="_vertex_array_object_8cpp" startline="47" endline="51">unbind</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1aebd30174ee0de696675953dc8431b185" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::VertexArrayObject::getID</definition>
        <argsstring>() const </argsstring>
        <name>getID</name>
        <briefdescription>
<para>accesor for the VOA id </para>        </briefdescription>
        <detaileddescription>
<para>returns the VOA id </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="78" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1ab4e26a9e84d86378bf016a729fea7eac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngl::VertexArrayObject::isBound</definition>
        <argsstring>() const </argsstring>
        <name>isBound</name>
        <briefdescription>
<para>accesor to see if VOA is bound </para>        </briefdescription>
        <detaileddescription>
<para>returns the bind state (true for bound) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="83" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a50867bcdd01fba5f8bd90d4c6731aa7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngl::VertexArrayObject::isAllocated</definition>
        <argsstring>() const </argsstring>
        <name>isAllocated</name>
        <briefdescription>
<para>accesor to see if VOA has allocated data </para>        </briefdescription>
        <detaileddescription>
<para>returns the allocated state (true for allocated) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="88" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="88" bodyend="88"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="glew_8h_1ab7dffdc215fbbe75b6ccacfecfc14648" compoundref="glew_8h" startline="1671">GL_STATIC_DRAW</references>
        <references refid="glew_8h_1aaab0960233739efbd5d1ae2b2fb919cd" compoundref="glew_8h" startline="1668">GL_STREAM_DRAW</references>
        <references refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" compoundref="glew_8h" startline="330">GL_TRIANGLES</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a89ef8562c3f3631a4dacf6da302d88d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::setData</definition>
        <argsstring>(size_t _size, const GLfloat &amp;_data, GLenum _mode=GL_STATIC_DRAW)</argsstring>
        <name>setData</name>
        <param>
          <type>size_t</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref> &amp;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1ab7dffdc215fbbe75b6ccacfecfc14648" kindref="member">GL_STATIC_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>allocate our data using raw face values (for example tri&apos;s) data, attributes must be bound to match at a different level of code (usually in the client as part of the shader loading, see VAO examples for more details </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed (this will be *sizeof(Real) to convert (this could cause potential bugs!) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the draw mode hint used by GL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="96" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="70" bodyend="84"/>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" compoundref="glew_8h" startline="1709">glGenBuffers</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" compoundref="_vertex_array_object_8h" startline="262">m_vboIDs</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::setIndexedData</definition>
        <argsstring>(size_t _size, const GLfloat &amp;_data, unsigned int _indexSize, const GLvoid *_indexData, GLenum _indexType, GLenum _mode=GL_STATIC_DRAW)</argsstring>
        <name>setIndexedData</name>
        <param>
          <type>size_t</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref> &amp;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_indexSize</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a1e5eb1ac5e47603cc80ab58338b92393" kindref="member">GLvoid</ref> *</type>
          <declname>_indexData</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_indexType</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1ab7dffdc215fbbe75b6ccacfecfc14648" kindref="member">GL_STATIC_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>allocate our data using raw face values (for example tri&apos;s) data, attributes must be bound to match at a different level of code (usually in the client as part of the shader loading, see VAO examples for more details This value uses an index array to point to series of data to store </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_indexSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the index array passed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_indexData</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA indexes (only GLubyte data at present need to write more methods but usually only use this </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_indexType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the values in the indices buffer. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the draw mode hint used by GL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="109" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="87" bodyend="123"/>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1ad26c63125c72cbf0347b589d51676e6a" compoundref="glew_8h" startline="1649">GL_ELEMENT_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a80a33c79f69417372d65d2a65ca36d49" compoundref="glew_8h" startline="637">GL_UNSIGNED_BYTE</references>
        <references refid="glew_8h_1a69b1c02ba0bd93c643c6d82e0c16eb99" compoundref="glew_8h" startline="641">GL_UNSIGNED_INT</references>
        <references refid="glew_8h_1a36c3f955599ab92217a70cce8a22e11f" compoundref="glew_8h" startline="639">GL_UNSIGNED_SHORT</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" compoundref="glew_8h" startline="1709">glGenBuffers</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1abc2f84ab8234d603c60de78cdf7b3a7b" compoundref="_vertex_array_object_8h" startline="254">m_iboID</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
        <references refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" compoundref="_vertex_array_object_8h" startline="250">m_indexType</references>
        <references refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" compoundref="_vertex_array_object_8h" startline="262">m_vboIDs</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::setRawIndexedData</definition>
        <argsstring>(size_t _size, const GLvoid *_data, unsigned int _indexSize, const GLvoid *_indexData, GLenum _indexType, GLenum _mode=GL_STATIC_DRAW)</argsstring>
        <name>setRawIndexedData</name>
        <param>
          <type>size_t</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a1e5eb1ac5e47603cc80ab58338b92393" kindref="member">GLvoid</ref> *</type>
          <declname>_data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_indexSize</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a1e5eb1ac5e47603cc80ab58338b92393" kindref="member">GLvoid</ref> *</type>
          <declname>_indexData</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_indexType</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1ab7dffdc215fbbe75b6ccacfecfc14648" kindref="member">GL_STATIC_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>allocate our data using raw face values (for example tri&apos;s) data, attributes must be bound to match at a different level of code (usually in the client as part of the shader loading, see VAO examples for more details This value uses an index array to point to series of data to store </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_indexSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the index array passed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_indexData</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA indexes (only GLubyte data at present need to write more methods but usually only use this </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_indexType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the values in the indices buffer. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the draw mode hint used by GL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="122" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="126" bodyend="162"/>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1ad26c63125c72cbf0347b589d51676e6a" compoundref="glew_8h" startline="1649">GL_ELEMENT_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a80a33c79f69417372d65d2a65ca36d49" compoundref="glew_8h" startline="637">GL_UNSIGNED_BYTE</references>
        <references refid="glew_8h_1a69b1c02ba0bd93c643c6d82e0c16eb99" compoundref="glew_8h" startline="641">GL_UNSIGNED_INT</references>
        <references refid="glew_8h_1a36c3f955599ab92217a70cce8a22e11f" compoundref="glew_8h" startline="639">GL_UNSIGNED_SHORT</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" compoundref="glew_8h" startline="1709">glGenBuffers</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1abc2f84ab8234d603c60de78cdf7b3a7b" compoundref="_vertex_array_object_8h" startline="254">m_iboID</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
        <references refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" compoundref="_vertex_array_object_8h" startline="250">m_indexType</references>
        <references refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" compoundref="_vertex_array_object_8h" startline="262">m_vboIDs</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a81097b71002b5e122c7ff0b5dbcd22d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::updateIndexedData</definition>
        <argsstring>(size_t _size, const GLfloat &amp;_data, GLenum _mode=GL_STREAM_DRAW)</argsstring>
        <name>updateIndexedData</name>
        <param>
          <type>size_t</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref> &amp;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1aaab0960233739efbd5d1ae2b2fb919cd" kindref="member">GL_STREAM_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>allow to update the vertex data of the VBO when declared as dynamic (with GL_STREAM_DRAW) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the draw mode hint used by GL (choose GL_STREAM_DRAW by default, recommended mode for dynamic VBO&apos;s) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="129" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="167" bodyend="180"/>
        <references refid="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" compoundref="_vertex_array_object_8cpp" startline="231" endline="240">getVBOid</references>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a5f87f60ea9833028bb41a7df2d398d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::updateIndexedData</definition>
        <argsstring>(GLuint _vboidx, size_t _size, const GLfloat &amp;_data, GLenum _mode=GL_STREAM_DRAW)</argsstring>
        <name>updateIndexedData</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_vboidx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref> &amp;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1aaab0960233739efbd5d1ae2b2fb919cd" kindref="member">GL_STREAM_DRAW</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="130" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="183" bodyend="195"/>
        <references refid="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" compoundref="_vertex_array_object_8cpp" startline="231" endline="240">getVBOid</references>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1abd24371ac017f02b37cb469275387cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::updateData</definition>
        <argsstring>(unsigned int _size, const GLfloat &amp;_data, GLenum _mode=GL_STREAM_DRAW)</argsstring>
        <name>updateData</name>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref> &amp;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1aaab0960233739efbd5d1ae2b2fb919cd" kindref="member">GL_STREAM_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>allow to update the vertex data of the VBO when declared as dynamic (with GL_STREAM_DRAW) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the actual data to set for the VOA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the draw mode hint used by GL (choose GL_STREAM_DRAW by default, recommended mode for dynamic VBO&apos;s) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="137" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="199" bodyend="212"/>
        <references refid="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" compoundref="_vertex_array_object_8cpp" startline="231" endline="240">getVBOid</references>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1aff3d5f43e8a068728a0d9c0f959a9167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::updateData</definition>
        <argsstring>(GLuint _vboidx, unsigned int _size, const GLfloat &amp;_data, GLenum _mode=GL_STREAM_DRAW)</argsstring>
        <name>updateData</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_vboidx</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref> &amp;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1aaab0960233739efbd5d1ae2b2fb919cd" kindref="member">GL_STREAM_DRAW</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="138" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="215" bodyend="227"/>
        <references refid="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" compoundref="_vertex_array_object_8cpp" startline="231" endline="240">getVBOid</references>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" compoundref="glew_8h" startline="1704">glBufferData</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1aafedc782cecaf14efc1011732736ccdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::setVertexAttributePointer</definition>
        <argsstring>(GLuint _id, GLint _size, GLenum _type, GLsizei _stride, unsigned int _dataOffset, bool _normalise=GL_FALSE)</argsstring>
        <name>setVertexAttributePointer</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_id</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_size</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_type</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a9289d5b99dc1f27f01480360f2e18ae0" kindref="member">GLsizei</ref></type>
          <declname>_stride</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_dataOffset</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_normalise</declname>
          <defval><ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref></defval>
        </param>
        <briefdescription>
<para>set the generic vertex attribute pointer data </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed (not counting sizeof(GL_FLOAT)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the data type of the Pointer (eg GL_FLOAT) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_stride</parametername>
</parameternamelist>
<parameterdescription>
<para>the step between data values (need *sizeof _type) e.g. 10*sizeof(GLfloat) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_dataOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies a pointer to the first component of the first generic vertex attribute in the array. The initial value is 0. and is calculated as ((float *)NULL + (_dataOffset)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_normalise</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="150" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="243" bodyend="252"/>
        <references refid="glew_8h_1a6e8ee482001ee8fb9b3d4851116779b4" compoundref="glew_8h" startline="1921">glEnableVertexAttribArray</references>
        <references refid="glew_8h_1a8afadc1fe36886688a02097cc63a17cb" compoundref="glew_8h" startline="2002">glVertexAttribPointer</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a003b5e164f1792e733d5a03de97d7b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::setVertexAttributeIPointer</definition>
        <argsstring>(GLuint _id, GLint _size, GLenum _type, GLsizei _stride, unsigned int _dataOffset)</argsstring>
        <name>setVertexAttributeIPointer</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_id</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_size</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_type</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a9289d5b99dc1f27f01480360f2e18ae0" kindref="member">GLsizei</ref></type>
          <declname>_stride</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_dataOffset</declname>
        </param>
        <briefdescription>
<para>set the vertex attribute pointer as an Integer this will not be normalised etc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the raw data passed (not counting sizeof(GL_FLOAT)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the data type of the Pointer (eg GL_FLOAT) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_stride</parametername>
</parameternamelist>
<parameterdescription>
<para>the step between data values (need *sizeof _type) e.g. 10*sizeof(GLfloat) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_dataOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies a pointer to the first component of the first generic vertex attribute in the array. The initial value is 0. and is calculated as ((float *)NULL + (_dataOffset)) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="158" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="255" bodyend="264"/>
        <references refid="glew_8h_1a6e8ee482001ee8fb9b3d4851116779b4" compoundref="glew_8h" startline="1921">glEnableVertexAttribArray</references>
        <references refid="glew_8h_1a4c19069a22ebd709443b65a9c170be49" compoundref="glew_8h" startline="2276">glVertexAttribIPointer</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::VertexArrayObject::getVBOid</definition>
        <argsstring>(unsigned int _index)</argsstring>
        <name>getVBOid</name>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_index</declname>
        </param>
        <briefdescription>
<para>get the VBO id for the data mapped at index _index basically this will be the vbo for the setData called, so if it has been called 3 times 0 would be first call 1, 2nd etc. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to get the id for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if not found else the vbo id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>_index &gt;=0 &amp;&amp; picked up by g++4.3 so removed from below </para>        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="166" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="231" bodyend="240"/>
        <references refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" compoundref="_vertex_array_object_8h" startline="262">m_vboIDs</references>
        <referencedby refid="classngl_1_1_vertex_array_object_1a81097b71002b5e122c7ff0b5dbcd22d2" compoundref="_vertex_array_object_8cpp" startline="167" endline="180">updateIndexedData</referencedby>
        <referencedby refid="classngl_1_1_vertex_array_object_1abd24371ac017f02b37cb469275387cd0" compoundref="_vertex_array_object_8cpp" startline="199" endline="212">updateData</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::draw</definition>
        <argsstring>() const </argsstring>
        <name>draw</name>
        <briefdescription>
<para>draw the VOA </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="170" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="269" bodyend="288"/>
        <references refid="glew_8h_1a1101b854177debf0c1d2611fbec24ffa">glDrawArrays</references>
        <references refid="glew_8h_1a1ee6ceddd5b7f658b7ccb903e5162536">glDrawElements</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1a9da4de123c1707a68f6e8b5d16e80445" compoundref="_vertex_array_object_8h" startline="229">m_drawMode</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
        <references refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" compoundref="_vertex_array_object_8h" startline="250">m_indexType</references>
        <references refid="classngl_1_1_vertex_array_object_1a5476e4d87c8b8df4c79a8a31300417ee" compoundref="_vertex_array_object_8h" startline="233">m_indicesCount</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a3a465ef83de53f1463ab224577180f3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::draw</definition>
        <argsstring>(GLenum _mode) const </argsstring>
        <name>draw</name>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
        </param>
        <briefdescription>
<para>draw the VOA </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to draw with </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="175" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="304" bodyend="323"/>
        <references refid="glew_8h_1a1101b854177debf0c1d2611fbec24ffa">glDrawArrays</references>
        <references refid="glew_8h_1a1ee6ceddd5b7f658b7ccb903e5162536">glDrawElements</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
        <references refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" compoundref="_vertex_array_object_8h" startline="250">m_indexType</references>
        <references refid="classngl_1_1_vertex_array_object_1a5476e4d87c8b8df4c79a8a31300417ee" compoundref="_vertex_array_object_8h" startline="233">m_indicesCount</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a83eb2ddebd373624ded581ae6d750f3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::draw</definition>
        <argsstring>(unsigned int _startIndex, unsigned int _numVerts, GLenum _mode=GL_TRIANGLES) const </argsstring>
        <name>draw</name>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_startIndex</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_numVerts</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref></defval>
        </param>
        <briefdescription>
<para>draw the VOA </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_start</parametername>
</parameternamelist>
<parameterdescription>
<para>start Index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_numVerts</parametername>
</parameternamelist>
<parameterdescription>
<para>the number to draw </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to draw with </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="182" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="291" bodyend="302"/>
        <references refid="glew_8h_1a1101b854177debf0c1d2611fbec24ffa">glDrawArrays</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::drawInstanced</definition>
        <argsstring>(GLenum _n) const </argsstring>
        <name>drawInstanced</name>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_n</declname>
        </param>
        <briefdescription>
<para>draw the VOA _n times using instanced methods from GL (use transform feedback) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of instances to draw </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="188" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="325" bodyend="345"/>
        <references refid="glew_8h_1a30e6afc4637e2ed6beaae367851c03d1" compoundref="glew_8h" startline="2327">glDrawArraysInstanced</references>
        <references refid="glew_8h_1aa0c1477a0e3a1833f625029c628ad0e0" compoundref="glew_8h" startline="2328">glDrawElementsInstanced</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1a9da4de123c1707a68f6e8b5d16e80445" compoundref="_vertex_array_object_8h" startline="229">m_drawMode</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
        <references refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" compoundref="_vertex_array_object_8h" startline="250">m_indexType</references>
        <references refid="classngl_1_1_vertex_array_object_1a5476e4d87c8b8df4c79a8a31300417ee" compoundref="_vertex_array_object_8h" startline="233">m_indicesCount</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a0607cf39d089ff134006cc6af11dc78e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::setNumIndices</definition>
        <argsstring>(size_t _n)</argsstring>
        <name>setNumIndices</name>
        <param>
          <type>size_t</type>
          <declname>_n</declname>
        </param>
        <briefdescription>
<para>set the number of faces to draw </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_n</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of indices to draw in glDrawArray (param 3 count) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="193" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a012de7943554f1349aef05936e0d4524" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::VertexArrayObject::getNumIndices</definition>
        <argsstring>() const </argsstring>
        <name>getNumIndices</name>
        <briefdescription>
<para>get the number of indices in the vao </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the nunmber of indices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="198" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="198" bodyend="198"/>
        <references refid="glew_8h_1aa5fd429fd2b79f5936c1421afb205dcd" compoundref="glew_8h" startline="1664">GL_READ_WRITE</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a10803c23d51a364ff646859dbd973a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> *</type>
        <definition>Real * ngl::VertexArrayObject::getDataPointer</definition>
        <argsstring>(unsigned int _vbo, GLenum _accessMode=GL_READ_WRITE)</argsstring>
        <name>getDataPointer</name>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_vbo</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_accessMode</declname>
          <defval><ref refid="glew_8h_1aa5fd429fd2b79f5936c1421afb205dcd" kindref="member">GL_READ_WRITE</ref></defval>
        </param>
        <briefdescription>
<para>grab a pointer to the first block of the data </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_vbo</parametername>
</parameternamelist>
<parameterdescription>
<para>the vbo number of the block you wish to grab the data for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_accessMode</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to access the data, this is default to GL_READ_WRITE but we could change this to GL_READ to make access quicker for just reading the values or GL_WRITE for just writing values etc. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="210" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="348" bodyend="364"/>
        <references refid="classngl_1_1_vertex_array_object_1a7e02916979ef53c3704f8382e248004a" compoundref="_vertex_array_object_8cpp" startline="41" endline="45">bind</references>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" compoundref="glew_8h" startline="1703">glBindBuffer</references>
        <references refid="glew_8h_1a88f951d9fb1bd55e28bc3c8581adf2eb" compoundref="glew_8h" startline="1719">glMapBuffer</references>
        <references refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" compoundref="_vertex_array_object_8h" startline="262">m_vboIDs</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a33c9c3edda9c1705a8a117b91eec99dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::VertexArrayObject::freeDataPointer</definition>
        <argsstring>()</argsstring>
        <name>freeDataPointer</name>
        <briefdescription>
<para>unmap the data pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="215" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="366" bodyend="369"/>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1ae6a0a2dca1b86176367fab8941e9ab8f" compoundref="glew_8h" startline="1720">glUnmapBuffer</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1ac1f2ec672b1fcf2b8faae9d72373c03c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>int ngl::VertexArrayObject::getSize</definition>
        <argsstring>() const </argsstring>
        <name>getSize</name>
        <briefdescription>
<para>get the size in bytes of the VAO </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="219" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="371" bodyend="381"/>
        <references refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" compoundref="glew_8h" startline="1648">GL_ARRAY_BUFFER</references>
        <references refid="glew_8h_1a97c3f50440fbe7eb098cfeede90d1686" compoundref="glew_8h" startline="1642">GL_BUFFER_SIZE</references>
        <references refid="glew_8h_1a86521a2cbeefff0f6dddd8ba6302e34f" compoundref="glew_8h" startline="1711">glGetBufferParameteriv</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1ad00a986b14cfab0128d06edd365e1a7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngl::VertexArrayObject::~VertexArrayObject</definition>
        <argsstring>()</argsstring>
        <name>~VertexArrayObject</name>
        <briefdescription>
<para>dtor doesn&apos;t do anything use the removeVAO method instead </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="223" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="223" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a697833dd5c8b201512ef97d53b761bf1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngl::VertexArrayObject::VertexArrayObject</definition>
        <argsstring>()</argsstring>
        <name>VertexArrayObject</name>
        <briefdescription>
<para>hide the ctor as we want to create static factory only </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="266" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::VertexArrayObject::VertexArrayObject</definition>
        <argsstring>(GLenum _mode)</argsstring>
        <name>VertexArrayObject</name>
        <param>
          <type><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref></type>
          <declname>_mode</declname>
        </param>
        <briefdescription>
<para>hide the ctor as we want to create static factory only </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="270" column="1" bodyfile="/Users/jmacey/NGL/src/VertexArrayObject.cpp" bodystart="27" bodyend="38"/>
        <references refid="glew_8h_1a80a33c79f69417372d65d2a65ca36d49" compoundref="glew_8h" startline="637">GL_UNSIGNED_BYTE</references>
        <references refid="glew_8h_1a71a2d01a12606fc26c1a28dba23dfce2" compoundref="glew_8h" startline="7447">glGenVertexArrays</references>
        <references refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" compoundref="_vertex_array_object_8h" startline="241">m_allocated</references>
        <references refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" compoundref="_vertex_array_object_8h" startline="258">m_bound</references>
        <references refid="classngl_1_1_vertex_array_object_1a9da4de123c1707a68f6e8b5d16e80445" compoundref="_vertex_array_object_8h" startline="229">m_drawMode</references>
        <references refid="classngl_1_1_vertex_array_object_1abc2f84ab8234d603c60de78cdf7b3a7b" compoundref="_vertex_array_object_8h" startline="254">m_iboID</references>
        <references refid="classngl_1_1_vertex_array_object_1a54784eb115e5b3d479133c7291725676" compoundref="_vertex_array_object_8h" startline="237">m_id</references>
        <references refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" compoundref="_vertex_array_object_8h" startline="245">m_indexed</references>
        <references refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" compoundref="_vertex_array_object_8h" startline="250">m_indexType</references>
        <references refid="classngl_1_1_vertex_array_object_1a5476e4d87c8b8df4c79a8a31300417ee" compoundref="_vertex_array_object_8h" startline="233">m_indicesCount</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_vertex_array_object_1a14a7da621c761bfebc15bf32cc6f6072" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::VertexArrayObject::VertexArrayObject</definition>
        <argsstring>(const VertexArrayObject &amp;_v)</argsstring>
        <name>VertexArrayObject</name>
        <param>
          <type>const <ref refid="classngl_1_1_vertex_array_object" kindref="compound">VertexArrayObject</ref> &amp;</type>
          <declname>_v</declname>
        </param>
        <briefdescription>
<para>hide the copy ctor as we want to create static factory only </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="274" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a class to encapsulate an OpenGL VAO </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2060">
        <label>ngl::VertexArrayObject</label>
        <link refid="classngl_1_1_vertex_array_object"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" line="51" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/VertexArrayObject.h" bodystart="50" bodyend="279"/>
    <listofallmembers>
      <member refid="classngl_1_1_vertex_array_object_1a7e02916979ef53c3704f8382e248004a" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>bind</name></member>
      <member refid="classngl_1_1_vertex_array_object_1af59923b728bad3b0019d2a367fe65f95" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>createVOA</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ab2f1817b2db95ef20175c0f38c63756c" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>draw</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a3a465ef83de53f1463ab224577180f3f" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>draw</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a83eb2ddebd373624ded581ae6d750f3d" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>draw</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ae7851f41abe7a38b7cae84c977c8050e" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>drawInstanced</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a33c9c3edda9c1705a8a117b91eec99dd" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>freeDataPointer</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a10803c23d51a364ff646859dbd973a4d" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>getDataPointer</name></member>
      <member refid="classngl_1_1_vertex_array_object_1aebd30174ee0de696675953dc8431b185" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>getID</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a012de7943554f1349aef05936e0d4524" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>getNumIndices</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ac1f2ec672b1fcf2b8faae9d72373c03c" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>getSize</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ad7927f511591c372a212fefa344ee6f3" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>getVBOid</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a50867bcdd01fba5f8bd90d4c6731aa7d" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>isAllocated</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ab4e26a9e84d86378bf016a729fea7eac" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>isBound</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ab8d799398732410bec097d1b585e757a" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_allocated</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ab98ca43775f3585f85596d645e7a9284" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_bound</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a9da4de123c1707a68f6e8b5d16e80445" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_drawMode</name></member>
      <member refid="classngl_1_1_vertex_array_object_1abc2f84ab8234d603c60de78cdf7b3a7b" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_iboID</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a54784eb115e5b3d479133c7291725676" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_id</name></member>
      <member refid="classngl_1_1_vertex_array_object_1abdb457eb178f4c24ab07f07da3b70415" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_indexed</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a5c5f9a7e89d545f8c22bc0bd9743fb95" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_indexType</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a5476e4d87c8b8df4c79a8a31300417ee" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_indicesCount</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a7f8e3a43ba94864b1a0a0dd7749ba79a" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>m_vboIDs</name></member>
      <member refid="classngl_1_1_vertex_array_object_1acf13839735b4e07341b9a48d47d248a1" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>removeVOA</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a89ef8562c3f3631a4dacf6da302d88d3" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>setData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1aa02415403930cfd0e5682c18f69fc2a6" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>setIndexedData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a0607cf39d089ff134006cc6af11dc78e" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>setNumIndices</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a1ecf7e7a8e14ff82909461ae81b4f16c" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>setRawIndexedData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a003b5e164f1792e733d5a03de97d7b75" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>setVertexAttributeIPointer</name></member>
      <member refid="classngl_1_1_vertex_array_object_1aafedc782cecaf14efc1011732736ccdb" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>setVertexAttributePointer</name></member>
      <member refid="classngl_1_1_vertex_array_object_1adef9cd82bd893c40735668511389e0dc" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>unbind</name></member>
      <member refid="classngl_1_1_vertex_array_object_1abd24371ac017f02b37cb469275387cd0" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>updateData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1aff3d5f43e8a068728a0d9c0f959a9167" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>updateData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a81097b71002b5e122c7ff0b5dbcd22d2" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>updateIndexedData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a5f87f60ea9833028bb41a7df2d398d6f" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>updateIndexedData</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a697833dd5c8b201512ef97d53b761bf1" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>VertexArrayObject</name></member>
      <member refid="classngl_1_1_vertex_array_object_1af6ab6b3d1b116f51265a866711e083c1" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>VertexArrayObject</name></member>
      <member refid="classngl_1_1_vertex_array_object_1a14a7da621c761bfebc15bf32cc6f6072" prot="protected" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>VertexArrayObject</name></member>
      <member refid="classngl_1_1_vertex_array_object_1ad00a986b14cfab0128d06edd365e1a7e" prot="public" virt="non-virtual"><scope>ngl::VertexArrayObject</scope><name>~VertexArrayObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
