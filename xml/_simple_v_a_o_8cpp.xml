<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_simple_v_a_o_8cpp" kind="file" language="C++">
    <compoundname>SimpleVAO.cpp</compoundname>
    <includes refid="_simple_v_a_o_8h" local="yes">SimpleVAO.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="6066">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="6067" relation="include">
        </childnode>
        <childnode refid="6073" relation="include">
        </childnode>
        <childnode refid="6074" relation="include">
        </childnode>
        <childnode refid="6075" relation="include">
        </childnode>
      </node>
      <node id="6063">
        <label>SimpleVAO.cpp</label>
        <link refid="SimpleVAO.cpp"/>
        <childnode refid="6064" relation="include">
        </childnode>
        <childnode refid="6076" relation="include">
        </childnode>
      </node>
      <node id="6075">
        <label>QGLContext</label>
      </node>
      <node id="6069">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="6070" relation="include">
        </childnode>
        <childnode refid="6071" relation="include">
        </childnode>
      </node>
      <node id="6068">
        <label>stddef.h</label>
      </node>
      <node id="6067">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="6068" relation="include">
        </childnode>
        <childnode refid="6069" relation="include">
        </childnode>
        <childnode refid="6072" relation="include">
        </childnode>
      </node>
      <node id="6072">
        <label>GL/glu.h</label>
      </node>
      <node id="6070">
        <label>limits.h</label>
      </node>
      <node id="6065">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="6066" relation="include">
        </childnode>
      </node>
      <node id="6071">
        <label>wchar.h</label>
      </node>
      <node id="6074">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="6076">
        <label>iostream</label>
      </node>
      <node id="6064">
        <label>SimpleVAO.h</label>
        <link refid="_simple_v_a_o_8h"/>
        <childnode refid="6065" relation="include">
        </childnode>
      </node>
      <node id="6073">
        <label>GL/gl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_v_a_o_8h" kindref="compound">SimpleVAO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5" refid="classngl_1_1_simple_v_a_o_1a7286f3a05cc31187828333b866d3d3f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_simple_v_a_o_1a7286f3a05cc31187828333b866d3d3f4" kindref="member">SimpleVAO::~SimpleVAO</ref>()</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_simple_v_a_o_1a5c3d99c30dba6c0306858f2a85848510" kindref="member">removeVAO</ref>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classngl_1_1_simple_v_a_o_1ae2fe27cdef2b4b14916915bf4cba7fca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_v_a_o_1ae2fe27cdef2b4b14916915bf4cba7fca" kindref="member">SimpleVAO::draw</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>draw<sp/>an<sp/>unallocated<sp/>VOA\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>draw<sp/>an<sp/>unbound<sp/>VOA\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1101b854177debf0c1d2611fbec24ffa" kindref="member">glDrawArrays</ref>(<ref refid="classngl_1_1_abstract_v_a_o_1a7df62921ae3aff699778d17dc9d37df9" kindref="member">m_mode</ref>,<sp/>0,<sp/>static_cast&lt;GLsizei&gt;(<ref refid="classngl_1_1_abstract_v_a_o_1a04cd955b0987f618a279bbe6da056b46" kindref="member">m_indicesCount</ref>));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classngl_1_1_simple_v_a_o_1a5c3d99c30dba6c0306858f2a85848510" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_v_a_o_1a5c3d99c30dba6c0306858f2a85848510" kindref="member">SimpleVAO::removeVAO</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a55652a3f087bb13267a5481b6ff1fe19" kindref="member">glDeleteBuffers</ref>(1,&amp;<ref refid="classngl_1_1_simple_v_a_o_1abe95d362ec235023ea90edfa4d8cdc2b" kindref="member">m_buffer</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a214386aefdc30034088a21a6bccfbcbd" kindref="member">glDeleteVertexArrays</ref>(1,&amp;<ref refid="classngl_1_1_abstract_v_a_o_1a7c7d6a3322e757a3a7298f4321e48f1d" kindref="member">m_id</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classngl_1_1_simple_v_a_o_1a368172998936ad5dfd7201d75bd3e421" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_v_a_o_1a368172998936ad5dfd7201d75bd3e421" kindref="member">SimpleVAO::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data" kindref="compound">VertexData</ref><sp/>&amp;_data)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>set<sp/>VOA<sp/>data<sp/>when<sp/>unbound\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a55652a3f087bb13267a5481b6ff1fe19" kindref="member">glDeleteBuffers</ref>(1,&amp;<ref refid="classngl_1_1_simple_v_a_o_1abe95d362ec235023ea90edfa4d8cdc2b" kindref="member">m_buffer</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" kindref="member">glGenBuffers</ref>(1,<sp/>&amp;<ref refid="classngl_1_1_simple_v_a_o_1abe95d362ec235023ea90edfa4d8cdc2b" kindref="member">m_buffer</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>will<sp/>bind<sp/>an<sp/>array<sp/>buffer<sp/>to<sp/>the<sp/>first<sp/>one<sp/>and<sp/>load<sp/>the<sp/>data<sp/>for<sp/>the<sp/>verts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" kindref="member">glBindBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/><ref refid="classngl_1_1_simple_v_a_o_1abe95d362ec235023ea90edfa4d8cdc2b" kindref="member">m_buffer</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" kindref="member">glBufferData</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,static_cast&lt;GLsizeiptr&gt;(<sp/>_data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1ac70e6ea1e79a22adac0ebfff20aab5ff" kindref="member">m_size</ref>),<sp/>&amp;_data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1aced95e3e8893a259344de637d0dd7d72" kindref="member">m_data</ref>,<sp/>_data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1a3aea6d6bc943b07efe4c44bf5dd4d2a9" kindref="member">m_mode</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/SimpleVAO.cpp"/>
  </compounddef>
</doxygen>
