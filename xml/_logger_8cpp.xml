<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_logger_8cpp" kind="file" language="C++">
    <compoundname>Logger.cpp</compoundname>
    <includes refid="_logger_8h" local="yes">Logger.h</includes>
    <includes local="no">cstdarg</includes>
    <includes local="no">vector</includes>
    <includes local="no">boost/format.hpp</includes>
    <incdepgraph>
      <node id="4681">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="4682" relation="include">
        </childnode>
        <childnode refid="4688" relation="include">
        </childnode>
        <childnode refid="4689" relation="include">
        </childnode>
        <childnode refid="4690" relation="include">
        </childnode>
      </node>
      <node id="4690">
        <label>QGLContext</label>
      </node>
      <node id="4701">
        <label>boost/format.hpp</label>
      </node>
      <node id="4684">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="4685" relation="include">
        </childnode>
        <childnode refid="4686" relation="include">
        </childnode>
      </node>
      <node id="4694">
        <label>cstdarg</label>
      </node>
      <node id="4698">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="4679">
        <label>Logger.cpp</label>
        <link refid="Logger.cpp"/>
        <childnode refid="4680" relation="include">
        </childnode>
        <childnode refid="4694" relation="include">
        </childnode>
        <childnode refid="4700" relation="include">
        </childnode>
        <childnode refid="4701" relation="include">
        </childnode>
      </node>
      <node id="4683">
        <label>stddef.h</label>
      </node>
      <node id="4697">
        <label>fstream</label>
      </node>
      <node id="4682">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="4683" relation="include">
        </childnode>
        <childnode refid="4684" relation="include">
        </childnode>
        <childnode refid="4687" relation="include">
        </childnode>
      </node>
      <node id="4696">
        <label>ostream</label>
      </node>
      <node id="4687">
        <label>GL/glu.h</label>
      </node>
      <node id="4685">
        <label>limits.h</label>
      </node>
      <node id="4699">
        <label>boost/iostreams/tee.hpp</label>
      </node>
      <node id="4686">
        <label>wchar.h</label>
      </node>
      <node id="4700">
        <label>vector</label>
      </node>
      <node id="4689">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="4692">
        <label>cstdlib</label>
      </node>
      <node id="4695">
        <label>iostream</label>
      </node>
      <node id="4691">
        <label>Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="4681" relation="include">
        </childnode>
        <childnode refid="4692" relation="include">
        </childnode>
      </node>
      <node id="4680">
        <label>Logger.h</label>
        <link refid="_logger_8h"/>
        <childnode refid="4681" relation="include">
        </childnode>
        <childnode refid="4691" relation="include">
        </childnode>
        <childnode refid="4693" relation="include">
        </childnode>
        <childnode refid="4694" relation="include">
        </childnode>
        <childnode refid="4695" relation="include">
        </childnode>
        <childnode refid="4696" relation="include">
        </childnode>
        <childnode refid="4697" relation="include">
        </childnode>
        <childnode refid="4698" relation="include">
        </childnode>
        <childnode refid="4699" relation="include">
        </childnode>
      </node>
      <node id="4688">
        <label>GL/gl.h</label>
      </node>
      <node id="4693">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classngl_1_1_logger_1_1_impl" prot="public">ngl::Logger::Impl</innerclass>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_logger_8h" kindref="compound">Logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;QtCore/QMutexLocker&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/format.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PIMPL<sp/>Idiom<sp/>to<sp/>make<sp/>lib<sp/>cleaner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classngl_1_1_logger_1_1_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classngl_1_1_logger_1_1_impl" kindref="compound">Logger::Impl</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classngl_1_1_logger_1_1_impl_1ae7ee0f741b86f4f00a131254e3c446e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1ae7ee0f741b86f4f00a131254e3c446e9" kindref="member">m_logFileAndConsole</ref>;</highlight></codeline>
<codeline lineno="17" refid="classngl_1_1_logger_1_1_impl_1a8162a3d16490d4d33c0b1e10e135bf3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a8162a3d16490d4d33c0b1e10e135bf3c" kindref="member">m_logFile</ref>;</highlight></codeline>
<codeline lineno="18" refid="classngl_1_1_logger_1_1_impl_1af65bdb860e270d608027aa6e95cbeed4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1af65bdb860e270d608027aa6e95cbeed4" kindref="member">m_logConsole</ref>;</highlight></codeline>
<codeline lineno="19" refid="classngl_1_1_logger_1_1_impl_1ac7e33fda5f22c2b6fd46cf87d9301d98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1ac7e33fda5f22c2b6fd46cf87d9301d98" kindref="member">m_timeStamp</ref>;</highlight></codeline>
<codeline lineno="20" refid="classngl_1_1_logger_1_1_impl_1a7ebffb96e0bf9749e4b35d4c6b98a2db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a7ebffb96e0bf9749e4b35d4c6b98a2db" kindref="member">m_lineNumber</ref>;</highlight></codeline>
<codeline lineno="21" refid="classngl_1_1_logger_1_1_impl_1a90225395a13af3f8871a0f2522f17cbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a90225395a13af3f8871a0f2522f17cbb" kindref="member">m_disableColours</ref>;</highlight></codeline>
<codeline lineno="22" refid="classngl_1_1_logger_1_1_impl_1a4e320ff24cc678bcb2f5d20c5af3659e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65e" kindref="member">Colours</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a4e320ff24cc678bcb2f5d20c5af3659e" kindref="member">m_colour</ref>;</highlight></codeline>
<codeline lineno="23" refid="classngl_1_1_logger_1_1_impl_1a92182e77d577972ca6c8f5642abf7a78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a92182e77d577972ca6c8f5642abf7a78" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="24" refid="classngl_1_1_logger_1_1_impl_1a1900de9c3b2ae895cc00ef6896df90e7" refkind="member"><highlight class="normal"><sp/><sp/>std::ofstream<sp/><ref refid="classngl_1_1_logger_1_1_impl_1a1900de9c3b2ae895cc00ef6896df90e7" kindref="member">m_file</ref>;</highlight></codeline>
<codeline lineno="25" refid="classngl_1_1_logger_1_1_impl_1a75c7549106599c82dbfa28b74682b8f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a75c7549106599c82dbfa28b74682b8f6" kindref="member">m_timeString</ref>;</highlight></codeline>
<codeline lineno="26" refid="classngl_1_1_logger_1_1_impl_1a915d431716652ee5ab706fadb28ccd27" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a915d431716652ee5ab706fadb28ccd27" kindref="member">m_logfileName</ref>;</highlight></codeline>
<codeline lineno="27" refid="classngl_1_1_logger_1_1_impl_1ab6c3aee4ba97107f52cd43c8e687209f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1ab6c3aee4ba97107f52cd43c8e687209f" kindref="member">m_lineNumberCount</ref>;</highlight></codeline>
<codeline lineno="28" refid="classngl_1_1_logger_1_1_impl_1a0b1a445eb1a24b4568cd9a49e2c3a0f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a0b1a445eb1a24b4568cd9a49e2c3a0f5" kindref="member">m_pad</ref>;</highlight></codeline>
<codeline lineno="29" refid="classngl_1_1_logger_1_1_impl_1a0e339cb23f4845ef34ebe4d01c28d6fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1acf23ba886043462b4ead9cec9f5b47af" kindref="member">TeeStream</ref><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a0e339cb23f4845ef34ebe4d01c28d6fc" kindref="member">m_output</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a1bc26c39378a79ff8ae5cf53875d1c3b" kindref="member">Impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fname)<sp/>noexcept;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1adf0f982156fe2441806eca2fbf188536" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_text)<sp/>noexcept;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a1e1a686f9217127a817b01d606830715" kindref="member">writeLineNumber</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a3e7caa68394110168c797fbf3f0dab59" kindref="member">writeTimeStamp</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a159c6a2e91ccc197db56b130e356489b" kindref="member">currentTime</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a16a8c6057be0560930afc4d1b7edcdef" kindref="member">setColour</ref>(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65e" kindref="member">Colours</ref><sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classngl_1_1_logger_1_1_impl_1a1bc26c39378a79ff8ae5cf53875d1c3b" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_logger" kindref="compound">Logger</ref>::<ref refid="classngl_1_1_logger_1_1_impl" kindref="compound">Impl</ref>::<ref refid="classngl_1_1_logger_1_1_impl" kindref="compound">Impl</ref>(const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>_fname)<sp/>noexcept</highlight></codeline>
<codeline lineno="41"><highlight class="normal">:<sp/>m_logFileAndConsole(false),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>m_logFile(true),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>m_logConsole(false),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_timeStamp(true),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>m_lineNumber(true),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_disableColours(false),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>m_colour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65e" kindref="member">Colours</ref>::<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5859d8721cfdc0312b2838b9c985bc1" kindref="member">RESET</ref>),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>m_logfileName(_fname),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>m_lineNumberCount(0),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>m_pad(4)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>m_file.open(m_logfileName.c_str());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_file.is_open())</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>opening<sp/>log<sp/>file<sp/>for<sp/>writing\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a053a2e8221f39a3ce26d332f9732cebb" kindref="member">Tee</ref><sp/>tee(std::cout,<sp/>m_file);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>m_output.open(tee);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_output.set_auto_close(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_output.is_open())</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;problem<sp/>opening<sp/>log<sp/>stream<sp/>tee\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>m_timeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%I:%M%p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71" refid="classngl_1_1_logger_1_1_impl_1a159c6a2e91ccc197db56b130e356489b" refkind="member"><highlight class="normal"><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a159c6a2e91ccc197db56b130e356489b" kindref="member">Logger::Impl::currentTime</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>timeStr;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>time_t<sp/><sp/><sp/><sp/><sp/><sp/>rawTime;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm*<sp/><sp/>timeinfo;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>[80];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>time(&amp;rawTime);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>timeStr<sp/><sp/>=<sp/>ctime(&amp;rawTime);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>timeinfo<sp/>=<sp/>localtime(&amp;rawTime);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//without<sp/>the<sp/>newline<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>strftime(buffer,<sp/>80,<sp/>m_timeString.c_str(),<sp/>timeinfo);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classngl_1_1_logger_1_1_impl_1a1e1a686f9217127a817b01d606830715" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a1e1a686f9217127a817b01d606830715" kindref="member">Logger::Impl::writeLineNumber</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a16a8c6057be0560930afc4d1b7edcdef" kindref="member">setColour</ref>(m_colour);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lineNumber<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>st<sp/>=<sp/>boost::str(<ref refid="glew_8h_1a1e3b09934060e9d373139c3557730d37" kindref="member">boost::format</ref>(</highlight><highlight class="stringliteral">&quot;%%0%dd&quot;</highlight><highlight class="normal">)<sp/>%<sp/>m_pad);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><ref refid="glew_8h_1ade5636ea600ca40c1f2c8cd08c1dcd3e" kindref="member">t</ref><sp/><sp/>=<sp/>boost::str(<ref refid="glew_8h_1a1e3b09934060e9d373139c3557730d37" kindref="member">boost::format</ref>(st.c_str())<sp/>%<sp/>++m_lineNumberCount);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output<sp/>&lt;&lt;<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96" refid="classngl_1_1_logger_1_1_impl_1a3e7caa68394110168c797fbf3f0dab59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a3e7caa68394110168c797fbf3f0dab59" kindref="member">Logger::Impl::writeTimeStamp</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a16a8c6057be0560930afc4d1b7edcdef" kindref="member">setColour</ref>(m_colour);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_timeStamp<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output<sp/>&lt;&lt;<sp/><ref refid="classngl_1_1_logger_1_1_impl_1a159c6a2e91ccc197db56b130e356489b" kindref="member">currentTime</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classngl_1_1_logger_1_1_impl_1adf0f982156fe2441806eca2fbf188536" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1adf0f982156fe2441806eca2fbf188536" kindref="member">Logger::Impl::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_text)<sp/>noexcept</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a16a8c6057be0560930afc4d1b7edcdef" kindref="member">setColour</ref>(m_colour);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>m_output<sp/>&lt;&lt;<sp/>_text;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>http://stackoverflow.com/questions/3585846/color-text-in-terminal-aplications-in-unix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classngl_1_1_logger_1_1_impl_1a16a8c6057be0560930afc4d1b7edcdef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl_1a16a8c6057be0560930afc4d1b7edcdef" kindref="member">Logger::Impl::setColour</ref>(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65e" kindref="member">Colours</ref><sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_disableColours)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea322117d947c67c3b5a915f5272c31517" kindref="member">Colours::CNORMAL</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eaa2d9547b5d3dd9f05984475f7c926da0" kindref="member">Colours::RED</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[31m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea9de0e5dd94e861317e74964bed179fa0" kindref="member">Colours::GREEN</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[32m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea8a568e5f41b7e4da88fe5c4a00aad34e" kindref="member">Colours::YELLOW</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[33m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea1b3e1ee9bff86431dea6b181365ba65f" kindref="member">Colours::BLUE</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[34m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eac634ffea7195608364671ac52ee59a61" kindref="member">Colours::MAGENTA</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[35m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea344dd8cd533280795b9db82ef0c92749" kindref="member">Colours::CYAN</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[36m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5bf627e448384cf3a4c35121ca6008d" kindref="member">Colours::WHITE</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\x1B[37m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5859d8721cfdc0312b2838b9c985bc1" kindref="member">Colours::RESET</ref>:<sp/>m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[0m&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classngl_1_1_logger_1aee42c91367a38679144c3ab8891c010f" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_logger_1aee42c91367a38679144c3ab8891c010f" kindref="member">Logger::Logger</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="133"><highlight class="normal">:<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>(new<sp/><ref refid="classngl_1_1_logger" kindref="compound">Logger</ref>::<ref refid="classngl_1_1_logger_1_1_impl" kindref="compound">Impl</ref>(&quot;output.log&quot;))</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea1b3e1ee9bff86431dea6b181365ba65f" kindref="member">Colours::BLUE</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Logger<sp/>started<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;currentTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5859d8721cfdc0312b2838b9c985bc1" kindref="member">Colours::RESET</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classngl_1_1_logger_1a2203c0fcc60e8bcd37dd1a1a5ccd9afb" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_logger_1aee42c91367a38679144c3ab8891c010f" kindref="member">Logger::Logger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fname)<sp/>noexcept</highlight></codeline>
<codeline lineno="141"><highlight class="normal">:<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1_1_impl" kindref="compound">Logger::Impl</ref>(_fname))</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea1b3e1ee9bff86431dea6b181365ba65f" kindref="member">Colours::BLUE</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Logger<sp/>started<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;currentTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5859d8721cfdc0312b2838b9c985bc1" kindref="member">Colours::RESET</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classngl_1_1_logger_1a89f55641521acda9efcbc587f3b07744" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_logger_1a89f55641521acda9efcbc587f3b07744" kindref="member">Logger::~Logger</ref>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5859d8721cfdc0312b2838b9c985bc1" kindref="member">Colours::RESET</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.flush();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.close();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classngl_1_1_logger_1a402b86b05ec00ad50276129c18e86707" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a402b86b05ec00ad50276129c18e86707" kindref="member">Logger::close</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eab5859d8721cfdc0312b2838b9c985bc1" kindref="member">Colours::RESET</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.flush();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.close();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classngl_1_1_logger_1a2cbc8bd5fd084fd6e3fc0d24963a2aa2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a2cbc8bd5fd084fd6e3fc0d24963a2aa2" kindref="member">Logger::logMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacefmt" kindref="compound">fmt</ref>,<sp/>...)<sp/>noexcept</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>mutux<sp/>to<sp/>stop<sp/>other<sp/>threads<sp/>accessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>QMutex<sp/>m;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>locker<sp/>will<sp/>auto<sp/>unlock<sp/>when<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//QMutexLocker<sp/>locker(&amp;m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pthread_mutex_lock<sp/>(&amp;m_impl-&gt;m_mutex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;writeLineNumber();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;writeTimeStamp();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>[1024];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>vsprintf(buffer,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>text<sp/>=<sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;write(text);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;m_impl-&gt;m_mutex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classngl_1_1_logger_1a411cb7ff7c75d6225fd1bcb278e048a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a411cb7ff7c75d6225fd1bcb278e048a6" kindref="member">Logger::logError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacefmt" kindref="compound">fmt</ref>,<sp/>...)<sp/>noexcept</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>mutux<sp/>to<sp/>stop<sp/>other<sp/>threads<sp/>accessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>QMutex<sp/>m;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>locker<sp/>will<sp/>auto<sp/>unlock<sp/>when<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>QMutexLocker<sp/>locker(&amp;m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pthread_mutex_lock<sp/>(&amp;m_impl-&gt;m_mutex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;writeLineNumber();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;writeTimeStamp();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>[1024];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>vsprintf(buffer,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65eaa2d9547b5d3dd9f05984475f7c926da0" kindref="member">Colours::RED</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>text<sp/>=<sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;write(text);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;m_impl-&gt;m_mutex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classngl_1_1_logger_1a6bd281a592671644a724618889f2c5d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a6bd281a592671644a724618889f2c5d9" kindref="member">Logger::logWarning</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacefmt" kindref="compound">fmt</ref>...)<sp/>noexcept</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>pthread_mutex_lock<sp/>(&amp;m_impl-&gt;m_mutex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>mutux<sp/>to<sp/>stop<sp/>other<sp/>threads<sp/>accessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>QMutex<sp/>m;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>locker<sp/>will<sp/>auto<sp/>unlock<sp/>when<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>QMutexLocker<sp/>locker(&amp;m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;writeLineNumber();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;writeTimeStamp();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>[1024];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>va_start(args,<sp/><ref refid="namespacefmt" kindref="compound">fmt</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>vsprintf(buffer,<sp/><ref refid="namespacefmt" kindref="compound">fmt</ref>,<sp/>args);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;setColour(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65ea9de0e5dd94e861317e74964bed179fa0" kindref="member">Colours::GREEN</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[Warning]<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>text<sp/>=<sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;write(text);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;m_impl-&gt;m_mutex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classngl_1_1_logger_1a6b8460a712ae6976649066eb90c90140" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a6b8460a712ae6976649066eb90c90140" kindref="member">Logger::enableLogToFile</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logFile<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236" refid="classngl_1_1_logger_1ae692541e16799218e741e4243452c2fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1ae692541e16799218e741e4243452c2fc" kindref="member">Logger::disableLogToFile</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240" refid="classngl_1_1_logger_1a7e35d0263239f52e4cd08473be337805" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a7e35d0263239f52e4cd08473be337805" kindref="member">Logger::enableLogToConsole</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logConsole<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244" refid="classngl_1_1_logger_1a4171817ba6ac9aad071df541358ccef1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a4171817ba6ac9aad071df541358ccef1" kindref="member">Logger::disableLogToConsole</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logConsole<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248" refid="classngl_1_1_logger_1a265f2b46645f3bc28dee6865548559b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a265f2b46645f3bc28dee6865548559b0" kindref="member">Logger::enableLogToFileAndConsole</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logConsole<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logFile<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253" refid="classngl_1_1_logger_1a792a9967e0e0ddd8bff701990f5f9535" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a792a9967e0e0ddd8bff701990f5f9535" kindref="member">Logger::disableLogToFileAndConsole</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logConsole<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logFile<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258" refid="classngl_1_1_logger_1aa3c968e6b0ec6a43da48a70c5188d0e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1aa3c968e6b0ec6a43da48a70c5188d0e2" kindref="member">Logger::setLogFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fname)<sp/>noexcept</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.flush();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.close();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_file.close();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logfileName<sp/>=<sp/>_fname;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_file.open(<ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_logfileName.c_str());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_file.is_open())</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>opening<sp/>log<sp/>file<sp/>for<sp/>writing\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a053a2e8221f39a3ce26d332f9732cebb" kindref="member">Tee</ref><sp/>tee(std::cout,<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_file);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.open(tee);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.set_auto_close(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output.is_open())</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;problem<sp/>opening<sp/>log<sp/>stream<sp/>tee\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283" refid="classngl_1_1_logger_1ab59c4cf36c93acb06fb90a2ff93dbfe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1ab59c4cf36c93acb06fb90a2ff93dbfe8" kindref="member">Logger::setColour</ref>(<ref refid="namespacengl_1a7f177ae6bdb79e784cd3404215d5d65e" kindref="member">Colours</ref><sp/>_c)<sp/>noexcept</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_colour<sp/>=<sp/>_c;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287" refid="classngl_1_1_logger_1a60e5b2298b20c23df7ac05b6ce967172" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a60e5b2298b20c23df7ac05b6ce967172" kindref="member">Logger::enableLineNumbers</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_lineNumber<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291" refid="classngl_1_1_logger_1a2172ef176f058677670d52d8128d576b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a2172ef176f058677670d52d8128d576b" kindref="member">Logger::disableLineNumbers</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_lineNumber<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295" refid="classngl_1_1_logger_1a17c575bde6df56cef76392b91c5fb691" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a17c575bde6df56cef76392b91c5fb691" kindref="member">Logger::enableTimeStamp</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_timeStamp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299" refid="classngl_1_1_logger_1a62b8c62416528dc1e8f87c4548dd7856" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a62b8c62416528dc1e8f87c4548dd7856" kindref="member">Logger::disableTimeStamp</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_timeStamp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classngl_1_1_logger_1abab222a434d8d9f7568cc8357676636b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1abab222a434d8d9f7568cc8357676636b" kindref="member">Logger::disableColours</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_disableColours<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="classngl_1_1_logger_1ab1fb914a415308a98f517a8e0e43fea2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1ab1fb914a415308a98f517a8e0e43fea2" kindref="member">Logger::enableColours</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_disableColours<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classngl_1_1_logger_1a66e2095912edca9c993301fb559e924f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a66e2095912edca9c993301fb559e924f" kindref="member">Logger::setLineNumberPad</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_i)<sp/>noexcept</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_pad<sp/>=<sp/>_i;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classngl_1_1_logger_1a2c0a1ebcb19f04a8c87794f51448e3bc" refkind="member"><highlight class="normal">boost::iostreams::stream&lt;Logger::Tee&gt;&amp;<sp/><ref refid="classngl_1_1_logger_1a2c0a1ebcb19f04a8c87794f51448e3bc" kindref="member">Logger::cout</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_output;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//Fri<sp/>Nov<sp/>21<sp/>12:20:09<sp/>2014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classngl_1_1_logger_1a88141a972c7f312ab289f1980bfba255" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_logger_1a88141a972c7f312ab289f1980bfba255" kindref="member">Logger::setTimeFormat</ref>(<ref refid="namespacengl_1a94a758b892aa6b873ec5876421e8692a" kindref="member">TimeFormat</ref><sp/>_f)<sp/>noexcept</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_f)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a94a758b892aa6b873ec5876421e8692aa346ff32eaa3c09983fb2ec057816d352" kindref="member">TimeFormat::TIME</ref>:<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_timeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%I:%M%p&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a94a758b892aa6b873ec5876421e8692aa0c0835611d57d0de2eb53377adfe1052" kindref="member">TimeFormat::TIMEDATE</ref>:<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_timeString<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%R<sp/>%D&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a94a758b892aa6b873ec5876421e8692aa0027a3f0349f7f2547ec6629f786119e" kindref="member">TimeFormat::TIMEDATEDAY</ref>:<sp/><ref refid="classngl_1_1_logger_1a4065e9e85913c7f8324e0e6a50cdb963" kindref="member">m_impl</ref>-&gt;m_timeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/Logger.cpp"/>
  </compounddef>
</doxygen>
