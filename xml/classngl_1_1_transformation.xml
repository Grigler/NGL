<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_transformation" kind="class" language="C++" prot="public">
    <compoundname>ngl::Transformation</compoundname>
    <includes refid="_transformation_8h" local="no">Transformation.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classngl_1_1_transformation_1ab7e1a25dc5d4fb2a27a441ad09a7b64d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Vec4</definition>
        <argsstring></argsstring>
        <name>Vec4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="45" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::Transformation::m_position</definition>
        <argsstring></argsstring>
        <name>m_position</name>
        <briefdescription>
<para>position </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="225" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="225" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a22cd0b1839dc28fa314908d1e1844ff9" compoundref="_transformation_8cpp" startline="115" endline="119">setPosition</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a2203132e1cb1780323586989de30c90e" compoundref="_transformation_8cpp" startline="132" endline="136">addPosition</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" compoundref="_transformation_8cpp" startline="184" endline="191">reset</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::Transformation::m_scale</definition>
        <argsstring></argsstring>
        <name>m_scale</name>
        <briefdescription>
<para>scale </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="229" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="229" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ab6d7ddf394cfe81a355684914cbe8116" compoundref="_transformation_8cpp" startline="79" endline="83">setScale</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a7aad271149ae4eb539441bc16388705a" compoundref="_transformation_8cpp" startline="98" endline="102">addScale</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" compoundref="_transformation_8cpp" startline="184" endline="191">reset</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::Transformation::m_rotation</definition>
        <argsstring></argsstring>
        <name>m_rotation</name>
        <briefdescription>
<para>rotation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="233" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="233" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a31a3b7ca56c72cb24a6d609ebe3467d5" compoundref="_transformation_8cpp" startline="148" endline="152">setRotation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ad9f8ab27f8d2aa5dc29a5f548cf23e58" compoundref="_transformation_8cpp" startline="169" endline="173">addRotation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" compoundref="_transformation_8cpp" startline="184" endline="191">reset</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::Transformation::m_isMatrixComputed</definition>
        <argsstring></argsstring>
        <name>m_isMatrixComputed</name>
        <briefdescription>
<para>boolean defines if the matrix is dirty or not </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="237" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="237" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a9aafba0281b74cc50cf58419185e154d" compoundref="_transformation_8cpp" startline="70" endline="76">setMatrix</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ab6d7ddf394cfe81a355684914cbe8116" compoundref="_transformation_8cpp" startline="79" endline="83">setScale</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a7aad271149ae4eb539441bc16388705a" compoundref="_transformation_8cpp" startline="98" endline="102">addScale</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a22cd0b1839dc28fa314908d1e1844ff9" compoundref="_transformation_8cpp" startline="115" endline="119">setPosition</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a2203132e1cb1780323586989de30c90e" compoundref="_transformation_8cpp" startline="132" endline="136">addPosition</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a31a3b7ca56c72cb24a6d609ebe3467d5" compoundref="_transformation_8cpp" startline="148" endline="152">setRotation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ad9f8ab27f8d2aa5dc29a5f548cf23e58" compoundref="_transformation_8cpp" startline="169" endline="173">addRotation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" compoundref="_transformation_8cpp" startline="184" endline="191">reset</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
        <referencedby refid="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" compoundref="_transformation_8cpp" startline="242" endline="254">operator*=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" compoundref="_transformation_8cpp" startline="256" endline="266">operator*</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 ngl::Transformation::m_matrix</definition>
        <argsstring></argsstring>
        <name>m_matrix</name>
        <briefdescription>
<para>matrix transformation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="241" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="241" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a9aafba0281b74cc50cf58419185e154d" compoundref="_transformation_8cpp" startline="70" endline="76">setMatrix</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
        <referencedby refid="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" compoundref="_transformation_8cpp" startline="242" endline="254">operator*=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" compoundref="_transformation_8cpp" startline="256" endline="266">operator*</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" compoundref="_transformation_8cpp" startline="267" endline="292">loadMatrixToShader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 ngl::Transformation::m_transposeMatrix</definition>
        <argsstring></argsstring>
        <name>m_transposeMatrix</name>
        <briefdescription>
<para>transpose matrix transformation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="245" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="245" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a9aafba0281b74cc50cf58419185e154d" compoundref="_transformation_8cpp" startline="70" endline="76">setMatrix</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
        <referencedby refid="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" compoundref="_transformation_8cpp" startline="242" endline="254">operator*=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" compoundref="_transformation_8cpp" startline="256" endline="266">operator*</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" compoundref="_transformation_8cpp" startline="267" endline="292">loadMatrixToShader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 ngl::Transformation::m_inverseMatrix</definition>
        <argsstring></argsstring>
        <name>m_inverseMatrix</name>
        <briefdescription>
<para>inverse matrix transformation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="249" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="249" bodyend="-1"/>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" compoundref="_transformation_8cpp" startline="53" endline="65">operator=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</referencedby>
        <referencedby refid="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" compoundref="_transformation_8cpp" startline="242" endline="254">operator*=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" compoundref="_transformation_8cpp" startline="256" endline="266">operator*</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" compoundref="_transformation_8cpp" startline="267" endline="292">loadMatrixToShader</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Transformation::Transformation</definition>
        <argsstring>() noexcept</argsstring>
        <name>Transformation</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="51" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="27" bodyend="38"/>
        <references refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</references>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1af1c424ffb1902337fc2c4bd4fa2e96f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Transformation::Transformation</definition>
        <argsstring>(const Transformation &amp;_t) noexcept</argsstring>
        <name>Transformation</name>
        <param>
          <type>const <ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>_t</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="55" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="40" bodyend="51"/>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
        <definition>Transformation &amp; ngl::Transformation::operator=</definition>
        <argsstring>(const Transformation &amp;_t) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>_t</declname>
        </param>
        <briefdescription>
<para>assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="59" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="53" bodyend="65"/>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1ab6d7ddf394cfe81a355684914cbe8116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setScale</definition>
        <argsstring>(const Vec3 &amp;_scale) noexcept</argsstring>
        <name>setScale</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_scale</declname>
        </param>
        <briefdescription>
<para>method to set the scale value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale value to set for the transform </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="64" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="79" bodyend="83"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1ae5b5742cd80940b869be7d0fd9bae363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setScale</definition>
        <argsstring>(const Vec4 &amp;_scale) noexcept</argsstring>
        <name>setScale</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> &amp;</type>
          <declname>_scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="65" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="85" bodyend="89"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1af0c9a538ab7a21a95375dc0b06a8ba1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setScale</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>setScale</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to set the scale value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z scale value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="73" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="91" bodyend="95"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
        <references refid="classngl_1_1_vec3_1a13e680783f23f676545ef12d12ea3f0b" compoundref="_vec3_8cpp" startline="33" endline="38">ngl::Vec3::set</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a7aad271149ae4eb539441bc16388705a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addScale</definition>
        <argsstring>(const Vec3 &amp;_scale) noexcept</argsstring>
        <name>addScale</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_scale</declname>
        </param>
        <briefdescription>
<para>method to add to the existing the scale value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale value to set for the transform </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="78" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="98" bodyend="102"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a1c35a5b1a3057eeeb308f1efeb409f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addScale</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>addScale</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to add to the existing the scale value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z scale value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="85" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="105" bodyend="112"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
        <references refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" compoundref="_vec3_8h" startline="310">ngl::Vec3::m_x</references>
        <references refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" compoundref="_vec3_8h" startline="311">ngl::Vec3::m_y</references>
        <references refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" compoundref="_vec3_8h" startline="312">ngl::Vec3::m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a22cd0b1839dc28fa314908d1e1844ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setPosition</definition>
        <argsstring>(const Vec4 &amp;_position) noexcept</argsstring>
        <name>setPosition</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <briefdescription>
<para>method to set the position </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_position</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="90" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="115" bodyend="119"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a0a623a30f2586792e01ac94427a3b063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setPosition</definition>
        <argsstring>(const Vec3 &amp;_position) noexcept</argsstring>
        <name>setPosition</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <briefdescription>
<para>method to set the position </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_position</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="95" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="120" bodyend="124"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a7e90de51abb4ac626c6e7df81e54c5b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setPosition</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>setPosition</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to set the position value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x position value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y position value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z position value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="102" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="125" bodyend="129"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_vec3_1a13e680783f23f676545ef12d12ea3f0b" compoundref="_vec3_8cpp" startline="33" endline="38">ngl::Vec3::set</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1ace3b2bf777ec407fe344ab6c9343502d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addPosition</definition>
        <argsstring>(const Vec4 &amp;_position) noexcept</argsstring>
        <name>addPosition</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <briefdescription>
<para>method add to the existing set the position </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_position</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a2203132e1cb1780323586989de30c90e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addPosition</definition>
        <argsstring>(const Vec3 &amp;_position) noexcept</argsstring>
        <name>addPosition</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <briefdescription>
<para>method add to the existing set the position </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_position</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="112" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="132" bodyend="136"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a1c4e0bce898444f8653e1ecfc6bee0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addPosition</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>addPosition</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to add to the existing position value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x position value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y position value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z position value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="119" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="137" bodyend="144"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" compoundref="_vec3_8h" startline="310">ngl::Vec3::m_x</references>
        <references refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" compoundref="_vec3_8h" startline="311">ngl::Vec3::m_y</references>
        <references refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" compoundref="_vec3_8h" startline="312">ngl::Vec3::m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a9aafba0281b74cc50cf58419185e154d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setMatrix</definition>
        <argsstring>(const Mat4 &amp;_m) noexcept</argsstring>
        <name>setMatrix</name>
        <param>
          <type>const <ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref> &amp;</type>
          <declname>_m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>method to set the matrix directly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to set the m_transform to need to also re-compute the others </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="125" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="70" bodyend="76"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
        <references refid="classngl_1_1_mat4_1a503a54499659a86f3846156bdc07a547" compoundref="_mat4_8cpp" startline="389" endline="401">ngl::Mat4::transpose</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a31a3b7ca56c72cb24a6d609ebe3467d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setRotation</definition>
        <argsstring>(const Vec3 &amp;_rotation) noexcept</argsstring>
        <name>setRotation</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_rotation</declname>
        </param>
        <briefdescription>
<para>method to set the rotation </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>rotation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>each value is an axis rotation as the values are calculated mRotationX * mRotationY * mRotationZ; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="132" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="148" bodyend="152"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a6648859834c3bb7ea7e2d2628beaa077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setRotation</definition>
        <argsstring>(const Vec4 &amp;_rotation) noexcept</argsstring>
        <name>setRotation</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> &amp;</type>
          <declname>_rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="133" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="153" bodyend="157"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1afd3e42f0f714c7fecd118d196d2916c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::setRotation</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>setRotation</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to set the rotation value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>each value is an axis rotation as the values are calculated mRotationX * mRotationY * mRotationZ; </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x rotation value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y rotation value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z rotation value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="142" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="160" bodyend="165"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_vec3_1a13e680783f23f676545ef12d12ea3f0b" compoundref="_vec3_8cpp" startline="33" endline="38">ngl::Vec3::set</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1ad9f8ab27f8d2aa5dc29a5f548cf23e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addRotation</definition>
        <argsstring>(const Vec3 &amp;_rotation) noexcept</argsstring>
        <name>addRotation</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_rotation</declname>
        </param>
        <briefdescription>
<para>method to add to the existing rotation </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>rotation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>each value is an axis rotation as the values are calculated mRotationX * mRotationY * mRotationZ; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="149" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="169" bodyend="173"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a107a65eadfd86425d616e554cd684009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::addRotation</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>addRotation</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to add to the existing rotation value in the transform </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>each value is an axis rotation as the values are calculated mRotationX * mRotationY * mRotationZ; </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x rotation value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y rotation value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z rotation value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="158" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="174" bodyend="180"/>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" compoundref="_vec3_8h" startline="310">ngl::Vec3::m_x</references>
        <references refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" compoundref="_vec3_8h" startline="311">ngl::Vec3::m_y</references>
        <references refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" compoundref="_vec3_8h" startline="312">ngl::Vec3::m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>reset</name>
        <briefdescription>
<para>a method to set all the transforms to the identity </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="162" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="184" bodyend="191"/>
        <references refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a66e96988d0ab9b5afd1c7d13bb99e389" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::Transformation::getScale</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getScale</name>
        <briefdescription>
<para>function to get the scale </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the scale </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="167" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="167" bodyend="167"/>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af07b2f24ab5f309bfa328cdbd5dbd6a8" compoundref="_x_m_l_serializer_8cpp" startline="271" endline="285">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a131990477c4496e157e4f1052f72c528" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::Transformation::getPosition</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getPosition</name>
        <briefdescription>
<para>function to get the position </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the position </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="172" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="172" bodyend="172"/>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af07b2f24ab5f309bfa328cdbd5dbd6a8" compoundref="_x_m_l_serializer_8cpp" startline="271" endline="285">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a20978038b330c02de0970ee3f43a43e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::Transformation::getRotation</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getRotation</name>
        <briefdescription>
<para>function to get the rotation </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the rotation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="177" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="177" bodyend="177"/>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af07b2f24ab5f309bfa328cdbd5dbd6a8" compoundref="_x_m_l_serializer_8cpp" startline="271" endline="285">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a7c5e1bd440e3d886af1234e1ca7dd342" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 ngl::Transformation::getMatrix</definition>
        <argsstring>() noexcept</argsstring>
        <name>getMatrix</name>
        <briefdescription>
<para>function to get the matrix. It computes the matrix if it&apos;s dirty </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="182" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="182" bodyend="182"/>
        <referencedby refid="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" compoundref="_transformation_8cpp" startline="294" endline="322">loadGlobalAndCurrentMatrixToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1af39e94f7001783f0f1c71f3ea2e6855d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 ngl::Transformation::getTransposeMatrix</definition>
        <argsstring>() noexcept</argsstring>
        <name>getTransposeMatrix</name>
        <briefdescription>
<para>function to get the transpose matrix. It computes the transpose matrix if it&apos;s dirty </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the transpose matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="187" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="187" bodyend="187"/>
        <referencedby refid="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" compoundref="_transformation_8cpp" startline="294" endline="322">loadGlobalAndCurrentMatrixToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1afb4aeb0df28ac861786ff81d3ab13305" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 ngl::Transformation::getInverseMatrix</definition>
        <argsstring>() noexcept</argsstring>
        <name>getInverseMatrix</name>
        <briefdescription>
<para>function to get the inverse matrix. It computes the inverse matrix if it&apos;s dirty </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the inverse matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="192" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="192" bodyend="192"/>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1e23852820b9154316c7c06e2b7ba051">ngl::NORMAL</references>
        <references refid="namespacengl_1abf8f4c8a842fda025d266ea490dd1ab0" compoundref="_vec2_8h" startline="286" endline="289">ngl::operator*</references>
        <referencedby refid="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" compoundref="_transformation_8cpp" startline="294" endline="322">loadGlobalAndCurrentMatrixToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::operator*=</definition>
        <argsstring>(const Transformation &amp;_m) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>_m</declname>
        </param>
        <briefdescription>
<para>*= operator </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_m</parametername>
</parameternamelist>
<parameterdescription>
<para>the transformation to combine </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>transpose matrix transformation</para><para>inverse matrix transformation </para>        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="197" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="242" bodyend="254"/>
        <references refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</references>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref></type>
        <definition>Transformation ngl::Transformation::operator*</definition>
        <argsstring>(const Transformation &amp;_m) noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>_m</declname>
        </param>
        <briefdescription>
<para>operator for Transform multiplication will do a matrix multiplication on each of the matrices </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is not const as we need to check that the members are calculated before we do the multiplication. This is deliberate </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_m</parametername>
</parameternamelist>
<parameterdescription>
<para>the Transform to multiply the current one by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>all the transform matrix members * my _m members </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="206" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="256" bodyend="266"/>
        <references refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</references>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::loadMatrixToShader</definition>
        <argsstring>(const std::string &amp;_param, const ActiveMatrix &amp;_which=ActiveMatrix::NORMAL) noexcept</argsstring>
        <name>loadMatrixToShader</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_param</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6" kindref="member">ActiveMatrix</ref> &amp;</type>
          <declname>_which</declname>
          <defval><ref refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1e23852820b9154316c7c06e2b7ba051" kindref="member">ActiveMatrix::NORMAL</ref></defval>
        </param>
        <briefdescription>
<para>load the current transform matrix to the shader </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_param</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter to set (varying mat4) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_which</parametername>
</parameternamelist>
<parameterdescription>
<para>which matrix mode to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="212" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="267" bodyend="292"/>
        <references refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</references>
        <references refid="classngl_1_1_singleton_1ab5d43c93fdc09ecadc5f6ebfd9460396">ngl::Singleton&lt; ShaderLib &gt;::instance</references>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1955bdc302911f376074eb9b02e56639">ngl::INVERSE</references>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1e23852820b9154316c7c06e2b7ba051">ngl::NORMAL</references>
        <references refid="classngl_1_1_shader_lib_1a3d32727943d66a8fd83add5ff197ad13" compoundref="_shader_lib_8cpp" startline="39" endline="42">ngl::ShaderLib::setShaderParamFromMat4</references>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6af2298dd538e1d707988cbcdc0810707e">ngl::TRANSPOSE</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::loadGlobalAndCurrentMatrixToShader</definition>
        <argsstring>(const std::string &amp;_param, Transformation &amp;_global, const ActiveMatrix &amp;_which=ActiveMatrix::NORMAL) noexcept</argsstring>
        <name>loadGlobalAndCurrentMatrixToShader</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_param</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>_global</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6" kindref="member">ActiveMatrix</ref> &amp;</type>
          <declname>_which</declname>
          <defval><ref refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1e23852820b9154316c7c06e2b7ba051" kindref="member">ActiveMatrix::NORMAL</ref></defval>
        </param>
        <briefdescription>
<para>load the current * global transform matrix to the shader </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_param</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter to set (varying mat4) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_which</parametername>
</parameternamelist>
<parameterdescription>
<para>which matrix mode to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="218" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="294" bodyend="322"/>
        <references refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" compoundref="_transformation_8cpp" startline="194" endline="240">computeMatrices</references>
        <references refid="classngl_1_1_transformation_1afb4aeb0df28ac861786ff81d3ab13305" compoundref="_transformation_8h" startline="192" endline="192">getInverseMatrix</references>
        <references refid="classngl_1_1_transformation_1a7c5e1bd440e3d886af1234e1ca7dd342" compoundref="_transformation_8h" startline="182" endline="182">getMatrix</references>
        <references refid="classngl_1_1_transformation_1af39e94f7001783f0f1c71f3ea2e6855d" compoundref="_transformation_8h" startline="187" endline="187">getTransposeMatrix</references>
        <references refid="classngl_1_1_singleton_1ab5d43c93fdc09ecadc5f6ebfd9460396">ngl::Singleton&lt; ShaderLib &gt;::instance</references>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1955bdc302911f376074eb9b02e56639">ngl::INVERSE</references>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6a1e23852820b9154316c7c06e2b7ba051">ngl::NORMAL</references>
        <references refid="classngl_1_1_shader_lib_1a3d32727943d66a8fd83add5ff197ad13" compoundref="_shader_lib_8cpp" startline="39" endline="42">ngl::ShaderLib::setShaderParamFromMat4</references>
        <references refid="namespacengl_1a061fb65c2d9c10f7f643e5a369a27db6af2298dd538e1d707988cbcdc0810707e">ngl::TRANSPOSE</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Transformation::computeMatrices</definition>
        <argsstring>() noexcept</argsstring>
        <name>computeMatrices</name>
        <briefdescription>
<para>method to compute the matrix, transpose and inverse matrix. set the m_bIsMatrixComputed variable to true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="253" column="1" bodyfile="/Users/jmacey/NGL/src/Transformation.cpp" bodystart="194" bodyend="240"/>
        <references refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" compoundref="_transformation_8h" startline="249">m_inverseMatrix</references>
        <references refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" compoundref="_transformation_8h" startline="237">m_isMatrixComputed</references>
        <references refid="classngl_1_1_mat4_1aec01dbaaa9c3181b51c018e26415c97c" compoundref="_mat4_8h" startline="295">ngl::Mat4::m_m</references>
        <references refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" compoundref="_transformation_8h" startline="241">m_matrix</references>
        <references refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" compoundref="_transformation_8h" startline="225">m_position</references>
        <references refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" compoundref="_transformation_8h" startline="233">m_rotation</references>
        <references refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" compoundref="_transformation_8h" startline="229">m_scale</references>
        <references refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" compoundref="_transformation_8h" startline="245">m_transposeMatrix</references>
        <references refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" compoundref="_vec3_8h" startline="310">ngl::Vec3::m_x</references>
        <references refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" compoundref="_vec3_8h" startline="311">ngl::Vec3::m_y</references>
        <references refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" compoundref="_vec3_8h" startline="312">ngl::Vec3::m_z</references>
        <references refid="classngl_1_1_mat4_1a68e625839a717caa974729099b874087" compoundref="_mat4_8cpp" startline="406" endline="415">ngl::Mat4::rotateX</references>
        <references refid="classngl_1_1_mat4_1a5b71bf928b9390406b58505be70474ed" compoundref="_mat4_8cpp" startline="418" endline="427">ngl::Mat4::rotateY</references>
        <references refid="classngl_1_1_mat4_1adcc7963bb92d9323cb716d467b67940d" compoundref="_mat4_8cpp" startline="430" endline="439">ngl::Mat4::rotateZ</references>
        <references refid="classngl_1_1_mat4_1aec9a5399afb759fee5859374035076de" compoundref="_mat4_8cpp" startline="450" endline="455">ngl::Mat4::scale</references>
        <references refid="classngl_1_1_mat4_1aa60245b206d27775160268f3a24c0cd3" compoundref="_mat4_8cpp" startline="442" endline="447">ngl::Mat4::translate</references>
        <references refid="classngl_1_1_mat4_1a503a54499659a86f3846156bdc07a547" compoundref="_mat4_8cpp" startline="389" endline="401">ngl::Mat4::transpose</references>
        <referencedby refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" compoundref="_transformation_8cpp" startline="27" endline="38">Transformation</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" compoundref="_transformation_8cpp" startline="184" endline="191">reset</referencedby>
        <referencedby refid="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" compoundref="_transformation_8cpp" startline="242" endline="254">operator*=</referencedby>
        <referencedby refid="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" compoundref="_transformation_8cpp" startline="256" endline="266">operator*</referencedby>
        <referencedby refid="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" compoundref="_transformation_8cpp" startline="267" endline="292">loadMatrixToShader</referencedby>
        <referencedby refid="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" compoundref="_transformation_8cpp" startline="294" endline="322">loadGlobalAndCurrentMatrixToShader</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classngl_1_1_transformation" kindref="compound">Transformation</ref> describes a transformation (translate, scale, rotation) modifed by j macey and included into NGL. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Bonnet </para></simplesect>
<simplesect kind="version"><para>1.5 </para></simplesect>
<simplesect kind="date"><para>14/03/10 Last Revision 14/03/10 </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1993">
        <label>ngl::Mat4</label>
        <link refid="classngl_1_1_mat4"/>
      </node>
      <node id="1994">
        <label>ngl::Vec3</label>
        <link refid="classngl_1_1_vec3"/>
      </node>
      <node id="1992">
        <label>ngl::Transformation</label>
        <link refid="classngl_1_1_transformation"/>
        <childnode refid="1993" relation="usage">
          <edgelabel>#m_transposeMatrix</edgelabel>
          <edgelabel>#m_inverseMatrix</edgelabel>
          <edgelabel>#m_matrix</edgelabel>
        </childnode>
        <childnode refid="1994" relation="usage">
          <edgelabel>#m_scale</edgelabel>
          <edgelabel>#m_position</edgelabel>
          <edgelabel>#m_rotation</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/Transformation.h" line="44" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Transformation.h" bodystart="43" bodyend="255"/>
    <listofallmembers>
      <member refid="classngl_1_1_transformation_1ace3b2bf777ec407fe344ab6c9343502d" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addPosition</name></member>
      <member refid="classngl_1_1_transformation_1a2203132e1cb1780323586989de30c90e" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addPosition</name></member>
      <member refid="classngl_1_1_transformation_1a1c4e0bce898444f8653e1ecfc6bee0ba" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addPosition</name></member>
      <member refid="classngl_1_1_transformation_1ad9f8ab27f8d2aa5dc29a5f548cf23e58" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addRotation</name></member>
      <member refid="classngl_1_1_transformation_1a107a65eadfd86425d616e554cd684009" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addRotation</name></member>
      <member refid="classngl_1_1_transformation_1a7aad271149ae4eb539441bc16388705a" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addScale</name></member>
      <member refid="classngl_1_1_transformation_1a1c35a5b1a3057eeeb308f1efeb409f4a" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>addScale</name></member>
      <member refid="classngl_1_1_transformation_1a8ec1f9a99975802624aee9f0125241e2" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>computeMatrices</name></member>
      <member refid="classngl_1_1_transformation_1afb4aeb0df28ac861786ff81d3ab13305" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>getInverseMatrix</name></member>
      <member refid="classngl_1_1_transformation_1a7c5e1bd440e3d886af1234e1ca7dd342" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>getMatrix</name></member>
      <member refid="classngl_1_1_transformation_1a131990477c4496e157e4f1052f72c528" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>getPosition</name></member>
      <member refid="classngl_1_1_transformation_1a20978038b330c02de0970ee3f43a43e1" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>getRotation</name></member>
      <member refid="classngl_1_1_transformation_1a66e96988d0ab9b5afd1c7d13bb99e389" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>getScale</name></member>
      <member refid="classngl_1_1_transformation_1af39e94f7001783f0f1c71f3ea2e6855d" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>getTransposeMatrix</name></member>
      <member refid="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>loadGlobalAndCurrentMatrixToShader</name></member>
      <member refid="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>loadMatrixToShader</name></member>
      <member refid="classngl_1_1_transformation_1ad1ac9ad3bd4f2f49065e70b5d8844017" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_inverseMatrix</name></member>
      <member refid="classngl_1_1_transformation_1ae9a0e9e5e2f602994aa3a01e0bf4fe94" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_isMatrixComputed</name></member>
      <member refid="classngl_1_1_transformation_1a935991f2b57c5bf06b458d55f33e2699" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_matrix</name></member>
      <member refid="classngl_1_1_transformation_1affe4f78c196d392ed8e9e5b2858fcd71" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_position</name></member>
      <member refid="classngl_1_1_transformation_1ad21b193235082b74c200d7b3022f445d" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_rotation</name></member>
      <member refid="classngl_1_1_transformation_1a12f81a6e3a88fa70b59094efb19ea8d6" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_scale</name></member>
      <member refid="classngl_1_1_transformation_1aa33724c2644e41bf703f8ae4e51028be" prot="protected" virt="non-virtual"><scope>ngl::Transformation</scope><name>m_transposeMatrix</name></member>
      <member refid="classngl_1_1_transformation_1ac555db268e028953a2e0d162704111ca" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>operator*</name></member>
      <member refid="classngl_1_1_transformation_1afc5b7e11d9ffbf1b442d8fcb0c392825" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>operator*=</name></member>
      <member refid="classngl_1_1_transformation_1a544cc6f9a9079331a00f188c824cc174" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>operator=</name></member>
      <member refid="classngl_1_1_transformation_1a429f78da7e2d45e245166e11746b64ca" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>reset</name></member>
      <member refid="classngl_1_1_transformation_1a9aafba0281b74cc50cf58419185e154d" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setMatrix</name></member>
      <member refid="classngl_1_1_transformation_1a22cd0b1839dc28fa314908d1e1844ff9" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setPosition</name></member>
      <member refid="classngl_1_1_transformation_1a0a623a30f2586792e01ac94427a3b063" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setPosition</name></member>
      <member refid="classngl_1_1_transformation_1a7e90de51abb4ac626c6e7df81e54c5b3" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setPosition</name></member>
      <member refid="classngl_1_1_transformation_1a31a3b7ca56c72cb24a6d609ebe3467d5" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setRotation</name></member>
      <member refid="classngl_1_1_transformation_1a6648859834c3bb7ea7e2d2628beaa077" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setRotation</name></member>
      <member refid="classngl_1_1_transformation_1afd3e42f0f714c7fecd118d196d2916c9" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setRotation</name></member>
      <member refid="classngl_1_1_transformation_1ab6d7ddf394cfe81a355684914cbe8116" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setScale</name></member>
      <member refid="classngl_1_1_transformation_1ae5b5742cd80940b869be7d0fd9bae363" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setScale</name></member>
      <member refid="classngl_1_1_transformation_1af0c9a538ab7a21a95375dc0b06a8ba1d" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>setScale</name></member>
      <member refid="classngl_1_1_transformation_1a6881e69cde5c7ba1e1da39e922b7fff6" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>Transformation</name></member>
      <member refid="classngl_1_1_transformation_1af1c424ffb1902337fc2c4bd4fa2e96f7" prot="public" virt="non-virtual"><scope>ngl::Transformation</scope><name>Transformation</name></member>
      <member refid="classngl_1_1_transformation_1ab7e1a25dc5d4fb2a27a441ad09a7b64d" prot="private" virt="non-virtual"><scope>ngl::Transformation</scope><name>Vec4</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
