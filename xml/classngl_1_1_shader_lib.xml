<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_shader_lib" kind="class" language="C++" prot="public">
    <compoundname>ngl::ShaderLib</compoundname>
    <basecompoundref refid="classngl_1_1_singleton" prot="public" virt="non-virtual">ngl::Singleton&lt; ShaderLib &gt;</basecompoundref>
    <includes refid="_shader_lib_8h" local="no">ShaderLib.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classngl_1_1_shader_lib_1ad3267cc597548f221b80011bb9c78883" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Singleton&lt; ShaderLib &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; ShaderLib &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="123" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>, <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> * &gt;</type>
        <definition>std::unordered_map&lt;std::string,ShaderProgram *&gt; ngl::ShaderLib::m_shaderPrograms</definition>
        <argsstring></argsstring>
        <name>m_shaderPrograms</name>
        <briefdescription>
<para>a map of shader Programs using name as key to shader pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="640" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="640" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1af8ee83bc19a41b2fec85b44516ac307c" compoundref="_shader_lib_8cpp" startline="195" endline="202">reset</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a1f057ebf8ff9744974cf6f7fb7857810" compoundref="_shader_lib_8cpp" startline="206" endline="226">getAttribLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" compoundref="_shader_lib_8cpp" startline="492" endline="504">linkProgramObject</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" compoundref="_shader_lib_8cpp" startline="507" endline="524">use</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aacd2aebc2534b254cf96ef764f061bfd" compoundref="_shader_lib_8cpp" startline="528" endline="541">getProgramID</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" compoundref="_shader_lib_8cpp" startline="544" endline="556">autoRegisterUniforms</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" compoundref="_shader_lib_8cpp" startline="559" endline="568">bindAttribute</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a77d06945bdff2251cd5fc03a2676720a" compoundref="_shader_lib_8cpp" startline="572" endline="581">bindFragDataLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" compoundref="_shader_lib_8cpp" startline="594" endline="609">operator[]</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aff7233e389bc6815fda0086f3beea814" compoundref="_shader_lib_8cpp" startline="639" endline="658">getUniformBlockIndex</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1adbe11de9255b3090e52f9f9c6c3d2f76" compoundref="_shader_lib_8cpp" startline="771" endline="779">printRegisteredUniforms</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ab27e3d6818579bfca620307afda3ef7c" compoundref="_shader_lib_8cpp" startline="781" endline="799">printProperties</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>, <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> * &gt;</type>
        <definition>std::unordered_map&lt;std::string,Shader *&gt; ngl::ShaderLib::m_shaders</definition>
        <argsstring></argsstring>
        <name>m_shaders</name>
        <briefdescription>
<para>map of shaders using name as key </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="644" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="644" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1af8ee83bc19a41b2fec85b44516ac307c" compoundref="_shader_lib_8cpp" startline="195" endline="202">reset</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a6050ac0e403532ac507faa8177ab7957" compoundref="_shader_lib_8cpp" startline="246" endline="260">getShaderID</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a9d11b8ed61d72064c47a79e8200a0f3d" compoundref="_shader_lib_8cpp" startline="262" endline="277">getShader</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" compoundref="_shader_lib_8cpp" startline="287" endline="299">compileShader</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a4c4bf5247f361b9e8a03bbf781ca3ef7" compoundref="_shader_lib_8cpp" startline="332" endline="342">loadShaderSource</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" compoundref="_shader_lib_8cpp" startline="477" endline="488">loadShaderSourceFromString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> *</type>
        <definition>ShaderProgram* ngl::ShaderLib::m_nullProgram</definition>
        <argsstring></argsstring>
        <name>m_nullProgram</name>
        <briefdescription>
<para>null <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> so we can return when shader not know; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="648" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="648" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" compoundref="_shader_lib_8cpp" startline="594" endline="609">operator[]</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" compoundref="_shader_lib_8cpp" startline="632" endline="636">useNullProgram</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>std::string ngl::ShaderLib::m_currentShader</definition>
        <argsstring></argsstring>
        <name>m_currentShader</name>
        <briefdescription>
<para>the name of the currently active shader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="652" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="652" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a6050ac0e403532ac507faa8177ab7957" compoundref="_shader_lib_8cpp" startline="246" endline="260">getShaderID</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a9d11b8ed61d72064c47a79e8200a0f3d" compoundref="_shader_lib_8cpp" startline="262" endline="277">getShader</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" compoundref="_shader_lib_8cpp" startline="507" endline="524">use</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" compoundref="_shader_lib_8cpp" startline="594" endline="609">operator[]</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" compoundref="_shader_lib_8cpp" startline="632" endline="636">useNullProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aff7233e389bc6815fda0086f3beea814" compoundref="_shader_lib_8cpp" startline="639" endline="658">getUniformBlockIndex</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ab27e3d6818579bfca620307afda3ef7c" compoundref="_shader_lib_8cpp" startline="781" endline="799">printProperties</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" compoundref="_shader_lib_8cpp" startline="802" endline="805">setUniform</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" compoundref="_shader_lib_8cpp" startline="806" endline="810">setRegisteredUniform</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::ShaderLib::m_debugState</definition>
        <argsstring></argsstring>
        <name>m_debugState</name>
        <briefdescription>
<para>flag to indicate the debug state </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="656" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="656" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_lib_1a74aaabcafbd0f61240c9b39455e65459" prot="protected" static="no" mutable="no">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::ShaderLib::m_numShaders</definition>
        <argsstring></argsstring>
        <name>m_numShaders</name>
        <briefdescription>
<para>the nunmber of shaders loaded </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="660" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="660" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::createShaderProgram</definition>
        <argsstring>(const std::string &amp;_name) noexcept</argsstring>
        <name>createShaderProgram</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>create an empty <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> for us to attach shaders etc to </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to link </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="66" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="301" bodyend="306"/>
        <references refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" compoundref="_shader_lib_8h" startline="656">m_debugState</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::attachShader</definition>
        <argsstring>(const std::string &amp;_name, ShaderType _type) noexcept</argsstring>
        <name>attachShader</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref></type>
          <declname>_type</declname>
        </param>
        <briefdescription>
<para>attatch a <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> to the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> referenced by _name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to attach </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="71" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="279" bodyend="284"/>
        <references refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" compoundref="_shader_lib_8h" startline="656">m_debugState</references>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::attachShaderToProgram</definition>
        <argsstring>(const std::string &amp;_program, const std::string &amp;_shader) noexcept</argsstring>
        <name>attachShaderToProgram</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_program</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shader</declname>
        </param>
        <briefdescription>
<para>attatch a <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> to the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> referenced by _name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_program</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to attach to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> to attach to Program </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="78" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="308" bodyend="329"/>
        <references refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" compoundref="_shader_lib_8h" startline="656">m_debugState</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aacd2aebc2534b254cf96ef764f061bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::ShaderLib::getProgramID</definition>
        <argsstring>(const std::string &amp;_name) noexcept</argsstring>
        <name>getProgramID</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>get the Program ID of the GL Program by name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the id of the program found or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="84" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="528" bodyend="541"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::compileShader</definition>
        <argsstring>(const std::string &amp;_name) noexcept</argsstring>
        <name>compileShader</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>compile the shader from _name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to compile </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="89" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="287" bodyend="299"/>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::linkProgramObject</definition>
        <argsstring>(const std::string &amp;_name) noexcept</argsstring>
        <name>linkProgramObject</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>link the program Object from _name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to link </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="94" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="492" bodyend="504"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a1cd528cf703f959f064693968f90352f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::toggleDebug</definition>
        <argsstring>() noexcept</argsstring>
        <name>toggleDebug</name>
        <briefdescription>
<para>toggle debug mode </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="98" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::use</definition>
        <argsstring>(const std::string &amp;_name) noexcept</argsstring>
        <name>use</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>set active shader to name (if not found sets glProgramObject(0) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="103" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="507" bodyend="524"/>
        <references refid="glew_8h_1ad8e40c882d63c4671dea2ca2dfcf3046" compoundref="glew_8h" startline="1964">glUseProgram</references>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::bindAttribute</definition>
        <argsstring>(const std::string &amp;_programName, GLuint _index, const std::string &amp;_attribName) noexcept</argsstring>
        <name>bindAttribute</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_programName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_index</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_attribName</declname>
        </param>
        <briefdescription>
<para>bind an attribute at index by name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_programName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute index to bind </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_attribName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the attribute in the shader to be bound to this index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>if using glsl &gt; 400 we can use layout qualifiers and don&apos;t need this </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="112" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="559" bodyend="568"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a77d06945bdff2251cd5fc03a2676720a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::bindFragDataLocation</definition>
        <argsstring>(const std::string &amp;_programName, GLuint _index, const std::string &amp;_attribName) noexcept</argsstring>
        <name>bindFragDataLocation</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_programName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_index</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_attribName</declname>
        </param>
        <briefdescription>
<para>fragment shader output location </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_programName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute index to bind </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_attribName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the attribute in the shader to be bound to this index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>if using glsl &gt; 420 we can use layout qualifiers and don&apos;t need this </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="120" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="572" bodyend="581"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> *</type>
        <definition>ShaderProgram * ngl::ShaderLib::operator[]</definition>
        <argsstring>(const std::string &amp;_name) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>accessor to the shader program using the subscript operatoir </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> if name exist else null shader program </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="127" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="594" bodyend="609"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" compoundref="_shader_lib_8h" startline="648">m_nullProgram</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aa5939b620130f3fb76b7f55d869e7132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> *</type>
        <definition>ShaderProgram * ngl::ShaderLib::operator[]</definition>
        <argsstring>(const char *_name) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>accessor to the shader program using the subscript operatoir </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> if name exist else null shader program </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="133" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="613" bodyend="629"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" compoundref="_shader_lib_8h" startline="648">m_nullProgram</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a257b32e95c4ef7931abdfbcee465d792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadShader</definition>
        <argsstring>(const std::string &amp;_shaderName, const std::string &amp;_vert, const std::string &amp;_frag, const std::string &amp;_geo=&quot;&quot;, const bool _exitOnError=false) noexcept</argsstring>
        <name>loadShader</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_vert</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_frag</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_geo</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>_exitOnError</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>method to load shaders </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader to be stored in the Manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_vert</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex shader to load </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_frag</parametername>
</parameternamelist>
<parameterdescription>
<para>the fragment shader to load </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_geo</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional geo shader to load </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_exitOnError</parametername>
</parameternamelist>
<parameterdescription>
<para>exit if there is an error in the shader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="142" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="167" bodyend="191"/>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7dab22957ad8078e8d73de61aef53d13a74">ngl::GEOMETRY</references>
        <references refid="_types_8h_1a9362db426901a67b0ce07e7bbb52ac14" compoundref="_types_8h" startline="143">NGL_UNUSED</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngl::ShaderLib::loadFromJson</definition>
        <argsstring>(const std::string &amp;_fname) noexcept</argsstring>
        <name>loadFromJson</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_fname</declname>
        </param>
        <briefdescription>
<para>method to load multiple shaders from a json file </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the json resource file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="148" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="372" bodyend="473"/>
        <references refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</references>
        <references refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</references>
        <references refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" compoundref="_shader_lib_8cpp" startline="287" endline="299">compileShader</references>
        <references refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</references>
        <references refid="classngl_1_1_shader_lib_1a7627c2bc4f66948e8db9ffaca468382d" compoundref="_shader_lib_8cpp" startline="345" endline="369">getShaderType</references>
        <references refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" compoundref="_shader_lib_8cpp" startline="492" endline="504">linkProgramObject</references>
        <references refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" compoundref="_shader_lib_8cpp" startline="477" endline="488">loadShaderSourceFromString</references>
        <references refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" compoundref="rapidjson_8h" startline="322">SizeType</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a0c00c584894aad891271b94a3c232583" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::debugOn</definition>
        <argsstring>() noexcept</argsstring>
        <name>debugOn</name>
        <briefdescription>
<para>Toggle debug mode on. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="152" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a92cee2d5376882d80f78e46c8a7f27a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::debugOff</definition>
        <argsstring>() noexcept</argsstring>
        <name>debugOff</name>
        <briefdescription>
<para>Toggle debug mode off. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="156" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ae289466bf151bc87fb5d6910eb7e05eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ngl::ShaderLib::getNumShaders</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getNumShaders</name>
        <briefdescription>
<para>get the number of shaders stored </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of shaders </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="161" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a3d32727943d66a8fd83add5ff197ad13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParamFromMat4</definition>
        <argsstring>(const std::string &amp;_paramName, Mat4 _p1) noexcept</argsstring>
        <name>setShaderParamFromMat4</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 int param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to set from (float 16) value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="168" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="39" bodyend="42"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <referencedby refid="classngl_1_1_transformation_1a360dc0c8ed23a4c50303145c5e50bd6e" compoundref="_transformation_8cpp" startline="267" endline="292">ngl::Transformation::loadMatrixToShader</referencedby>
        <referencedby refid="classngl_1_1_transformation_1af3e633320652186de7028fee596e102a" compoundref="_transformation_8cpp" startline="294" endline="322">ngl::Transformation::loadGlobalAndCurrentMatrixToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1abc19cd9c5f28d4220ac5710f26dcb00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniformFromMat4</definition>
        <argsstring>(const std::string &amp;_registeredUniformName, Mat4 _p1) noexcept</argsstring>
        <name>setRegisteredUniformFromMat4</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_registeredUniformName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 int param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_registeredUniformName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the registered uniform in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to set from (float 16) value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="175" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="45" bodyend="48"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ad61c98f4da4b7006cacc08a426a42bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParamFromMat3</definition>
        <argsstring>(const std::string &amp;_paramName, Mat3 _p1) noexcept</argsstring>
        <name>setShaderParamFromMat3</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 int param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to set from (float 16) value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="182" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="51" bodyend="54"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a910d2677edf9ee0d69db82480e679eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniformFromMat3</definition>
        <argsstring>(const std::string &amp;_paramName, Mat3 _p1) noexcept</argsstring>
        <name>setRegisteredUniformFromMat3</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the registered uniform from Max3x3 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_uniformName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the uniform in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to set from (float 16) value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="188" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="57" bodyend="60"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9aa91de653fccd15e7ffaa9719e68139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParamFromVec4</definition>
        <argsstring>(const std::string &amp;_paramName, Vec4 _p1) noexcept</argsstring>
        <name>setShaderParamFromVec4</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 int param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set from (float 4) value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="196" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1adcdd0bcb1ec3cd45024222cfefa73827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniformVec4</definition>
        <argsstring>(const std::string &amp;_paramName, Vec4 _p1) noexcept</argsstring>
        <name>setRegisteredUniformVec4</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform from an <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="203" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a1a08cba1857570203ff929362f8cbe9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParamFromColour</definition>
        <argsstring>(const std::string &amp;_paramName, Colour _p1) noexcept</argsstring>
        <name>setShaderParamFromColour</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 int param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set from (float 4) value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="210" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ad9b1c61540a1fd05e94971c1623ac128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniformFromColour</definition>
        <argsstring>(const std::string &amp;_paramName, Colour _p1) noexcept</argsstring>
        <name>setRegisteredUniformFromColour</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform from an <ref refid="classngl_1_1_colour" kindref="compound">Colour</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="217" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ab9aa9d02fbd64db1c8c227853c1efefd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniformVec3</definition>
        <argsstring>(const std::string &amp;_paramName, Vec3 _p1) noexcept</argsstring>
        <name>setRegisteredUniformVec3</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform from an Vector </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="223" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a78009d4b4f73b173c1c81c8b16530643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniformVec2</definition>
        <argsstring>(const std::string &amp;_paramName, Vec2 _p1) noexcept</argsstring>
        <name>setRegisteredUniformVec2</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform from a Vector </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="229" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a5856327bd1fa7704a8d965d99332a7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParam1i</definition>
        <argsstring>(const std::string &amp;_paramName, int _p1) noexcept</argsstring>
        <name>setShaderParam1i</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 int param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="237" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1adebd60a39fba7f231ee9c9c790612fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform1i</definition>
        <argsstring>(const std::string &amp;_paramName, int _p1) noexcept</argsstring>
        <name>setRegisteredUniform1i</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="243" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a49843176da69f14b25713a8657453885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParam1f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1) noexcept</argsstring>
        <name>setShaderParam1f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 1 float param note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="250" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="153" bodyend="157"/>
        <referencedby refid="classngl_1_1_light_1a8dceeb672a20505e05ce0f62976eb311" compoundref="_light_8cpp" startline="105" endline="139">ngl::Light::loadToShader</referencedby>
        <referencedby refid="classngl_1_1_spot_light_1ab5b407ff1b1489463898bbecc8130d3d" compoundref="_spot_light_8cpp" startline="121" endline="161">ngl::SpotLight::loadToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9210462acc20cd79a256a9674ab30692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform1f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1) noexcept</argsstring>
        <name>setRegisteredUniform1f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="257" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="160" bodyend="163"/>
        <referencedby refid="classngl_1_1_text_1a59aa976f5726b2b69ed95c8a0668c0f2" compoundref="_text_8cpp" startline="265" endline="311">ngl::Text::renderText</referencedby>
        <referencedby refid="classngl_1_1_text_1af325f6e59eea7727d2476c5d667bb899" compoundref="_text_8cpp" startline="314" endline="329">ngl::Text::setScreenSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ac97e1e993ad81aecc7ce8c78516963c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParam2f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1, float _p2) noexcept</argsstring>
        <name>setShaderParam2f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p2</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 2 float params note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="265" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a52eca9f0f6d6566a7f3064d7dd6315fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform2f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1, float _p2) noexcept</argsstring>
        <name>setRegisteredUniform2f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p2</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="272" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="133" bodyend="136"/>
        <referencedby refid="classngl_1_1_text_1a0c4cdf067afabdf1b4e111af36c09d87" compoundref="_text_8cpp" startline="361" endline="368">ngl::Text::setTransform</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a912550dd1d05853a49a1e458f250614f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParam3f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1, float _p2, float _p3) noexcept</argsstring>
        <name>setShaderParam3f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p3</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 3 float params note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p3</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="281" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="114" bodyend="117"/>
        <referencedby refid="classngl_1_1_spot_light_1ab5b407ff1b1489463898bbecc8130d3d" compoundref="_spot_light_8cpp" startline="121" endline="161">ngl::SpotLight::loadToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aac8e14e81625357cbc5da8659d3709eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform3f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1, float _p2, float _p3) noexcept</argsstring>
        <name>setRegisteredUniform3f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p3</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p3</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="289" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="120" bodyend="123"/>
        <referencedby refid="classngl_1_1_text_1a82485ee4aeec828d207440da74e40993" compoundref="_text_8cpp" startline="340" endline="348">ngl::Text::setColour</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9faf1fcc53d2dbec5fd9c9e239808e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setShaderParam4f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1, float _p2, float _p3, float _p4) noexcept</argsstring>
        <name>setShaderParam4f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p4</declname>
        </param>
        <briefdescription>
<para>set a shader param by name for 4 float params note that the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p3</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p4</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="299" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="102" bodyend="105"/>
        <referencedby refid="classngl_1_1_light_1a8dceeb672a20505e05ce0f62976eb311" compoundref="_light_8cpp" startline="105" endline="139">ngl::Light::loadToShader</referencedby>
        <referencedby refid="classngl_1_1_spot_light_1ab5b407ff1b1489463898bbecc8130d3d" compoundref="_spot_light_8cpp" startline="121" endline="161">ngl::SpotLight::loadToShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1acf163862b0e3f3e1df2880b3d2f515b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform4f</definition>
        <argsstring>(const std::string &amp;_paramName, float _p1, float _p2, float _p3, float _p4) noexcept</argsstring>
        <name>setRegisteredUniform4f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_p4</declname>
        </param>
        <briefdescription>
<para>set the pre-registered uniform </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter in the shader to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_p3</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="307" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ab27e3d6818579bfca620307afda3ef7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::printProperties</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>printProperties</name>
        <briefdescription>
<para>print the properties of the currently active shader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="311" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="781" bodyend="799"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1af8ee83bc19a41b2fec85b44516ac307c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>reset</name>
        <briefdescription>
<para>reset the <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> manager which will delete all shader objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="315" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="195" bodyend="202"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a1f057ebf8ff9744974cf6f7fb7857810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
        <definition>GLint ngl::ShaderLib::getAttribLocation</definition>
        <argsstring>(const std::string &amp;_shaderName, const std::string &amp;_paramName) noexcept</argsstring>
        <name>getAttribLocation</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <briefdescription>
<para>return the index to the shader attribute location </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader program </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the Attrib index location </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="322" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="206" bodyend="226"/>
        <references refid="glew_8h_1a20f33502cbda8885498352fcdbf71fe8" compoundref="glew_8h" startline="1925">glGetAttribLocation</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a4c4bf5247f361b9e8a03bbf781ca3ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadShaderSource</definition>
        <argsstring>(std::string _shaderName, std::string _sourceFile) noexcept</argsstring>
        <name>loadShaderSource</name>
        <param>
          <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
          <declname>_shaderName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
          <declname>_sourceFile</declname>
        </param>
        <briefdescription>
<para>Load shader source from text file the path will be relative from current dir unless a full path is specified. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader program </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_sourceFile</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="329" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="332" bodyend="342"/>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadShaderSourceFromString</definition>
        <argsstring>(const std::string &amp;_shaderName, const std::string &amp;_string) noexcept</argsstring>
        <name>loadShaderSourceFromString</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_string</declname>
        </param>
        <briefdescription>
<para>load shader from a C string, useful for including code in headers etc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader program </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_string</parametername>
</parameternamelist>
<parameterdescription>
<para>the text array of shader data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="336" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="477" bodyend="488"/>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::useNullProgram</definition>
        <argsstring>() noexcept</argsstring>
        <name>useNullProgram</name>
        <briefdescription>
<para>use the null program (this will turn off any shaders), if using some drivers this will go to the fixed function pipeline </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="341" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="632" bodyend="636"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" compoundref="_shader_lib_8h" startline="648">m_nullProgram</references>
        <references refid="classngl_1_1_shader_program_1adec315c2b48d5fa2917eeaed84e2eb80" compoundref="_shader_program_8cpp" startline="52" endline="58">ngl::ShaderProgram::use</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aff7233e389bc6815fda0086f3beea814" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::ShaderLib::getUniformBlockIndex</definition>
        <argsstring>(const std::string &amp;_uniformBlockName) const  noexcept</argsstring>
        <name>getUniformBlockIndex</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_uniformBlockName</declname>
        </param>
        <briefdescription>
<para>grab the index of the unifrom block, this may not be supported on all GPU&apos;s </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_uniformBlockName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the block to get the index for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the block or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="348" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="639" bodyend="658"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a3d764de0e9e24fb638d95f6b75a86bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::registerUniform</definition>
        <argsstring>(const std::string &amp;_shaderName, const std::string &amp;_uniformName) noexcept</argsstring>
        <name>registerUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_uniformName</declname>
        </param>
        <briefdescription>
<para>register a uniform so we don&apos;t have to call glGet functions when using </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader to set the param for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_uniformName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the uniform to register </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::autoRegisterUniforms</definition>
        <argsstring>(const std::string &amp;_shaderName) noexcept</argsstring>
        <name>autoRegisterUniforms</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <briefdescription>
<para>will parse the shader source and find any uniforms it can and register them </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader to set the param for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="360" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="544" bodyend="556"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
        <referencedby refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</referencedby>
        <referencedby refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1adbe11de9255b3090e52f9f9c6c3d2f76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::printRegisteredUniforms</definition>
        <argsstring>(const std::string &amp;_shader) const  noexcept</argsstring>
        <name>printRegisteredUniforms</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shader</declname>
        </param>
        <briefdescription>
<para>debug print any registered uniforms </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="364" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="771" bodyend="779"/>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="371" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="802" bodyend="805"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="379" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="806" bodyend="810"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1af056261adebd696be38d34028de83620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0, Real _v1) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="387" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="812" bodyend="815"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a998d8984bdaa4635ad54da69a746ecf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0, Real _v1) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="396" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="816" bodyend="820"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a78280a831f4925875fcea32da3ba1afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0, Real _v1, Real _v2) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="405" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="822" bodyend="826"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9d977ef51ab4ef00d074ecc7ec3cc49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0, Real _v1, Real _v2) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="415" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="827" bodyend="830"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a99c385f78005e0442c3db10ec9f72a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0, Real _v1, Real _v2, Real _v3) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v2</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="425" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="832" bodyend="835"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aab4524ffd4af09af37853325c3168ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Real _v0, Real _v1, Real _v2, Real _v3) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v2</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>the float value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="436" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="836" bodyend="839"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ae9d08c56fb64b8b8b040dab9798451ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="443" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="841" bodyend="844"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a2d07158d621a4e27f1bebd0dea9c62d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="451" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="845" bodyend="848"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a664c029554da0effdda60e3aa8b5dea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0, GLint _v1) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="459" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="850" bodyend="853"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a96373cb1967f31b33b84b8b834eb5fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0, GLint _v1) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="468" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="854" bodyend="857"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a142a344ccd99ddcc7ee251277c56f64f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0, GLint _v1, GLint _v2) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="477" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="859" bodyend="862"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a97d0cbcf60a6b90654e6a25b36efa991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0, GLint _v1, GLint _v2) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="487" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="863" bodyend="866"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1af7b81db7da0ac8c89697fcdf613da88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0, GLint _v1, GLint _v2, GLint _v3) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v2</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="497" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="868" bodyend="871"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1af1a22edddd86a1d9a68f63ea632e9722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, GLint _v0, GLint _v1, GLint _v2, GLint _v3) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v2</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="508" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="872" bodyend="875"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a076ebb116e921686843433e620675372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Colour _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the colour value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="515" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="877" bodyend="880"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a34967680b618d39d567e4d3aba834fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Colour _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_colour" kindref="compound">Colour</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="523" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="881" bodyend="884"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a5b9b376ca38fc9d74c777da14f17c72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Vec2 _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="530" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="885" bodyend="888"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ae5e4e6940c9aec060ecda29624d5d001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Vec2 _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="538" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="889" bodyend="892"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a744b65785a5c9519abd60ef8323a24b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Vec3 _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="545" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="893" bodyend="896"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a4f43d44f447162c31b384728bc7f11c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Vec3 _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="553" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="897" bodyend="900"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9540be112311cb01cca6b7a2fb4d46bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Vec4 _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="560" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="901" bodyend="904"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a58f3da05389830651f5e8e0547dca178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Vec4 _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="568" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="905" bodyend="908"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a15311b64bcc2e4a9eeee49b6069a3188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Mat3 _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="575" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="910" bodyend="914"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a1ee7ee22adc70d5b94c6fa710eb02025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Mat3 _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="583" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="915" bodyend="919"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a522a19f96b26bc69c4208340ef5fce49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Mat4 _v0) noexcept</argsstring>
        <name>setUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms the shader must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="590" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="921" bodyend="924"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a8a6284a263bdf49aa9ad9fef1eea5e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::setRegisteredUniform</definition>
        <argsstring>(const std::string &amp;_paramName, Mat4 _v0) noexcept</argsstring>
        <name>setRegisteredUniform</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_paramName</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>overloaded method to set shader Uniforms that have been pre-registered using auto-register uniforms method must be the currently active shader of else this will fail </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_paramName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Uniform to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref> value of the parameter to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="598" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="925" bodyend="928"/>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a6050ac0e403532ac507faa8177ab7957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::ShaderLib::getShaderID</definition>
        <argsstring>(const std::string &amp;_shaderName) noexcept</argsstring>
        <name>getShaderID</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <briefdescription>
<para>method to return a shader ID </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader who&apos;s ID to return </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="603" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="246" bodyend="260"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a9d11b8ed61d72064c47a79e8200a0f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_shader" kindref="compound">ngl::Shader</ref> *</type>
        <definition>ngl::Shader * ngl::ShaderLib::getShader</definition>
        <argsstring>(const std::string &amp;_shaderName) noexcept</argsstring>
        <name>getShader</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_shaderName</declname>
        </param>
        <briefdescription>
<para>method to return the specified shader object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shaderName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the shader to return </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="609" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="262" bodyend="277"/>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" compoundref="_shader_lib_8h" startline="644">m_shaders</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a7627c2bc4f66948e8db9ffaca468382d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref></type>
        <definition>ShaderType ngl::ShaderLib::getShaderType</definition>
        <argsstring>(const std::string &amp;type) noexcept</argsstring>
        <name>getShaderType</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get shader type from string (used for json parsing) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="616" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="345" bodyend="369"/>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7daac404d7ce6ca5862e9b8a2641fbafd90">ngl::COMPUTE</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7dab22957ad8078e8d73de61aef53d13a74">ngl::GEOMETRY</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7dab50339a10e1de285ac99d4c3990b8693">ngl::NONE</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da46501e52c3411c5c5879a8fe4432d885">ngl::TESSCONTROL</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da1094991cfaebfc09516e6eee108f83d2">ngl::TESSEVAL</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
        <referencedby refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" compoundref="_shader_lib_8cpp" startline="372" endline="473">loadFromJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadTextShaders</definition>
        <argsstring>() noexcept</argsstring>
        <name>loadTextShaders</name>
        <briefdescription>
<para>this will load the pre-defined text rendering shaders these are stored in the file src/shaders/TextShaders.h </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="621" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="660" bodyend="686"/>
        <references refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</references>
        <references refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</references>
        <references refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" compoundref="_shader_lib_8cpp" startline="544" endline="556">autoRegisterUniforms</references>
        <references refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" compoundref="_shader_lib_8cpp" startline="559" endline="568">bindAttribute</references>
        <references refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" compoundref="_shader_lib_8cpp" startline="287" endline="299">compileShader</references>
        <references refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" compoundref="_shader_lib_8cpp" startline="492" endline="504">linkProgramObject</references>
        <references refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" compoundref="_shader_lib_8cpp" startline="477" endline="488">loadShaderSourceFromString</references>
        <references refid="_text_shaders_8h_1a59273a260a531f7859d10b943268925a" compoundref="_text_shaders_8h" startline="26">textFragmentShader</references>
        <references refid="_text_shaders_8h_1a6e35ec192b803deb45733256c32bb3be" compoundref="_text_shaders_8h" startline="5">textVertexShader</references>
        <references refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" compoundref="_shader_lib_8cpp" startline="507" endline="524">use</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadColourShaders</definition>
        <argsstring>() noexcept</argsstring>
        <name>loadColourShaders</name>
        <briefdescription>
<para>this will load the pre-defined text rendering shaders these are stored in the file src/shaders/ColourShaders.h </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="626" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="689" bodyend="713"/>
        <references refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</references>
        <references refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</references>
        <references refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" compoundref="_shader_lib_8cpp" startline="544" endline="556">autoRegisterUniforms</references>
        <references refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" compoundref="_shader_lib_8cpp" startline="559" endline="568">bindAttribute</references>
        <references refid="_colour_shaders_8h_1ad14fa863298942f700dc65635b3dcadc" compoundref="_colour_shaders_8h" startline="33">colourFragmentShader</references>
        <references refid="_colour_shaders_8h_1a922fd1d60ce438daea39baf8c1ff945c" compoundref="_colour_shaders_8h" startline="5">colourVertexShader</references>
        <references refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" compoundref="_shader_lib_8cpp" startline="287" endline="299">compileShader</references>
        <references refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" compoundref="_shader_lib_8cpp" startline="492" endline="504">linkProgramObject</references>
        <references refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" compoundref="_shader_lib_8cpp" startline="477" endline="488">loadShaderSourceFromString</references>
        <references refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" compoundref="_shader_lib_8cpp" startline="507" endline="524">use</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadDiffuseShaders</definition>
        <argsstring>() noexcept</argsstring>
        <name>loadDiffuseShaders</name>
        <briefdescription>
<para>this will load the pre-defined text rendering shaders these are stored in the file src/shaders/DiffuseShaders.h </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="631" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="715" bodyend="740"/>
        <references refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</references>
        <references refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</references>
        <references refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" compoundref="_shader_lib_8cpp" startline="544" endline="556">autoRegisterUniforms</references>
        <references refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" compoundref="_shader_lib_8cpp" startline="559" endline="568">bindAttribute</references>
        <references refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" compoundref="_shader_lib_8cpp" startline="287" endline="299">compileShader</references>
        <references refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</references>
        <references refid="_diffuse_shaders_8h_1a107986c80c412fc53b63825fb2583d72" compoundref="_diffuse_shaders_8h" startline="21">diffuseFragmentShader</references>
        <references refid="_diffuse_shaders_8h_1aee26a94a59f39d3d34cde95aee8e2738" compoundref="_diffuse_shaders_8h" startline="6">diffuseVertexShader</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" compoundref="_shader_lib_8cpp" startline="492" endline="504">linkProgramObject</references>
        <references refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" compoundref="_shader_lib_8cpp" startline="477" endline="488">loadShaderSourceFromString</references>
        <references refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" compoundref="_shader_lib_8cpp" startline="507" endline="524">use</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::ShaderLib::loadToonShaders</definition>
        <argsstring>() noexcept</argsstring>
        <name>loadToonShaders</name>
        <briefdescription>
<para>this will load the pre-defined text rendering shaders these are stored in the file src/shaders/ToonShaders.h </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="636" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="743" bodyend="768"/>
        <references refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" compoundref="_shader_lib_8cpp" startline="279" endline="284">attachShader</references>
        <references refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" compoundref="_shader_lib_8cpp" startline="308" endline="329">attachShaderToProgram</references>
        <references refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" compoundref="_shader_lib_8cpp" startline="544" endline="556">autoRegisterUniforms</references>
        <references refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" compoundref="_shader_lib_8cpp" startline="559" endline="568">bindAttribute</references>
        <references refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" compoundref="_shader_lib_8cpp" startline="287" endline="299">compileShader</references>
        <references refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" compoundref="_shader_lib_8cpp" startline="301" endline="306">createShaderProgram</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" compoundref="_shader_lib_8cpp" startline="492" endline="504">linkProgramObject</references>
        <references refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" compoundref="_shader_lib_8cpp" startline="477" endline="488">loadShaderSourceFromString</references>
        <references refid="_toon_shaders_8h_1a268a70d58f8d1ba173751d96922d6c41" compoundref="_toon_shaders_8h" startline="22">toonFragmentShader</references>
        <references refid="_toon_shaders_8h_1a3ccc0ef71a5a89763c120cc82fb3f756" compoundref="_toon_shaders_8h" startline="5">toonVertexShader</references>
        <references refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" compoundref="_shader_lib_8cpp" startline="507" endline="524">use</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
        <referencedby refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" compoundref="_shader_lib_8cpp" startline="231" endline="244">ShaderLib</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::ShaderLib::ShaderLib</definition>
        <argsstring>() noexcept</argsstring>
        <name>ShaderLib</name>
        <briefdescription>
<para>default ctor private as a singleton </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="664" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderLib.cpp" bodystart="231" bodyend="244"/>
        <references refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">loadColourShaders</references>
        <references refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" compoundref="_shader_lib_8cpp" startline="715" endline="740">loadDiffuseShaders</references>
        <references refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" compoundref="_shader_lib_8cpp" startline="660" endline="686">loadTextShaders</references>
        <references refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" compoundref="_shader_lib_8cpp" startline="743" endline="768">loadToonShaders</references>
        <references refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" compoundref="_shader_lib_8h" startline="652">m_currentShader</references>
        <references refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" compoundref="_shader_lib_8h" startline="656">m_debugState</references>
        <references refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" compoundref="_shader_lib_8h" startline="648">m_nullProgram</references>
        <references refid="classngl_1_1_shader_lib_1a74aaabcafbd0f61240c9b39455e65459" compoundref="_shader_lib_8h" startline="660">m_numShaders</references>
        <references refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" compoundref="_shader_lib_8h" startline="640">m_shaderPrograms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1a50f39b30b7a0ece942a38ce8d397faab" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ngl::ShaderLib::~ShaderLib</definition>
        <argsstring>()</argsstring>
        <name>~ShaderLib</name>
        <briefdescription>
<para>default ctor private as a singleton </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="668" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="668" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_lib_1afcaec1a6374dd11a5f32ffd8cb0f980b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::ShaderLib::ShaderLib</definition>
        <argsstring>(const ShaderLib &amp;)=delete</argsstring>
        <name>ShaderLib</name>
        <param>
          <type>const <ref refid="classngl_1_1_shader_lib" kindref="compound">ShaderLib</ref> &amp;</type>
        </param>
        <briefdescription>
<para>copy ctor private as singleton </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="672" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref> Class to init and Use GLSL Shaders the class stores the shaders as a map of shader objects and they can be found by name Updated to use templated singleton Updated to use a map to store the shaders by name and hence removed the name from the ShaderObject Class Also Added methods to adjust shader parameters by shader / param name, at present use only 1-4 Floats and a few others need to think of a better way of doing this. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jonathan Macey </para></simplesect>
<simplesect kind="version"><para>3.0 </para></simplesect>
<simplesect kind="date"><para>Last Revision 20/04/10 used templated singleton </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1866">
        <label>ngl::ShaderLib</label>
        <link refid="classngl_1_1_shader_lib"/>
        <childnode refid="1867" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1867">
        <label>ngl::Singleton&lt; ShaderLib &gt;</label>
        <link refid="classngl_1_1_singleton"/>
        <childnode refid="1868" relation="template-instance">
          <edgelabel>&lt; ShaderLib &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1868">
        <label>ngl::Singleton&lt; T &gt;</label>
        <link refid="classngl_1_1_singleton"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1872">
        <label>T</label>
      </node>
      <node id="1873">
        <label>ngl::ShaderProgram</label>
        <link refid="classngl_1_1_shader_program"/>
      </node>
      <node id="1869">
        <label>ngl::ShaderLib</label>
        <link refid="classngl_1_1_shader_lib"/>
        <childnode refid="1870" relation="public-inheritance">
        </childnode>
        <childnode refid="1873" relation="usage">
          <edgelabel>#m_nullProgram</edgelabel>
        </childnode>
      </node>
      <node id="1870">
        <label>ngl::Singleton&lt; ShaderLib &gt;</label>
        <link refid="classngl_1_1_singleton"/>
        <childnode refid="1869" relation="usage">
          <edgelabel>#s_instance</edgelabel>
        </childnode>
        <childnode refid="1871" relation="template-instance">
          <edgelabel>&lt; ShaderLib &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1871">
        <label>ngl::Singleton&lt; T &gt;</label>
        <link refid="classngl_1_1_singleton"/>
        <childnode refid="1872" relation="usage">
          <edgelabel>#s_instance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/ShaderLib.h" line="56" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderLib.h" bodystart="55" bodyend="675"/>
    <listofallmembers>
      <member refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>attachShader</name></member>
      <member refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>attachShaderToProgram</name></member>
      <member refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>autoRegisterUniforms</name></member>
      <member refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>bindAttribute</name></member>
      <member refid="classngl_1_1_shader_lib_1a77d06945bdff2251cd5fc03a2676720a" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>bindFragDataLocation</name></member>
      <member refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>compileShader</name></member>
      <member refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>createShaderProgram</name></member>
      <member refid="classngl_1_1_shader_lib_1a92cee2d5376882d80f78e46c8a7f27a5" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>debugOff</name></member>
      <member refid="classngl_1_1_shader_lib_1a0c00c584894aad891271b94a3c232583" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>debugOn</name></member>
      <member refid="classngl_1_1_shader_lib_1a1f057ebf8ff9744974cf6f7fb7857810" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getAttribLocation</name></member>
      <member refid="classngl_1_1_shader_lib_1ae289466bf151bc87fb5d6910eb7e05eb" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getNumShaders</name></member>
      <member refid="classngl_1_1_shader_lib_1aacd2aebc2534b254cf96ef764f061bfd" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getProgramID</name></member>
      <member refid="classngl_1_1_shader_lib_1a9d11b8ed61d72064c47a79e8200a0f3d" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getShader</name></member>
      <member refid="classngl_1_1_shader_lib_1a6050ac0e403532ac507faa8177ab7957" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getShaderID</name></member>
      <member refid="classngl_1_1_shader_lib_1a7627c2bc4f66948e8db9ffaca468382d" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getShaderType</name></member>
      <member refid="classngl_1_1_shader_lib_1aff7233e389bc6815fda0086f3beea814" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>getUniformBlockIndex</name></member>
      <member refid="classngl_1_1_singleton_1ab5d43c93fdc09ecadc5f6ebfd9460396" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>instance</name></member>
      <member refid="classngl_1_1_singleton_1a68355e8cd8b6a575b29e11e05584b75d" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>killSingleton</name></member>
      <member refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>linkProgramObject</name></member>
      <member refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadColourShaders</name></member>
      <member refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadDiffuseShaders</name></member>
      <member refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadFromJson</name></member>
      <member refid="classngl_1_1_shader_lib_1a257b32e95c4ef7931abdfbcee465d792" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadShader</name></member>
      <member refid="classngl_1_1_shader_lib_1a4c4bf5247f361b9e8a03bbf781ca3ef7" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadShaderSource</name></member>
      <member refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadShaderSourceFromString</name></member>
      <member refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadTextShaders</name></member>
      <member refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>loadToonShaders</name></member>
      <member refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>m_currentShader</name></member>
      <member refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>m_debugState</name></member>
      <member refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>m_nullProgram</name></member>
      <member refid="classngl_1_1_shader_lib_1a74aaabcafbd0f61240c9b39455e65459" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>m_numShaders</name></member>
      <member refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>m_shaderPrograms</name></member>
      <member refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>m_shaders</name></member>
      <member refid="classngl_1_1_singleton_1a9cc1ea7cc82996782d48c50877157543" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>operator=</name></member>
      <member refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>operator[]</name></member>
      <member refid="classngl_1_1_shader_lib_1aa5939b620130f3fb76b7f55d869e7132" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>operator[]</name></member>
      <member refid="classngl_1_1_shader_lib_1ab27e3d6818579bfca620307afda3ef7c" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>printProperties</name></member>
      <member refid="classngl_1_1_shader_lib_1adbe11de9255b3090e52f9f9c6c3d2f76" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>printRegisteredUniforms</name></member>
      <member refid="classngl_1_1_shader_lib_1a3d764de0e9e24fb638d95f6b75a86bb9" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>registerUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1af8ee83bc19a41b2fec85b44516ac307c" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>reset</name></member>
      <member refid="classngl_1_1_singleton_1a7fd779d31c1d8d44153ccbec0a181ac3" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>s_instance</name></member>
      <member refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a998d8984bdaa4635ad54da69a746ecf2" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a9d977ef51ab4ef00d074ecc7ec3cc49a" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1aab4524ffd4af09af37853325c3168ecc" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a2d07158d621a4e27f1bebd0dea9c62d0" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a96373cb1967f31b33b84b8b834eb5fa7" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a97d0cbcf60a6b90654e6a25b36efa991" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1af1a22edddd86a1d9a68f63ea632e9722" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a34967680b618d39d567e4d3aba834fcc" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1ae5e4e6940c9aec060ecda29624d5d001" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a4f43d44f447162c31b384728bc7f11c6" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a58f3da05389830651f5e8e0547dca178" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a1ee7ee22adc70d5b94c6fa710eb02025" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a8a6284a263bdf49aa9ad9fef1eea5e3d" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a9210462acc20cd79a256a9674ab30692" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform1f</name></member>
      <member refid="classngl_1_1_shader_lib_1adebd60a39fba7f231ee9c9c790612fc5" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform1i</name></member>
      <member refid="classngl_1_1_shader_lib_1a52eca9f0f6d6566a7f3064d7dd6315fd" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform2f</name></member>
      <member refid="classngl_1_1_shader_lib_1aac8e14e81625357cbc5da8659d3709eb" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform3f</name></member>
      <member refid="classngl_1_1_shader_lib_1acf163862b0e3f3e1df2880b3d2f515b8" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniform4f</name></member>
      <member refid="classngl_1_1_shader_lib_1ad9b1c61540a1fd05e94971c1623ac128" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniformFromColour</name></member>
      <member refid="classngl_1_1_shader_lib_1a910d2677edf9ee0d69db82480e679eb6" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniformFromMat3</name></member>
      <member refid="classngl_1_1_shader_lib_1abc19cd9c5f28d4220ac5710f26dcb00a" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniformFromMat4</name></member>
      <member refid="classngl_1_1_shader_lib_1a78009d4b4f73b173c1c81c8b16530643" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniformVec2</name></member>
      <member refid="classngl_1_1_shader_lib_1ab9aa9d02fbd64db1c8c227853c1efefd" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniformVec3</name></member>
      <member refid="classngl_1_1_shader_lib_1adcdd0bcb1ec3cd45024222cfefa73827" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setRegisteredUniformVec4</name></member>
      <member refid="classngl_1_1_shader_lib_1a49843176da69f14b25713a8657453885" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParam1f</name></member>
      <member refid="classngl_1_1_shader_lib_1a5856327bd1fa7704a8d965d99332a7e2" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParam1i</name></member>
      <member refid="classngl_1_1_shader_lib_1ac97e1e993ad81aecc7ce8c78516963c0" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParam2f</name></member>
      <member refid="classngl_1_1_shader_lib_1a912550dd1d05853a49a1e458f250614f" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParam3f</name></member>
      <member refid="classngl_1_1_shader_lib_1a9faf1fcc53d2dbec5fd9c9e239808e04" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParam4f</name></member>
      <member refid="classngl_1_1_shader_lib_1a1a08cba1857570203ff929362f8cbe9b" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParamFromColour</name></member>
      <member refid="classngl_1_1_shader_lib_1ad61c98f4da4b7006cacc08a426a42bf2" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParamFromMat3</name></member>
      <member refid="classngl_1_1_shader_lib_1a3d32727943d66a8fd83add5ff197ad13" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParamFromMat4</name></member>
      <member refid="classngl_1_1_shader_lib_1a9aa91de653fccd15e7ffaa9719e68139" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setShaderParamFromVec4</name></member>
      <member refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1af056261adebd696be38d34028de83620" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a78280a831f4925875fcea32da3ba1afe" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a99c385f78005e0442c3db10ec9f72a75" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1ae9d08c56fb64b8b8b040dab9798451ce" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a664c029554da0effdda60e3aa8b5dea9" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a142a344ccd99ddcc7ee251277c56f64f" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1af7b81db7da0ac8c89697fcdf613da88e" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a076ebb116e921686843433e620675372" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a5b9b376ca38fc9d74c777da14f17c72d" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a744b65785a5c9519abd60ef8323a24b0" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a9540be112311cb01cca6b7a2fb4d46bd" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a15311b64bcc2e4a9eeee49b6069a3188" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1a522a19f96b26bc69c4208340ef5fce49" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>setUniform</name></member>
      <member refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>ShaderLib</name></member>
      <member refid="classngl_1_1_shader_lib_1afcaec1a6374dd11a5f32ffd8cb0f980b" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>ShaderLib</name></member>
      <member refid="classngl_1_1_singleton_1ad6341f60af3e395419484ba3108f73d8" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>Singleton</name></member>
      <member refid="classngl_1_1_singleton_1ae55278fc5cc669ddb9da4f7e3d8ae7a8" prot="protected" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>Singleton</name></member>
      <member refid="classngl_1_1_shader_lib_1ad3267cc597548f221b80011bb9c78883" prot="private" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>Singleton&lt; ShaderLib &gt;</name></member>
      <member refid="classngl_1_1_shader_lib_1a1cd528cf703f959f064693968f90352f" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>toggleDebug</name></member>
      <member refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>use</name></member>
      <member refid="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" prot="public" virt="non-virtual"><scope>ngl::ShaderLib</scope><name>useNullProgram</name></member>
      <member refid="classngl_1_1_shader_lib_1a50f39b30b7a0ece942a38ce8d397faab" prot="protected" virt="virtual"><scope>ngl::ShaderLib</scope><name>~ShaderLib</name></member>
      <member refid="classngl_1_1_singleton_1a4b66d1c7d1f91f12a5ac2a428a3ff1c0" prot="protected" virt="virtual"><scope>ngl::ShaderLib</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
