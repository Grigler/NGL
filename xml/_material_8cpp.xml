<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_material_8cpp" kind="file" language="C++">
    <compoundname>Material.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes refid="_n_g_l_stream_8h" local="yes">NGLStream.h</includes>
    <includes refid="_material_8h" local="yes">Material.h</includes>
    <includes refid="_shader_lib_8h" local="yes">ShaderLib.h</includes>
    <incdepgraph>
      <node id="4879">
        <label>Mat4.h</label>
        <link refid="_mat4_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4878" relation="include">
        </childnode>
        <childnode refid="4871" relation="include">
        </childnode>
      </node>
      <node id="4867">
        <label>ShaderProgram.h</label>
        <link refid="_shader_program_8h"/>
        <childnode refid="4865" relation="include">
        </childnode>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4868" relation="include">
        </childnode>
        <childnode refid="4874" relation="include">
        </childnode>
        <childnode refid="4875" relation="include">
        </childnode>
      </node>
      <node id="4851">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="4852" relation="include">
        </childnode>
        <childnode refid="4858" relation="include">
        </childnode>
        <childnode refid="4859" relation="include">
        </childnode>
        <childnode refid="4860" relation="include">
        </childnode>
      </node>
      <node id="4860">
        <label>QGLContext</label>
      </node>
      <node id="4872">
        <label>Vec3.h</label>
        <link refid="_vec3_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4871" relation="include">
        </childnode>
      </node>
      <node id="4847">
        <label>Material.cpp</label>
        <link refid="Material.cpp"/>
        <childnode refid="4848" relation="include">
        </childnode>
        <childnode refid="4849" relation="include">
        </childnode>
        <childnode refid="4861" relation="include">
        </childnode>
        <childnode refid="4864" relation="include">
        </childnode>
      </node>
      <node id="4873">
        <label>cmath</label>
      </node>
      <node id="4854">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="4855" relation="include">
        </childnode>
        <childnode refid="4856" relation="include">
        </childnode>
      </node>
      <node id="4863">
        <label>string</label>
      </node>
      <node id="4853">
        <label>stddef.h</label>
      </node>
      <node id="4848">
        <label>fstream</label>
      </node>
      <node id="4852">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="4853" relation="include">
        </childnode>
        <childnode refid="4854" relation="include">
        </childnode>
        <childnode refid="4857" relation="include">
        </childnode>
      </node>
      <node id="4878">
        <label>ostream</label>
      </node>
      <node id="4857">
        <label>GL/glu.h</label>
      </node>
      <node id="4855">
        <label>limits.h</label>
      </node>
      <node id="4869">
        <label>Vec4.h</label>
        <link refid="_vec4_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4870" relation="include">
        </childnode>
        <childnode refid="4872" relation="include">
        </childnode>
        <childnode refid="4871" relation="include">
        </childnode>
      </node>
      <node id="4864">
        <label>ShaderLib.h</label>
        <link refid="_shader_lib_8h"/>
        <childnode refid="4862" relation="include">
        </childnode>
        <childnode refid="4865" relation="include">
        </childnode>
        <childnode refid="4867" relation="include">
        </childnode>
        <childnode refid="4876" relation="include">
        </childnode>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4877" relation="include">
        </childnode>
        <childnode refid="4879" relation="include">
        </childnode>
        <childnode refid="4869" relation="include">
        </childnode>
        <childnode refid="4863" relation="include">
        </childnode>
        <childnode refid="4875" relation="include">
        </childnode>
      </node>
      <node id="4861">
        <label>Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="4862" relation="include">
        </childnode>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4863" relation="include">
        </childnode>
      </node>
      <node id="4856">
        <label>wchar.h</label>
      </node>
      <node id="4865">
        <label>Shader.h</label>
        <link refid="_shader_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4850" relation="include">
        </childnode>
        <childnode refid="4866" relation="include">
        </childnode>
      </node>
      <node id="4862">
        <label>Colour.h</label>
        <link refid="_colour_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
      </node>
      <node id="4874">
        <label>vector</label>
      </node>
      <node id="4871">
        <label>array</label>
      </node>
      <node id="4859">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="4866">
        <label>cstdlib</label>
      </node>
      <node id="4850">
        <label>iostream</label>
      </node>
      <node id="4876">
        <label>Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4866" relation="include">
        </childnode>
      </node>
      <node id="4877">
        <label>Mat3.h</label>
        <link refid="_mat3_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4871" relation="include">
        </childnode>
        <childnode refid="4878" relation="include">
        </childnode>
      </node>
      <node id="4875">
        <label>unordered_map</label>
      </node>
      <node id="4849">
        <label>NGLStream.h</label>
        <link refid="_n_g_l_stream_8h"/>
        <childnode refid="4850" relation="include">
        </childnode>
        <childnode refid="4851" relation="include">
        </childnode>
      </node>
      <node id="4868">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4869" relation="include">
        </childnode>
        <childnode refid="4873" relation="include">
        </childnode>
        <childnode refid="4863" relation="include">
        </childnode>
      </node>
      <node id="4858">
        <label>GL/gl.h</label>
      </node>
      <node id="4870">
        <label>Vec2.h</label>
        <link refid="_vec2_8h"/>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4871" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>implementation files for Material class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Jon<sp/>Macey</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_g_l_stream_8h" kindref="compound">NGLStream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_material_8h" kindref="compound">Material.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_lib_8h" kindref="compound">ShaderLib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Material<sp/>::<sp/>setDefault()<sp/>noexcept</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>m_transparency<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>m_specularExponent<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>m_surfaceRoughness<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>m_ambient.set(0.1<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>,0.1<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>,0.1<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>m_diffuse.set(0.8<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>,0.8<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>,0.8<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>m_specular.set(0,0,0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">Material::Material(STDMAT<sp/>_mat)<sp/>noexcept</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>m_specularExponent<sp/>=<sp/>s_materials[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_mat)][9];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>m_ambient.set(s_materials[static_cast&lt;int&gt;(_mat)][0],s_materials[static_cast&lt;int&gt;(_mat)][1],s_materials[static_cast&lt;int&gt;(_mat)][2]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_diffuse.set(s_materials[static_cast&lt;int&gt;(_mat)][3],s_materials[static_cast&lt;int&gt;(_mat)][4],s_materials[static_cast&lt;int&gt;(_mat)][5]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>m_specular.set(s_materials[static_cast&lt;int&gt;(_mat)][6],s_materials[static_cast&lt;int&gt;(_mat)][7],s_materials[static_cast&lt;int&gt;(_mat)][8]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_specularExponent<sp/>=<sp/>s_materials[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_mat)][9];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>m_surfaceRoughness<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Material<sp/>::<sp/>change(<sp/>STDMAT<sp/>_mat)<sp/>noexcept</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>m_specularExponent<sp/>=<sp/>s_materials[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_mat)][9];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>m_ambient.set(s_materials[static_cast&lt;int&gt;(_mat)][0],s_materials[static_cast&lt;int&gt;(_mat)][1],s_materials[static_cast&lt;int&gt;(_mat)][2]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>m_diffuse.set(s_materials[static_cast&lt;int&gt;(_mat)][3],s_materials[static_cast&lt;int&gt;(_mat)][4],s_materials[static_cast&lt;int&gt;(_mat)][5]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>m_specular.set(s_materials[static_cast&lt;int&gt;(_mat)][6],s_materials[static_cast&lt;int&gt;(_mat)][7],s_materials[static_cast&lt;int&gt;(_mat)][8]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">Material::Material(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_mat)<sp/>noexcept</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_specularExponent<sp/>=<sp/>s_materials[_mat][9];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>m_ambient.set(s_materials[_mat][0],s_materials[_mat][1],s_materials[_mat][2]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_diffuse.set(s_materials[_mat][3],s_materials[_mat][4],s_materials[_mat][5]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>m_specular.set(s_materials[_mat][6],s_materials[_mat][7],s_materials[_mat][8]);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>m_surfaceRoughness<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Material<sp/>::<sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Material<sp/>&amp;_m)<sp/>noexcept</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>m_transparency<sp/>=<sp/>_m.m_transparency;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>m_specularExponent<sp/>=<sp/>_m.m_specularExponent;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>m_surfaceRoughness<sp/>=<sp/>_m.m_surfaceRoughness;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>m_ambient.set(_m.m_ambient);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>m_diffuse.set(_m.m_diffuse);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>m_specular.set(_m.m_specular);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">Material::Material(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_fName)<sp/>noexcept</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>FileIn;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>FileIn.open(_fName.c_str(),<ref refid="glew_8h_1a83ad0ee7f1e06b59c90271716e689080" kindref="member">std::ios::in</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FileIn.is_open())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>_fName<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Not<sp/>found<sp/>Exiting<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>FileIn&gt;&gt;m_ambient;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>FileIn&gt;&gt;m_diffuse;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>FileIn&gt;&gt;m_specular;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>FileIn.close();</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Material::load(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_fname)<sp/>noexcept</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Load<sp/>of<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_fname<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>yet<sp/>implemented\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Material::loadToShader(<sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>_uniformName<sp/><sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>ShaderLib<sp/>*<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_singleton_1ab5d43c93fdc09ecadc5f6ebfd9460396" kindref="member">ShaderLib::instance</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/>so<sp/>if<sp/>we<sp/>use<sp/>one<sp/>of<sp/>our<sp/>standard<sp/>shaders<sp/>for<sp/>NGL<sp/>we<sp/>can<sp/>load<sp/>these<sp/>values</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam4f(_uniformName+</highlight><highlight class="stringliteral">&quot;.ambient&quot;</highlight><highlight class="normal">,m_ambient.m_r,m_ambient.m_g,m_ambient.m_b,m_ambient.m_a);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam4f(_uniformName+</highlight><highlight class="stringliteral">&quot;.diffuse&quot;</highlight><highlight class="normal">,m_diffuse.m_r,m_diffuse.m_g,m_diffuse.m_b,m_diffuse.m_a);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam4f(_uniformName+</highlight><highlight class="stringliteral">&quot;.specular&quot;</highlight><highlight class="normal">,m_specular.m_r,m_specular.m_g,m_specular.m_b,m_specular.m_a);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1f(_uniformName+</highlight><highlight class="stringliteral">&quot;.shininess&quot;</highlight><highlight class="normal">,<sp/>m_specularExponent);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;&quot;block<sp/>id<sp/>=<sp/>&quot;&lt;&lt;blockID&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/Material.cpp"/>
  </compounddef>
</doxygen>
