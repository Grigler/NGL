<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_singleton_8h" kind="file" language="C++">
    <compoundname>Singleton.h</compoundname>
    <includes refid="_types_8h" local="yes">Types.h</includes>
    <includes local="no">cstdlib</includes>
    <includedby refid="_logger_8h" local="yes">Logger.h</includedby>
    <includedby refid="_n_g_l_init_8h" local="yes">NGLInit.h</includedby>
    <includedby refid="_v_a_o_primitives_8h" local="yes">VAOPrimitives.h</includedby>
    <includedby refid="_random_8h" local="yes">Random.h</includedby>
    <includedby refid="_shader_lib_8h" local="yes">ShaderLib.h</includedby>
    <incdepgraph>
      <node id="6103">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="6104" relation="include">
        </childnode>
        <childnode refid="6110" relation="include">
        </childnode>
        <childnode refid="6111" relation="include">
        </childnode>
        <childnode refid="6112" relation="include">
        </childnode>
      </node>
      <node id="6112">
        <label>QGLContext</label>
      </node>
      <node id="6106">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="6107" relation="include">
        </childnode>
        <childnode refid="6108" relation="include">
        </childnode>
      </node>
      <node id="6105">
        <label>stddef.h</label>
      </node>
      <node id="6104">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="6105" relation="include">
        </childnode>
        <childnode refid="6106" relation="include">
        </childnode>
        <childnode refid="6109" relation="include">
        </childnode>
      </node>
      <node id="6109">
        <label>GL/glu.h</label>
      </node>
      <node id="6107">
        <label>limits.h</label>
      </node>
      <node id="6108">
        <label>wchar.h</label>
      </node>
      <node id="6111">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="6113">
        <label>cstdlib</label>
      </node>
      <node id="6102">
        <label>Singleton.h</label>
        <link refid="Singleton.h"/>
        <childnode refid="6103" relation="include">
        </childnode>
        <childnode refid="6113" relation="include">
        </childnode>
      </node>
      <node id="6110">
        <label>GL/gl.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6128">
        <label>SpotLight.cpp</label>
        <link refid="_spot_light_8cpp"/>
      </node>
      <node id="6130">
        <label>Transformation.cpp</label>
        <link refid="_transformation_8cpp"/>
      </node>
      <node id="6126">
        <label>Material.cpp</label>
        <link refid="_material_8cpp"/>
      </node>
      <node id="6119">
        <label>VAOPrimitives.h</label>
        <link refid="_v_a_o_primitives_8h"/>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6118" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6117" relation="include">
        </childnode>
      </node>
      <node id="6120">
        <label>createDefaultVAOs.cpp</label>
        <link refid="create_default_v_a_os_8cpp"/>
      </node>
      <node id="6123">
        <label>Random.cpp</label>
        <link refid="_random_8cpp"/>
      </node>
      <node id="6116">
        <label>Logger.cpp</label>
        <link refid="_logger_8cpp"/>
      </node>
      <node id="6117">
        <label>NGLInit.h</label>
        <link refid="_n_g_l_init_8h"/>
        <childnode refid="6118" relation="include">
        </childnode>
      </node>
      <node id="6127">
        <label>ShaderLib.cpp</label>
        <link refid="_shader_lib_8cpp"/>
      </node>
      <node id="6122">
        <label>Random.h</label>
        <link refid="_random_8h"/>
        <childnode refid="6123" relation="include">
        </childnode>
      </node>
      <node id="6124">
        <label>ShaderLib.h</label>
        <link refid="_shader_lib_8h"/>
        <childnode refid="6125" relation="include">
        </childnode>
        <childnode refid="6126" relation="include">
        </childnode>
        <childnode refid="6118" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6128" relation="include">
        </childnode>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
      </node>
      <node id="6118">
        <label>NGLInit.cpp</label>
        <link refid="_n_g_l_init_8cpp"/>
      </node>
      <node id="6125">
        <label>Light.cpp</label>
        <link refid="_light_8cpp"/>
      </node>
      <node id="6121">
        <label>VAOPrimitives.cpp</label>
        <link refid="_v_a_o_primitives_8cpp"/>
      </node>
      <node id="6114">
        <label>Singleton.h</label>
        <link refid="Singleton.h"/>
        <childnode refid="6115" relation="include">
        </childnode>
        <childnode refid="6117" relation="include">
        </childnode>
        <childnode refid="6119" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6124" relation="include">
        </childnode>
      </node>
      <node id="6115">
        <label>Logger.h</label>
        <link refid="_logger_8h"/>
        <childnode refid="6116" relation="include">
        </childnode>
      </node>
      <node id="6129">
        <label>Text.cpp</label>
        <link refid="_text_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classngl_1_1_singleton" prot="public">ngl::Singleton</innerclass>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>a simple singleton template inherited by other classes </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Vincent<sp/>Bonnet</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SINGLETON_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SINGLETON_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>include<sp/>types.h<sp/>first<sp/>for<sp/>Real<sp/>and<sp/>GLEW<sp/>if<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_types_8h" kindref="compound">Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classngl_1_1_singleton" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="_types_8h_1af02b47fdde329d8e51c92cbd614a57fb" kindref="member">NGL_DLLEXPORT</ref><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T*<sp/>instance();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classngl_1_1_singleton" kindref="compound">Singleton</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classngl_1_1_singleton_1a7fd779d31c1d8d44153ccbec0a181ac3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classngl_1_1_singleton_1a7fd779d31c1d8d44153ccbec0a181ac3" kindref="member">s_instance</ref>;</highlight></codeline>
<codeline lineno="67" refid="classngl_1_1_singleton_1a68355e8cd8b6a575b29e11e05584b75d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_singleton_1a68355e8cd8b6a575b29e11e05584b75d" kindref="member">killSingleton</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s_instance<sp/>!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>s_instance;}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>T*<sp/><sp/><ref refid="classngl_1_1_singleton" kindref="compound">Singleton&lt;T&gt;::s_instance</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classngl_1_1_singleton_1ae55278fc5cc669ddb9da4f7e3d8ae7a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="classngl_1_1_singleton_1ae55278fc5cc669ddb9da4f7e3d8ae7a8" kindref="member">Singleton&lt;T&gt;::Singleton</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classngl_1_1_singleton_1a4b66d1c7d1f91f12a5ac2a428a3ff1c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="classngl_1_1_singleton_1a4b66d1c7d1f91f12a5ac2a428a3ff1c0" kindref="member">Singleton&lt;T&gt;::~Singleton</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classngl_1_1_singleton_1ab5d43c93fdc09ecadc5f6ebfd9460396" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>T*<sp/><ref refid="classngl_1_1_singleton_1ab5d43c93fdc09ecadc5f6ebfd9460396" kindref="member">Singleton&lt;T&gt;::instance</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_instance<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_instance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::atexit(killSingleton);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(s_instance);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__SINGLETON_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/Singleton.h"/>
  </compounddef>
</doxygen>
