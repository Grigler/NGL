<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfmt_1_1_basic_writer" kind="class" language="C++" prot="public">
    <compoundname>fmt::BasicWriter</compoundname>
    <derivedcompoundref refid="classfmt_1_1_basic_array_writer" prot="public" virt="non-virtual">fmt::BasicArrayWriter&lt; Char &gt;</derivedcompoundref>
    <derivedcompoundref refid="classfmt_1_1_basic_memory_writer" prot="public" virt="non-virtual">fmt::BasicMemoryWriter&lt; Char, Allocator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classfmt_1_1_basic_string_writer" prot="public" virt="non-virtual">fmt::BasicStringWriter&lt; Char &gt;</derivedcompoundref>
    <includes refid="format_8h" local="no">format.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Char</declname>
        <defname>Char</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" prot="private" static="no">
        <type><ref refid="classfmt_1_1internal_1_1_char_traits" kindref="compound">internal::CharTraits</ref>&lt; Char &gt;::<ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
        <definition>typedef internal::CharTraits&lt;Char&gt;::CharPtr fmt::BasicWriter&lt; Char &gt;::CharPtr</definition>
        <argsstring></argsstring>
        <name>CharPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2349" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2349" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfmt_1_1_basic_writer_1a36f46828a1c9104a9af70d26042b600e" prot="private" static="no" mutable="no">
        <type><ref refid="classfmt_1_1_buffer" kindref="compound">Buffer</ref>&lt; Char &gt; &amp;</type>
        <definition>Buffer&lt;Char&gt;&amp; fmt::BasicWriter&lt; Char &gt;::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2345" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2345" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfmt_1_1_basic_writer_1ac5db94b13180b25196a6e027c6efbfd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Impl</type>
          </param>
          <param>
            <type>typename Char_</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class internal::ArgFormatterBase</definition>
        <argsstring></argsstring>
        <name>internal::ArgFormatterBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2440" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classfmt_1_1_basic_writer_1a114ea3cd3810a9ac7244d79f11671c37" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Impl</type>
          </param>
          <param>
            <type>typename Char_</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class BasicPrintfArgFormatter</definition>
        <argsstring></argsstring>
        <name>BasicPrintfArgFormatter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2443" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2443" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a3156903e0dc397d35d57771b204becdd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicWriter&lt; Char &gt;::FMT_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(BasicWriter)</argsstring>
        <name>FMT_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a974243e12ba11701c6007bbe080c9db5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
        <definition>CharPtr fmt::BasicWriter&lt; Char &gt;::grow_buffer</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>grow_buffer</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2365" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2365" bodyend="2369"/>
        <references refid="namespacefmt_1_1internal_1ab81ed2356d1a6f3bcf03c5bdf5f8d4f2" compoundref="format_8h" startline="581" endline="581">fmt::internal::make_ptr</references>
        <references refid="classfmt_1_1_buffer_1a20f893164dc20e8ea8c77810d4ea8d59" compoundref="format_8h" startline="623" endline="627">fmt::Buffer&lt; T &gt;::resize</references>
        <references refid="classfmt_1_1_buffer_1a14fa72f0ddf584c14ffffb1446f598aa" compoundref="format_8h" startline="615" endline="615">fmt::Buffer&lt; T &gt;::size</references>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1ab85eb2158c9d48c847706de26f35460c" compoundref="format_8h" startline="1879" endline="1907">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_char</referencedby>
        <referencedby refid="classfmt_1_1_basic_printf_arg_formatter_1a97f26086d50a4553280fbe831ef7e947" compoundref="printf_8h" startline="223" endline="243">fmt::BasicPrintfArgFormatter&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_char</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a8236a787e18d88587ca79933a5cdd898" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt</type>
          </param>
        </templateparamlist>
        <type>Char *</type>
        <definition>Char* fmt::BasicWriter&lt; Char &gt;::write_unsigned_decimal</definition>
        <argsstring>(UInt value, unsigned prefix_size=0)</argsstring>
        <name>write_unsigned_decimal</name>
        <param>
          <type>UInt</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>prefix_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2373" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2373" bodyend="2378"/>
        <references refid="namespacefmt_1_1internal_1abfe52e52001fd2590fb2015cefe95e18" compoundref="format_8h" startline="864" endline="877">fmt::internal::count_digits</references>
        <references refid="namespacefmt_1_1internal_1aeee1847660e999ab1e360ffa18515b88" compoundref="format_8h" startline="919" endline="941">fmt::internal::format_decimal</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a206f93d73fd5101ff774218f45f6a1a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int</type>
          </param>
        </templateparamlist>
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::write_decimal</definition>
        <argsstring>(Int value)</argsstring>
        <name>write_decimal</name>
        <param>
          <type>Int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2382" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2382" bodyend="2391"/>
        <references refid="namespacefmt_1_1internal_1a310d44c09812f7990e50800808c04673" compoundref="format_8h" startline="811" endline="813">fmt::internal::is_negative</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1ac7a6d8759863c9b3f8ef89da04c9c8a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
        <definition>CharPtr fmt::BasicWriter&lt; Char &gt;::prepare_int_buffer</definition>
        <argsstring>(unsigned num_digits, const EmptySpec &amp;, const char *prefix, unsigned prefix_size)</argsstring>
        <name>prepare_int_buffer</name>
        <param>
          <type>unsigned</type>
          <declname>num_digits</declname>
        </param>
        <param>
          <type>const <ref refid="structfmt_1_1_empty_spec" kindref="compound">EmptySpec</ref> &amp;</type>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>prefix_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2394" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2394" bodyend="2400"/>
        <references refid="namespacefmt_1_1internal_1a2ab2dc3e996d40259b9fbb6f980c92fd">fmt::internal::operator&lt;&lt;</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a64e806cd940571bd6da935add3034604" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Spec</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
        <definition>BasicWriter&lt; Char &gt;::CharPtr fmt::BasicWriter&lt; Char &gt;::prepare_int_buffer</definition>
        <argsstring>(unsigned num_digits, const Spec &amp;spec, const char *prefix, unsigned prefix_size)</argsstring>
        <name>prepare_int_buffer</name>
        <param>
          <type>unsigned</type>
          <declname>num_digits</declname>
        </param>
        <param>
          <type>const Spec &amp;</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>prefix_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2403" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2678" bodyend="2737"/>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab9fa8e7eb41061a7670d4d8b43007f23" compoundref="format_8h" startline="1589">fmt::ALIGN_CENTER</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2a37d3391e09dceceb0e75094f691b02eb" compoundref="format_8h" startline="1589">fmt::ALIGN_LEFT</references>
        <references refid="namespacefmt_1_1internal_1a28bed1291226be35437bc3173c19c205" compoundref="format_8h" startline="564" endline="567">fmt::internal::to_unsigned</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a2eb820ad907cede8df8226af444f59d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Spec</type>
          </param>
        </templateparamlist>
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::write_int</definition>
        <argsstring>(T value, Spec spec)</argsstring>
        <name>write_int</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Spec</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2408" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2741" bodyend="2827"/>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea59699c6d9db5a05403ebc3528e5f0694" compoundref="format_8h" startline="1595">fmt::CHAR_FLAG</references>
        <references refid="namespacefmt_1_1internal_1abfe52e52001fd2590fb2015cefe95e18" compoundref="format_8h" startline="864" endline="877">fmt::internal::count_digits</references>
        <references refid="namespacefmt_1_1internal_1aeee1847660e999ab1e360ffa18515b88" compoundref="format_8h" startline="919" endline="941">fmt::internal::format_decimal</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea02280924fe002ad252cfbcc0cf6492aa" compoundref="format_8h" startline="1594">fmt::HASH_FLAG</references>
        <references refid="namespacefmt_1_1internal_1a310d44c09812f7990e50800808c04673" compoundref="format_8h" startline="811" endline="813">fmt::internal::is_negative</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea2b053d8fd806a73492750893f902a694" compoundref="format_8h" startline="1594">fmt::PLUS_FLAG</references>
        <references refid="namespacefmt_1_1internal_1a92bdabe812efd23c6f9686ddd6a7805f" compoundref="format_8cc" startline="296" endline="305">fmt::internal::report_unknown_type</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea41bce447447361e7a4b3e9d8a84877db" compoundref="format_8h" startline="1594">fmt::SIGN_FLAG</references>
        <references refid="classfmt_1_1_basic_string_ref_1ae38d9106dd5bec69488e5464aedc266a" compoundref="format_8h" startline="455" endline="455">fmt::BasicStringRef&lt; Char &gt;::size</references>
        <references refid="namespacefmt_1_1internal_1a17c95c81f680e8641fd4d2b21bf7b381" compoundref="format_8h" startline="1135" endline="1138">fmt::internal::thousands_sep</references>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1a0f4c97899457f6263ae412f231330227" compoundref="format_8h" startline="1842" endline="1846">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::write_pointer</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1ae6f9ce1fa7940ebda3ac594a45edd32d" compoundref="format_8h" startline="1868" endline="1868">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_any_int</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1ab85eb2158c9d48c847706de26f35460c" compoundref="format_8h" startline="1879" endline="1907">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_char</referencedby>
        <referencedby refid="classfmt_1_1_basic_printf_arg_formatter_1a97f26086d50a4553280fbe831ef7e947" compoundref="printf_8h" startline="223" endline="243">fmt::BasicPrintfArgFormatter&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_char</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1aa69a013920916ccc74ca7ac5e971abe7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::write_double</definition>
        <argsstring>(T value, const FormatSpec &amp;spec)</argsstring>
        <name>write_double</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structfmt_1_1_format_spec" kindref="compound">FormatSpec</ref> &amp;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2412" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2831" bodyend="2982"/>
        <references refid="structfmt_1_1_align_spec_1abd14faffccf107e6e01bbd014e69262c" compoundref="format_8h" startline="1632" endline="1632">fmt::AlignSpec::align</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab9fa8e7eb41061a7670d4d8b43007f23" compoundref="format_8h" startline="1589">fmt::ALIGN_CENTER</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2a63e66a16a075b0b22e5fae027892057f" compoundref="format_8h" startline="1589">fmt::ALIGN_DEFAULT</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2a37d3391e09dceceb0e75094f691b02eb" compoundref="format_8h" startline="1589">fmt::ALIGN_LEFT</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab4ab67c39e6d8562a116f3da83de391a" compoundref="format_8h" startline="1589">fmt::ALIGN_RIGHT</references>
        <references refid="structfmt_1_1_width_spec_1a28a9b78a0ebfd5830025eaf1c917bb16" compoundref="format_8h" startline="1622" endline="1622">fmt::WidthSpec::fill</references>
        <references refid="structfmt_1_1_format_spec_1a2ee0e9bf9979641418a8b30b4e7740f2" compoundref="format_8h" startline="1656" endline="1656">fmt::FormatSpec::flag</references>
        <references refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea02280924fe002ad252cfbcc0cf6492aa" compoundref="format_8h" startline="1594">fmt::HASH_FLAG</references>
        <references refid="classstd_1_1numeric__limits_3_01fmt_1_1internal_1_1_dummy_int_01_4_1abd1469673d6c36a014a988bce1dfb0ee" compoundref="format_8h" startline="327" endline="336">std::numeric_limits&lt; fmt::internal::DummyInt &gt;::isinfinity</references>
        <references refid="classstd_1_1numeric__limits_3_01fmt_1_1internal_1_1_dummy_int_01_4_1a1cc82945f63918e9a8603d3ef750990d" compoundref="format_8h" startline="350" endline="360">std::numeric_limits&lt; fmt::internal::DummyInt &gt;::isnegative</references>
        <references refid="classstd_1_1numeric__limits_3_01fmt_1_1internal_1_1_dummy_int_01_4_1a89433356fbf5b68eb0c13208a5e3b6b1" compoundref="format_8h" startline="340" endline="347">std::numeric_limits&lt; fmt::internal::DummyInt &gt;::isnotanumber</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea2b053d8fd806a73492750893f902a694" compoundref="format_8h" startline="1594">fmt::PLUS_FLAG</references>
        <references refid="structfmt_1_1_format_spec_1a4d48f0000dc495b3cc1c6f222e2036a9" compoundref="format_8h" startline="1657" endline="1657">fmt::FormatSpec::precision</references>
        <references refid="namespacefmt_1_1internal_1a92bdabe812efd23c6f9686ddd6a7805f" compoundref="format_8cc" startline="296" endline="305">fmt::internal::report_unknown_type</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea41bce447447361e7a4b3e9d8a84877db" compoundref="format_8h" startline="1594">fmt::SIGN_FLAG</references>
        <references refid="namespacefmt_1_1internal_1a28bed1291226be35437bc3173c19c205" compoundref="format_8h" startline="564" endline="567">fmt::internal::to_unsigned</references>
        <references refid="structfmt_1_1_format_spec_1a4da20f7a988a694ce02f01d1ffb3d783" compoundref="format_8h" startline="1658" endline="1658">fmt::FormatSpec::type</references>
        <references refid="structfmt_1_1_width_spec_1ad6624ee681712f695f133ba2e9d9ce36" compoundref="format_8h" startline="1621" endline="1621">fmt::WidthSpec::width</references>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1a670214e1773c9c86002be07c043566dd" compoundref="format_8h" startline="1871" endline="1871">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_any_double</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1aa6ef59115b07ef0ad53fd9bb73bc64ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StrChar</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
        <definition>BasicWriter&lt; Char &gt;::CharPtr fmt::BasicWriter&lt; Char &gt;::write_str</definition>
        <argsstring>(const StrChar *s, std::size_t size, const AlignSpec &amp;spec)</argsstring>
        <name>write_str</name>
        <param>
          <type>const StrChar *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structfmt_1_1_align_spec" kindref="compound">AlignSpec</ref> &amp;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2416" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2617" bodyend="2636"/>
        <references refid="structfmt_1_1_align_spec_1abd14faffccf107e6e01bbd014e69262c" compoundref="format_8h" startline="1632" endline="1632">fmt::AlignSpec::align</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab9fa8e7eb41061a7670d4d8b43007f23" compoundref="format_8h" startline="1589">fmt::ALIGN_CENTER</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab4ab67c39e6d8562a116f3da83de391a" compoundref="format_8h" startline="1589">fmt::ALIGN_RIGHT</references>
        <references refid="structfmt_1_1_width_spec_1a28a9b78a0ebfd5830025eaf1c917bb16" compoundref="format_8h" startline="1622" endline="1622">fmt::WidthSpec::fill</references>
        <references refid="structfmt_1_1_width_spec_1ad6624ee681712f695f133ba2e9d9ce36" compoundref="format_8h" startline="1621" endline="1621">fmt::WidthSpec::width</references>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1a002d52aca6bc9a70d7eb62c037ffadc4" compoundref="format_8h" startline="1852" endline="1856">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::write</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1a937a7808ebf21736498e32abba6a0046" compoundref="format_8h" startline="1915" endline="1917">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_string</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1ad3469bff1ffe51395d9f8f0e0824ff2c" compoundref="format_8h" startline="1921" endline="1923">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_wstring</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a8914b930ac43788f801af0008f7b743e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StrChar</type>
          </param>
        </templateparamlist>
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::write_str</definition>
        <argsstring>(const internal::Arg::StringValue&lt; StrChar &gt; &amp;str, const FormatSpec &amp;spec)</argsstring>
        <name>write_str</name>
        <param>
          <type>const <ref refid="structfmt_1_1internal_1_1_value_1_1_string_value" kindref="compound">internal::Arg::StringValue</ref>&lt; StrChar &gt; &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="structfmt_1_1_format_spec" kindref="compound">FormatSpec</ref> &amp;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2419" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2640" bodyend="2657"/>
        <references refid="namespacefmt_1_1internal_1a61ae1bd2ba7d7666274927320c138283">fmt::internal::convert</references>
        <references refid="format_8h_1ad9e2ed6d3b432a04c9622c34a2495304" compoundref="format_8h" startline="172">FMT_THROW</references>
        <references refid="structfmt_1_1_format_spec_1a8444724bdd0a55bf3226a17e321c12c5" compoundref="format_8h" startline="1649">fmt::FormatSpec::precision_</references>
        <references refid="namespacefmt_1_1internal_1a92bdabe812efd23c6f9686ddd6a7805f" compoundref="format_8cc" startline="296" endline="305">fmt::internal::report_unknown_type</references>
        <references refid="structfmt_1_1internal_1_1_value_1_1_string_value_1abd1880f3fb3618e37fb3df74ff623146" compoundref="format_8h" startline="1000">fmt::internal::Value::StringValue&lt; Char &gt;::size</references>
        <references refid="structfmt_1_1_format_spec_1aa6f085ef583f708dde9636c03adea6ab" compoundref="format_8h" startline="1650">fmt::FormatSpec::type_</references>
        <references refid="structfmt_1_1internal_1_1_value_1_1_string_value_1a5fcfe566f56e4bbf08748303cd7fa6ca" compoundref="format_8h" startline="999">fmt::internal::Value::StringValue&lt; Char &gt;::value</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1acbd4d2baf4e39ca51bd961e7619c9d97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(typename internal::WCharHelper&lt; wchar_t, Char &gt;::Unsupported)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>typename <ref refid="structfmt_1_1internal_1_1_w_char_helper" kindref="compound">internal::WCharHelper</ref>&lt; wchar_t, Char &gt;::Unsupported</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a798d179871df2e02e6899ba2b91c046c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(typename internal::WCharHelper&lt; const wchar_t *, Char &gt;::Unsupported)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>typename <ref refid="structfmt_1_1internal_1_1_w_char_helper" kindref="compound">internal::WCharHelper</ref>&lt; const wchar_t *, Char &gt;::Unsupported</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a777e9f92998d6263c606f5caf5581e73" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::append_float_length</definition>
        <argsstring>(Char *&amp;format_ptr, long double)</argsstring>
        <name>append_float_length</name>
        <param>
          <type>Char *&amp;</type>
          <declname>format_ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>double</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2432" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2432" bodyend="2434"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a261f50fd77258dbc73be6e1588c64fa7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::append_float_length</definition>
        <argsstring>(Char *&amp;, T)</argsstring>
        <name>append_float_length</name>
        <param>
          <type>Char *&amp;</type>
        </param>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2437" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2437" bodyend="2437"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a0a39421f8ca42914fafb7737482f063a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Char *</type>
        <definition>static Char* fmt::BasicWriter&lt; Char &gt;::get</definition>
        <argsstring>(Char *p)</argsstring>
        <name>get</name>
        <param>
          <type>Char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2355" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2355" bodyend="2355"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a1fd4d07988b8628b3316b4881e4a4f74" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
        <definition>BasicWriter&lt; Char &gt;::CharPtr fmt::BasicWriter&lt; Char &gt;::fill_padding</definition>
        <argsstring>(CharPtr buffer, unsigned total_size, std::size_t content_size, wchar_t fill)</argsstring>
        <name>fill_padding</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" kindref="member">CharPtr</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>total_size</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>content_size</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2360" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2661" bodyend="2673"/>
        <referencedby refid="classfmt_1_1internal_1_1_arg_formatter_base_1ab85eb2158c9d48c847706de26f35460c" compoundref="format_8h" startline="1879" endline="1907">fmt::internal::ArgFormatterBase&lt; PrintfArgFormatter&lt; Char &gt;, Char &gt;::visit_char</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a586c21bbbd38149bcf48fc30376afc9c" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicWriter&lt; Char &gt;::BasicWriter</definition>
        <argsstring>(Buffer&lt; Char &gt; &amp;b)</argsstring>
        <name>BasicWriter</name>
        <param>
          <type><ref refid="classfmt_1_1_buffer" kindref="compound">Buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <computeroutput><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref></computeroutput> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2449" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2449" bodyend="2449"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a25f6fc2e43d3bcfb3de9ac33afe6050d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual fmt::BasicWriter&lt; Char &gt;::~BasicWriter</definition>
        <argsstring>()</argsstring>
        <name>~BasicWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys a <computeroutput><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref></computeroutput> object.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2457" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2457" bodyend="2457"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a1b6721b4ba4d3fa18ac781a36616cc2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t fmt::BasicWriter&lt; Char &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total number of characters written. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2462" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2462" bodyend="2462"/>
        <references refid="classfmt_1_1_buffer_1a14fa72f0ddf584c14ffffb1446f598aa" compoundref="format_8h" startline="615" endline="615">fmt::Buffer&lt; T &gt;::size</references>
        <referencedby refid="namespacefmt_1adec465a02f79e1e023ec283fa6da9f13" compoundref="format_8cc" startline="486" endline="490">fmt::print</referencedby>
        <referencedby refid="namespacefmt_1a05a374d05d4f93470bb99170efed28c0" compoundref="format_8cc" startline="507" endline="512">fmt::fprintf</referencedby>
        <referencedby refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" compoundref="ostream_8cc" startline="15" endline="27">fmt::internal::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a62d1c7b5be9c3580326320d5d178d096" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Char *</type>
        <definition>const Char* fmt::BasicWriter&lt; Char &gt;::data</definition>
        <argsstring>() const FMT_NOEXCEPT</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the output buffer content. No terminating null character is appended. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2468" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2468" bodyend="2468"/>
        <referencedby refid="namespacefmt_1adec465a02f79e1e023ec283fa6da9f13" compoundref="format_8cc" startline="486" endline="490">fmt::print</referencedby>
        <referencedby refid="namespacefmt_1a05a374d05d4f93470bb99170efed28c0" compoundref="format_8cc" startline="507" endline="512">fmt::fprintf</referencedby>
        <referencedby refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" compoundref="ostream_8cc" startline="15" endline="27">fmt::internal::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a8b68001f5c1c0ea851ddaef27dcbc691" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Char *</type>
        <definition>const Char* fmt::BasicWriter&lt; Char &gt;::c_str</definition>
        <argsstring>() const </argsstring>
        <name>c_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the output buffer content with terminating null character appended. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2474" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2474" bodyend="2479"/>
        <references refid="classfmt_1_1_buffer_1a7f46a3ce8d86abe35904f6654bd4ea1e" compoundref="format_8h" startline="634" endline="637">fmt::Buffer&lt; T &gt;::reserve</references>
        <references refid="classfmt_1_1_buffer_1a14fa72f0ddf584c14ffffb1446f598aa" compoundref="format_8h" startline="615" endline="615">fmt::Buffer&lt; T &gt;::size</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a91f06ced6e063ee77a99740e0e79faf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::basic_string&lt; Char &gt;</type>
        <definition>std::basic_string&lt;Char&gt; fmt::BasicWriter&lt; Char &gt;::str</definition>
        <argsstring>() const </argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the content of the output buffer as an <computeroutput>std::string</computeroutput>.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2486" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2486" bodyend="2488"/>
        <references refid="classfmt_1_1_buffer_1a14fa72f0ddf584c14ffffb1446f598aa" compoundref="format_8h" startline="615" endline="615">fmt::Buffer&lt; T &gt;::size</references>
        <referencedby refid="classfmt_1_1_system_error_1af42143a0f75c3a962fbe9329cd66720f" compoundref="format_8cc" startline="225" endline="232">fmt::SystemError::init</referencedby>
        <referencedby refid="namespacefmt_1_1internal_1a92bdabe812efd23c6f9686ddd6a7805f" compoundref="format_8cc" startline="296" endline="305">fmt::internal::report_unknown_type</referencedby>
        <referencedby refid="classfmt_1_1_basic_writer_1a79c23ed8ee17ee205ece04571f0dd79b" compoundref="format_8h" startline="2604" endline="2608">fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</referencedby>
        <referencedby refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</referencedby>
        <referencedby refid="namespacefmt_1a956d655d1291fb85203c58fadd4bba1a" compoundref="printf_8h" startline="500" endline="504">fmt::sprintf</referencedby>
        <referencedby refid="namespacefmt_1abfd84051cd3673d750be5851ee93b05f" compoundref="string_8h" startline="112" endline="116">fmt::to_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1aaa83498c649d4a90ea3366bae62f4eac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::write</definition>
        <argsstring>(BasicCStringRef&lt; Char &gt; format, ArgList args)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">BasicCStringRef</ref>&lt; Char &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_arg_list" kindref="compound">ArgList</ref></type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes formatted data.</para><para>args* is an argument list representing arbitrary arguments.</para><para>Example**::</para><para>MemoryWriter out; out.write(&quot;Current point:\n&quot;); out.write(&quot;({:+f}, {:+f})&quot;, -3.14, 3.14);</para><para>This will write the following output to the <computeroutput>out</computeroutput> object:</para><para>.. code-block:: none</para><para>Current point: (-3.140000, +3.140000)</para><para>The output can be accessed using :func:<computeroutput><ref refid="classfmt_1_1_basic_writer_1a62d1c7b5be9c3580326320d5d178d096" kindref="member">data()</ref></computeroutput>, :func:<computeroutput>c_str</computeroutput> or :func:<computeroutput>str</computeroutput> methods.</para><para>See also :ref:<computeroutput>syntax</computeroutput>.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2515" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2515" bodyend="2517"/>
        <references refid="format_8h_1a125f5651dc472ff4c5ef4662902e25c5" compoundref="format_8h" startline="2208">FMT_VARIADIC_VOID</references>
        <references refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</references>
        <references refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" compoundref="ostream_8cc" startline="15" endline="27">fmt::internal::write</references>
        <referencedby refid="namespacefmt_1adec465a02f79e1e023ec283fa6da9f13" compoundref="format_8cc" startline="486" endline="490">fmt::print</referencedby>
        <referencedby refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a3d21148f336a76a71b39abb2fd6c0f88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(int value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2520" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2520" bodyend="2523"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a7ec4d6fb4cf9173b14d4ee100fd4a428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(unsigned value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>unsigned</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2524" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2524" bodyend="2526"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a1fd4183e01fd56ec99af40431b32561b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(long value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2527" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2527" bodyend="2530"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a4e0ef5415eb162ec991b69b930245094" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(unsigned long value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2531" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2531" bodyend="2533"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a2c876284b0b3b7f36cc0354e3348912a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(LongLong value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespacefmt_1aef84b50b68fdc25388fed2952c2db563" kindref="member">LongLong</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2534" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2534" bodyend="2537"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1afb01c45f06b2c13027343b74ce973a40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(ULongLong value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespacefmt_1af495ed85910212d4ba243ae2a8ce8f1f" kindref="member">ULongLong</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats <emphasis>value</emphasis> and writes it to the stream.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2544" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2544" bodyend="2546"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1afa435e67e3db3d214f0272b10c0a3878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(double value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2548" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2548" bodyend="2551"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a90215ced4a6a9fcd5065f1ffd4105a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(long double value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>long double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats <emphasis>value</emphasis> using the general format for floating-point numbers (<computeroutput>&apos;g&apos;</computeroutput>) and writes it to the stream.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2559" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2559" bodyend="2562"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a4c7d6b3a40b4083f351de3f9ee0b3818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(char value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a character to the stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2567" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2567" bodyend="2570"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a83967e3236b090ba035d5fc04317f4ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(typename internal::WCharHelper&lt; wchar_t, Char &gt;::Supported value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>typename <ref refid="structfmt_1_1internal_1_1_w_char_helper" kindref="compound">internal::WCharHelper</ref>&lt; wchar_t, Char &gt;::Supported</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2572" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2572" bodyend="2576"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a5f07d053b9f215b548ba3623e7a09212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(fmt::BasicStringRef&lt; Char &gt; value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">fmt::BasicStringRef</ref>&lt; Char &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes <emphasis>value</emphasis> to the stream.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2583" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2583" bodyend="2587"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1ac0483272173279436f3d47f49894cafb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(typename internal::WCharHelper&lt; StringRef, Char &gt;::Supported value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>typename <ref refid="structfmt_1_1internal_1_1_w_char_helper" kindref="compound">internal::WCharHelper</ref>&lt; <ref refid="namespacefmt_1ae5ed3b29f911650a12b4de3d14126c31" kindref="member">StringRef</ref>, Char &gt;::Supported</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2589" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2589" bodyend="2594"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a45ded4f76427103f3c189855be8c5d46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Spec</type>
          </param>
          <param>
            <type>typename FillChar</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(IntFormatSpec&lt; T, Spec, FillChar &gt; spec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classfmt_1_1_int_format_spec" kindref="compound">IntFormatSpec</ref>&lt; T, Spec, FillChar &gt;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2597" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2597" bodyend="2601"/>
        <references refid="namespacefmt_1_1internal_1a61ae1bd2ba7d7666274927320c138283">fmt::internal::convert</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a79c23ed8ee17ee205ece04571f0dd79b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StrChar</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref> &amp;</type>
        <definition>BasicWriter&amp; fmt::BasicWriter&lt; Char &gt;::operator&lt;&lt;</definition>
        <argsstring>(const StrFormatSpec&lt; StrChar &gt; &amp;spec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classfmt_1_1_str_format_spec" kindref="compound">StrFormatSpec</ref>&lt; StrChar &gt; &amp;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2604" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2604" bodyend="2608"/>
        <references refid="classfmt_1_1_basic_writer_1a91f06ced6e063ee77a99740e0e79faf6" compoundref="format_8h" startline="2486" endline="2488">fmt::BasicWriter&lt; Char &gt;::str</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1aa5b6f4dd01854cbc3ebf06a7f2fce713" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicWriter&lt; Char &gt;::clear</definition>
        <argsstring>() FMT_NOEXCEPT</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2610" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2610" bodyend="2610"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_writer_1a9b2a71d2ec402005fca013111bb576cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_buffer" kindref="compound">Buffer</ref>&lt; Char &gt; &amp;</type>
        <definition>Buffer&lt;Char&gt;&amp; fmt::BasicWriter&lt; Char &gt;::buffer</definition>
        <argsstring>() FMT_NOEXCEPT</argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2612" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2612" bodyend="2612"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This template provides operations for formatting and writing data into a character stream. The output is stored in a buffer provided by a subclass such as :class:<computeroutput><ref refid="classfmt_1_1_basic_memory_writer" kindref="compound">fmt::BasicMemoryWriter</ref></computeroutput>.</para><para>You can use one of the following typedefs for common character types:</para><para>+------<mdash/>+-------------------<mdash/>+ | Type | Definition | +=========+======================+ | <ref refid="class_writer" kindref="compound">Writer</ref> | BasicWriter&lt;char&gt; | +------<mdash/>+-------------------<mdash/>+ | WWriter | BasicWriter&lt;wchar_t&gt; | +------<mdash/>+-------------------<mdash/>+</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1322">
        <label>fmt::BasicMemoryWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_memory_writer"/>
        <childnode refid="1320" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1323">
        <label>fmt::BasicStringWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_string_writer"/>
        <childnode refid="1320" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1320">
        <label>fmt::BasicWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_writer"/>
      </node>
      <node id="1321">
        <label>fmt::BasicArrayWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_array_writer"/>
        <childnode refid="1320" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1326">
        <label>size_t</label>
      </node>
      <node id="1328">
        <label>T</label>
      </node>
      <node id="1325">
        <label>fmt::Buffer&lt; Char &gt;</label>
        <link refid="classfmt_1_1_buffer"/>
        <childnode refid="1326" relation="usage">
          <edgelabel>#size_</edgelabel>
          <edgelabel>#capacity_</edgelabel>
        </childnode>
        <childnode refid="1327" relation="template-instance">
          <edgelabel>&lt; Char &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1327">
        <label>fmt::Buffer&lt; T &gt;</label>
        <link refid="classfmt_1_1_buffer"/>
        <childnode refid="1326" relation="usage">
          <edgelabel>#size_</edgelabel>
          <edgelabel>#capacity_</edgelabel>
        </childnode>
        <childnode refid="1328" relation="usage">
          <edgelabel>#ptr_</edgelabel>
        </childnode>
      </node>
      <node id="1324">
        <label>fmt::BasicWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_writer"/>
        <childnode refid="1325" relation="usage">
          <edgelabel>-buffer_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="376" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="376" bodyend="-1"/>
    <listofallmembers>
      <member refid="classfmt_1_1_basic_writer_1a777e9f92998d6263c606f5caf5581e73" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>append_float_length</name></member>
      <member refid="classfmt_1_1_basic_writer_1a261f50fd77258dbc73be6e1588c64fa7" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>append_float_length</name></member>
      <member refid="classfmt_1_1_basic_writer_1a114ea3cd3810a9ac7244d79f11671c37" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>BasicPrintfArgFormatter</name></member>
      <member refid="classfmt_1_1_basic_writer_1a586c21bbbd38149bcf48fc30376afc9c" prot="protected" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>BasicWriter</name></member>
      <member refid="classfmt_1_1_basic_writer_1a9b2a71d2ec402005fca013111bb576cb" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>buffer</name></member>
      <member refid="classfmt_1_1_basic_writer_1a36f46828a1c9104a9af70d26042b600e" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>buffer_</name></member>
      <member refid="classfmt_1_1_basic_writer_1a8b68001f5c1c0ea851ddaef27dcbc691" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>c_str</name></member>
      <member refid="classfmt_1_1_basic_writer_1aedef35be3b8871bc55d10936289f1d9b" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>CharPtr</name></member>
      <member refid="classfmt_1_1_basic_writer_1aa5b6f4dd01854cbc3ebf06a7f2fce713" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>clear</name></member>
      <member refid="classfmt_1_1_basic_writer_1a62d1c7b5be9c3580326320d5d178d096" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>data</name></member>
      <member refid="classfmt_1_1_basic_writer_1a1fd4d07988b8628b3316b4881e4a4f74" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>fill_padding</name></member>
      <member refid="classfmt_1_1_basic_writer_1a3156903e0dc397d35d57771b204becdd" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>FMT_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classfmt_1_1_basic_writer_1a0a39421f8ca42914fafb7737482f063a" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>get</name></member>
      <member refid="classfmt_1_1_basic_writer_1a974243e12ba11701c6007bbe080c9db5" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>grow_buffer</name></member>
      <member refid="classfmt_1_1_basic_writer_1ac5db94b13180b25196a6e027c6efbfd7" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>internal::ArgFormatterBase</name></member>
      <member refid="classfmt_1_1_basic_writer_1acbd4d2baf4e39ca51bd961e7619c9d97" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a798d179871df2e02e6899ba2b91c046c" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a3d21148f336a76a71b39abb2fd6c0f88" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a7ec4d6fb4cf9173b14d4ee100fd4a428" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a1fd4183e01fd56ec99af40431b32561b" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a4e0ef5415eb162ec991b69b930245094" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a2c876284b0b3b7f36cc0354e3348912a" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1afb01c45f06b2c13027343b74ce973a40" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1afa435e67e3db3d214f0272b10c0a3878" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a90215ced4a6a9fcd5065f1ffd4105a4b" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a4c7d6b3a40b4083f351de3f9ee0b3818" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a83967e3236b090ba035d5fc04317f4ed" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a5f07d053b9f215b548ba3623e7a09212" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1ac0483272173279436f3d47f49894cafb" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a45ded4f76427103f3c189855be8c5d46" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a79c23ed8ee17ee205ece04571f0dd79b" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1ac7a6d8759863c9b3f8ef89da04c9c8a7" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>prepare_int_buffer</name></member>
      <member refid="classfmt_1_1_basic_writer_1a64e806cd940571bd6da935add3034604" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>prepare_int_buffer</name></member>
      <member refid="classfmt_1_1_basic_writer_1a1b6721b4ba4d3fa18ac781a36616cc2a" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>size</name></member>
      <member refid="classfmt_1_1_basic_writer_1a91f06ced6e063ee77a99740e0e79faf6" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>str</name></member>
      <member refid="classfmt_1_1_basic_writer_1aaa83498c649d4a90ea3366bae62f4eac" prot="public" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write</name></member>
      <member refid="classfmt_1_1_basic_writer_1a206f93d73fd5101ff774218f45f6a1a0" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write_decimal</name></member>
      <member refid="classfmt_1_1_basic_writer_1aa69a013920916ccc74ca7ac5e971abe7" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write_double</name></member>
      <member refid="classfmt_1_1_basic_writer_1a2eb820ad907cede8df8226af444f59d6" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write_int</name></member>
      <member refid="classfmt_1_1_basic_writer_1aa6ef59115b07ef0ad53fd9bb73bc64ee" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write_str</name></member>
      <member refid="classfmt_1_1_basic_writer_1a8914b930ac43788f801af0008f7b743e" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write_str</name></member>
      <member refid="classfmt_1_1_basic_writer_1a8236a787e18d88587ca79933a5cdd898" prot="private" virt="non-virtual"><scope>fmt::BasicWriter</scope><name>write_unsigned_decimal</name></member>
      <member refid="classfmt_1_1_basic_writer_1a25f6fc2e43d3bcfb3de9ac33afe6050d" prot="public" virt="virtual"><scope>fmt::BasicWriter</scope><name>~BasicWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
