<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_simple_index_v_a_o_8cpp" kind="file" language="C++">
    <compoundname>SimpleIndexVAO.cpp</compoundname>
    <includes refid="_simple_index_v_a_o_8h" local="yes">SimpleIndexVAO.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="6035">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="6036" relation="include">
        </childnode>
        <childnode refid="6042" relation="include">
        </childnode>
        <childnode refid="6043" relation="include">
        </childnode>
        <childnode refid="6044" relation="include">
        </childnode>
      </node>
      <node id="6033">
        <label>SimpleIndexVAO.h</label>
        <link refid="_simple_index_v_a_o_8h"/>
        <childnode refid="6034" relation="include">
        </childnode>
      </node>
      <node id="6044">
        <label>QGLContext</label>
      </node>
      <node id="6038">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="6039" relation="include">
        </childnode>
        <childnode refid="6040" relation="include">
        </childnode>
      </node>
      <node id="6037">
        <label>stddef.h</label>
      </node>
      <node id="6036">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="6037" relation="include">
        </childnode>
        <childnode refid="6038" relation="include">
        </childnode>
        <childnode refid="6041" relation="include">
        </childnode>
      </node>
      <node id="6041">
        <label>GL/glu.h</label>
      </node>
      <node id="6039">
        <label>limits.h</label>
      </node>
      <node id="6034">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="6035" relation="include">
        </childnode>
      </node>
      <node id="6040">
        <label>wchar.h</label>
      </node>
      <node id="6043">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="6045">
        <label>iostream</label>
      </node>
      <node id="6032">
        <label>SimpleIndexVAO.cpp</label>
        <link refid="SimpleIndexVAO.cpp"/>
        <childnode refid="6033" relation="include">
        </childnode>
        <childnode refid="6045" relation="include">
        </childnode>
      </node>
      <node id="6042">
        <label>GL/gl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_index_v_a_o_8h" kindref="compound">SimpleIndexVAO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5" refid="classngl_1_1_simple_index_v_a_o_1a0e5e52a17b62f2cdc616412a52fe6f9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1a0e5e52a17b62f2cdc616412a52fe6f9a" kindref="member">SimpleIndexVAO::~SimpleIndexVAO</ref>()</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1af2c3002c6d3029c904fca6f9fa483d7a" kindref="member">removeVAO</ref>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classngl_1_1_simple_index_v_a_o_1a7c3914d59b5ec04ed967255d31c2b33d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1a7c3914d59b5ec04ed967255d31c2b33d" kindref="member">SimpleIndexVAO::draw</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>draw<sp/>an<sp/>unallocated<sp/>VOA\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>draw<sp/>an<sp/>unbound<sp/>VOA\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1ee6ceddd5b7f658b7ccb903e5162536" kindref="member">glDrawElements</ref>(<ref refid="classngl_1_1_abstract_v_a_o_1a7df62921ae3aff699778d17dc9d37df9" kindref="member">m_mode</ref>,static_cast&lt;GLsizei&gt;(<ref refid="classngl_1_1_abstract_v_a_o_1a04cd955b0987f618a279bbe6da056b46" kindref="member">m_indicesCount</ref>),<ref refid="classngl_1_1_simple_index_v_a_o_1ae9e1f031ab5c054ad84f3b83152e95b4" kindref="member">m_indexType</ref>,static_cast&lt;GLvoid<sp/>*&gt;(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classngl_1_1_simple_index_v_a_o_1af2c3002c6d3029c904fca6f9fa483d7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1af2c3002c6d3029c904fca6f9fa483d7a" kindref="member">SimpleIndexVAO::removeVAO</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a55652a3f087bb13267a5481b6ff1fe19" kindref="member">glDeleteBuffers</ref>(1,&amp;<ref refid="classngl_1_1_simple_index_v_a_o_1a312147ea34c3647b6f656407ca8ab765" kindref="member">m_buffer</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a214386aefdc30034088a21a6bccfbcbd" kindref="member">glDeleteVertexArrays</ref>(1,&amp;<ref refid="classngl_1_1_abstract_v_a_o_1a7c7d6a3322e757a3a7298f4321e48f1d" kindref="member">m_id</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//void<sp/>SimpleIndexVAO::setData(size_t<sp/>_size,<sp/>const<sp/>GLfloat<sp/>&amp;_data,<sp/>unsigned<sp/>int<sp/>_indexSize,<sp/>const<sp/>GLvoid<sp/>*_indexData,<sp/>GLenum<sp/>_indexType,<sp/>GLenum<sp/>_mode<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classngl_1_1_simple_index_v_a_o_1ad5a321670bf62b35793a8576d43c8c8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1ad5a321670bf62b35793a8576d43c8c8c" kindref="member">SimpleIndexVAO::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data" kindref="compound">AbstractVAO::VertexData</ref><sp/>&amp;_data)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1_1_vertex_data" kindref="compound">VertexData</ref><sp/>&amp;<ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classngl_1_1_simple_index_v_a_o_1_1_vertex_data" kindref="compound">VertexData</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_data);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>set<sp/>VOA<sp/>data<sp/>when<sp/>unbound\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/>vboID;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" kindref="member">glGenBuffers</ref>(1,<sp/>&amp;vboID);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/>iboID;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" kindref="member">glGenBuffers</ref>(1,<sp/>&amp;iboID);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>will<sp/>bind<sp/>an<sp/>array<sp/>buffer<sp/>to<sp/>the<sp/>first<sp/>one<sp/>and<sp/>load<sp/>the<sp/>data<sp/>for<sp/>the<sp/>verts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" kindref="member">glBindBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/>vboID);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" kindref="member">glBufferData</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/>static_cast&lt;GLsizeiptr&gt;(data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1ac70e6ea1e79a22adac0ebfff20aab5ff" kindref="member">m_size</ref>),<sp/>&amp;data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1aced95e3e8893a259344de637d0dd7d72" kindref="member">m_data</ref>,<sp/>data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1a3aea6d6bc943b07efe4c44bf5dd4d2a9" kindref="member">m_mode</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>determine<sp/>the<sp/>size<sp/>of<sp/>the<sp/>data<sp/>type<sp/>before<sp/>we<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>default<sp/>to<sp/>a<sp/>ushort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>=</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1ac995a558f6571eb5f98b7a6d2b2a4468" kindref="member">GLushort</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(data.<ref refid="classngl_1_1_simple_index_v_a_o_1_1_vertex_data_1a482b131f2c471f8a4455c2da5212646e" kindref="member">m_indexType</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a69b1c02ba0bd93c643c6d82e0c16eb99" kindref="member">GL_UNSIGNED_INT</ref><sp/><sp/><sp/>:<sp/>size=</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref>);<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a36c3f955599ab92217a70cce8a22e11f" kindref="member">GL_UNSIGNED_SHORT</ref><sp/>:<sp/>size=</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1ac995a558f6571eb5f98b7a6d2b2a4468" kindref="member">GLushort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a80a33c79f69417372d65d2a65ca36d49" kindref="member">GL_UNSIGNED_BYTE</ref><sp/><sp/>:<sp/>size=</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1a0595908be03a8cff881a23cdc9170e7c" kindref="member">GLubyte</ref>);<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:<sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;wrong<sp/>data<sp/>type<sp/>send<sp/>for<sp/>index<sp/>value\n&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>for<sp/>the<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" kindref="member">glBindBuffer</ref>(<ref refid="glew_8h_1ad26c63125c72cbf0347b589d51676e6a" kindref="member">GL_ELEMENT_ARRAY_BUFFER</ref>,<sp/>iboID);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" kindref="member">glBufferData</ref>(<ref refid="glew_8h_1ad26c63125c72cbf0347b589d51676e6a" kindref="member">GL_ELEMENT_ARRAY_BUFFER</ref>,<sp/>data.<ref refid="classngl_1_1_simple_index_v_a_o_1_1_vertex_data_1af722eef9ea7f1b2b1d19ee7e506ecbe2" kindref="member">m_indexSize</ref><sp/>*<sp/>static_cast&lt;GLsizeiptr&gt;(size),<sp/>const_cast&lt;GLvoid<sp/>*&gt;(data.<ref refid="classngl_1_1_simple_index_v_a_o_1_1_vertex_data_1ae4b0e765f3979652f2223197e6778dc8" kindref="member">m_indexData</ref>),data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1a3aea6d6bc943b07efe4c44bf5dd4d2a9" kindref="member">m_mode</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_simple_index_v_a_o_1ae9e1f031ab5c054ad84f3b83152e95b4" kindref="member">m_indexType</ref>=data.<ref refid="classngl_1_1_simple_index_v_a_o_1_1_vertex_data_1a482b131f2c471f8a4455c2da5212646e" kindref="member">m_indexType</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/SimpleIndexVAO.cpp"/>
  </compounddef>
</doxygen>
