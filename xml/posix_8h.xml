<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="posix_8h" kind="file" language="C++">
    <compoundname>posix.h</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">locale.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">cstddef</includes>
    <includes refid="format_8h" local="yes">fmt/format.h</includes>
    <includedby refid="posix_8cc" local="yes">posix.cc</includedby>
    <incdepgraph>
      <node id="5517">
        <label>limits</label>
      </node>
      <node id="5504">
        <label>posix.h</label>
        <link refid="posix.h"/>
        <childnode refid="5505" relation="include">
        </childnode>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5507" relation="include">
        </childnode>
        <childnode refid="5508" relation="include">
        </childnode>
        <childnode refid="5509" relation="include">
        </childnode>
        <childnode refid="5510" relation="include">
        </childnode>
        <childnode refid="5511" relation="include">
        </childnode>
      </node>
      <node id="5509">
        <label>stdlib.h</label>
      </node>
      <node id="5514">
        <label>cmath</label>
      </node>
      <node id="5505">
        <label>errno.h</label>
      </node>
      <node id="5512">
        <label>cassert</label>
      </node>
      <node id="5519">
        <label>stdexcept</label>
      </node>
      <node id="5506">
        <label>fcntl.h</label>
      </node>
      <node id="5523">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
      </node>
      <node id="5520">
        <label>string</label>
      </node>
      <node id="5524">
        <label>limits.h</label>
      </node>
      <node id="5525">
        <label>wchar.h</label>
      </node>
      <node id="5515">
        <label>cstdio</label>
      </node>
      <node id="5521">
        <label>vector</label>
      </node>
      <node id="5522">
        <label>utility</label>
      </node>
      <node id="5511">
        <label>fmt/format.h</label>
        <link refid="format_8h"/>
        <childnode refid="5512" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5515" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5518" relation="include">
        </childnode>
        <childnode refid="5519" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5521" relation="include">
        </childnode>
        <childnode refid="5522" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
      </node>
      <node id="5513">
        <label>clocale</label>
      </node>
      <node id="5510">
        <label>cstddef</label>
      </node>
      <node id="5508">
        <label>stdio.h</label>
      </node>
      <node id="5516">
        <label>cstring</label>
      </node>
      <node id="5507">
        <label>locale.h</label>
      </node>
      <node id="5518">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5526">
        <label>posix.h</label>
        <link refid="posix.h"/>
        <childnode refid="5527" relation="include">
        </childnode>
      </node>
      <node id="5527">
        <label>posix.cc</label>
        <link refid="posix_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classfmt_1_1_error_code" prot="public">fmt::ErrorCode</innerclass>
    <innerclass refid="classfmt_1_1_buffered_file" prot="public">fmt::BufferedFile</innerclass>
    <innerclass refid="structfmt_1_1_buffered_file_1_1_proxy" prot="private">fmt::BufferedFile::Proxy</innerclass>
    <innerclass refid="classfmt_1_1_file" prot="public">fmt::File</innerclass>
    <innerclass refid="structfmt_1_1_file_1_1_proxy" prot="private">fmt::File::Proxy</innerclass>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="posix_8h_1a6fa0773ef89920062fe6ab8b6e3cf337" prot="public" static="no">
        <name>FMT_POSIX</name>
        <param><defname>call</defname></param>
        <initializer>call</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/posix.h" line="37" column="13" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/posix.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="posix_8h_1acca658935a0993e7cf549b4a5be255a3" prot="public" static="no">
        <name>FMT_SYSTEM</name>
        <param><defname>call</defname></param>
        <initializer>call</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/posix.h" line="45" column="11" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/posix.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="posix_8h_1aa693a9f0c55e9b081f1ea5bf04968dd7" prot="public" static="no">
        <name>FMT_POSIX_CALL</name>
        <param><defname>call</defname></param>
        <initializer>::call</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/posix.h" line="50" column="13" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/posix.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="posix_8h_1a54f7e73fc1fc6ded8358c6339b51bde7" prot="public" static="no">
        <name>FMT_RETRY_VAL</name>
        <param><defname>result</defname></param>
        <param><defname>expression</defname></param>
        <param><defname>error_result</defname></param>
        <initializer>do { \
    <ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref> = (expression); \
  } while (<ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref> == error_result &amp;&amp; errno == EINTR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/posix.h" line="57" column="10" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/posix.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="posix_8h_1a9d6790ac79298b8abd2472500422e138" prot="public" static="no">
        <name>FMT_RETRY</name>
        <param><defname>result</defname></param>
        <param><defname>expression</defname></param>
        <initializer><ref refid="posix_8h_1a54f7e73fc1fc6ded8358c6339b51bde7" kindref="member">FMT_RETRY_VAL</ref>(<ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref>, expression, -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/posix.h" line="65" column="9" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/posix.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>A<sp/>C++<sp/>interface<sp/>to<sp/>POSIX<sp/>functions.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2012<sp/>-<sp/>2016,<sp/>Victor<sp/>Zverovich</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>For<sp/>the<sp/>license<sp/>information<sp/>refer<sp/>to<sp/>format.h.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_POSIX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_POSIX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Workaround<sp/>MinGW<sp/>bug<sp/>https://sourceforge.net/p/mingw/bugs/2024/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>__STRICT_ANSI__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>O_RDONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>locale_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>strtod_l</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__APPLE__<sp/>||<sp/>defined(__FreeBSD__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;xlocale.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>LC_NUMERIC_MASK<sp/>on<sp/>OS<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="format_8h" kindref="compound">fmt/format.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_POSIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>!defined(__MINGW32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fix<sp/>warnings<sp/>about<sp/>deprecated<sp/>symbols.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_POSIX(call)<sp/>_##call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="posix_8h_1a6fa0773ef89920062fe6ab8b6e3cf337" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_POSIX(call)<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calls<sp/>to<sp/>system<sp/>functions<sp/>are<sp/>wrapped<sp/>in<sp/>FMT_SYSTEM<sp/>for<sp/>testability.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FMT_SYSTEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>FMT_POSIX_CALL(call)<sp/>FMT_SYSTEM(call)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="posix_8h_1acca658935a0993e7cf549b4a5be255a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>FMT_SYSTEM(call)<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fix<sp/>warnings<sp/>about<sp/>deprecated<sp/>symbols.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_POSIX_CALL(call)<sp/>::_##call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="posix_8h_1aa693a9f0c55e9b081f1ea5bf04968dd7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_POSIX_CALL(call)<sp/>::call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retries<sp/>the<sp/>expression<sp/>while<sp/>it<sp/>evaluates<sp/>to<sp/>error_result<sp/>and<sp/>errno</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>equals<sp/>to<sp/>EINTR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="posix_8h_1a54f7e73fc1fc6ded8358c6339b51bde7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>FMT_RETRY_VAL(result,<sp/>expression,<sp/>error_result)<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(expression);<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(result<sp/>==<sp/>error_result<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>FMT_RETRY_VAL(result,<sp/>expression,<sp/>error_result)<sp/>result<sp/>=<sp/>(expression)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="posix_8h_1a9d6790ac79298b8abd2472500422e138" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_RETRY(result,<sp/>expression)<sp/>FMT_RETRY_VAL(result,<sp/>expression,<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefmt" kindref="compound">fmt</ref><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classfmt_1_1_error_code" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfmt_1_1_error_code" kindref="compound">ErrorCode</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="classfmt_1_1_error_code_1ae71991434be8bb8288295c9c9e327436" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_error_code_1ae71991434be8bb8288295c9c9e327436" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="classfmt_1_1_error_code_1ad00ec32ba4e9a9591e856653b4d682be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_error_code_1ad00ec32ba4e9a9591e856653b4d682be" kindref="member">ErrorCode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>=<sp/>0)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>value_(<ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classfmt_1_1_error_code_1a2536abb622de047cd5be707df1df7493" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_error_code_1ae71991434be8bb8288295c9c9e327436" kindref="member">value_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>buffered<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classfmt_1_1_buffered_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83" refid="classfmt_1_1_buffered_file_1a670164faa1fd6798f843b8391bbe7ae3" refkind="member"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="classfmt_1_1_buffered_file_1a670164faa1fd6798f843b8391bbe7ae3" kindref="member">file_</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classfmt_1_1_buffered_file_1a68d15876ad188b7628261b12d0eac8aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfmt_1_1_file" kindref="compound">File</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classfmt_1_1_buffered_file_1a94fc8eb377ae4ae7bbd85c0c73a1d09c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_buffered_file_1a94fc8eb377ae4ae7bbd85c0c73a1d09c" kindref="member">BufferedFile</ref>(FILE<sp/>*<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>)<sp/>:<sp/>file_(f)<sp/>{}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>BufferedFile<sp/>object<sp/>which<sp/>doesn&apos;t<sp/>represent<sp/>any<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classfmt_1_1_buffered_file_1a2a996ecfca1c6d53caa60089526bae03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file_1a2a996ecfca1c6d53caa60089526bae03" kindref="member">BufferedFile</ref>()<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>file_(0)<sp/>{}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroys<sp/>the<sp/>object<sp/>closing<sp/>the<sp/>file<sp/>it<sp/>represents<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>~<ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref>()<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!FMT_USE_RVALUE_REFERENCES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Emulate<sp/>a<sp/>move<sp/>constructor<sp/>and<sp/>a<sp/>move<sp/>assignment<sp/>operator<sp/>if<sp/>rvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>references<sp/>are<sp/>not<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>proxy<sp/>object<sp/>to<sp/>emulate<sp/>a<sp/>move<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>private<sp/>to<sp/>make<sp/>it<sp/>impossible<sp/>call<sp/>operator<sp/>Proxy<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structfmt_1_1_buffered_file_1_1_proxy" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfmt_1_1_buffered_file_1_1_proxy" kindref="compound">Proxy</ref><sp/>{</highlight></codeline>
<codeline lineno="104" refid="structfmt_1_1_buffered_file_1_1_proxy_1ab737f6fdac9906d3b6acde45e716a549" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="structfmt_1_1_buffered_file_1_1_proxy_1ab737f6fdac9906d3b6acde45e716a549" kindref="member">file</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>constructor&quot;<sp/>for<sp/>moving<sp/>from<sp/>a<sp/>temporary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classfmt_1_1_buffered_file_1a893b570968946b0f0f54c32a4c9742b6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file_1a893b570968946b0f0f54c32a4c9742b6" kindref="member">BufferedFile</ref>(<ref refid="structfmt_1_1_buffered_file_1_1_proxy" kindref="compound">Proxy</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>file_(<ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>.file)<sp/>{}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>constructor&quot;<sp/>for<sp/>moving<sp/>from<sp/>an<sp/>lvalue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classfmt_1_1_buffered_file_1a5bc528da7a6888f44a2f753cef3a7a09" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file_1a5bc528da7a6888f44a2f753cef3a7a09" kindref="member">BufferedFile</ref>(<ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>&amp;<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>file_(<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>.file_)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>.file_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>assignment<sp/>operator&quot;<sp/>for<sp/>moving<sp/>from<sp/>a<sp/>temporary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classfmt_1_1_buffered_file_1a03830cce82e5afbf2ddc39f3132db199" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>&amp;<ref refid="classfmt_1_1_buffered_file_1a03830cce82e5afbf2ddc39f3132db199" kindref="member">operator=</ref>(<ref refid="structfmt_1_1_buffered_file_1_1_proxy" kindref="compound">Proxy</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>file_<sp/>=<sp/>p.<ref refid="structfmt_1_1_buffered_file_1_1_proxy_1ab737f6fdac9906d3b6acde45e716a549" kindref="member">file</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>assignment<sp/>operator&quot;<sp/>for<sp/>moving<sp/>from<sp/>an<sp/>lvalue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classfmt_1_1_buffered_file_1ad517d6edd8d0cff10e12abc7210431fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>&amp;<ref refid="classfmt_1_1_buffered_file_1ad517d6edd8d0cff10e12abc7210431fc" kindref="member">operator=</ref>(<ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>file_<sp/>=<sp/>other.<ref refid="classfmt_1_1_buffered_file_1a670164faa1fd6798f843b8391bbe7ae3" kindref="member">file_</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>other.<ref refid="classfmt_1_1_buffered_file_1a670164faa1fd6798f843b8391bbe7ae3" kindref="member">file_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>proxy<sp/>object<sp/>for<sp/>moving<sp/>from<sp/>a<sp/>temporary:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>BufferedFile<sp/>file<sp/>=<sp/>BufferedFile(...);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classfmt_1_1_buffered_file_1a54ffb69364af7d25bc8b19eb4e901ac5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="structfmt_1_1_buffered_file_1_1_proxy" kindref="compound">Proxy</ref>()<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfmt_1_1_buffered_file_1_1_proxy" kindref="compound">Proxy</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref><sp/>=<sp/>{file_};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>file_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="format_8h_1acc0b3b39544c7a0930ae1567d952a8d4" kindref="member">FMT_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref>(<ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>&amp;&amp;other)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>file_(other.file_)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>other.file_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref>&amp;<sp/>operator=(<ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>&amp;&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>file_<sp/>=<sp/>other.file_;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>other.file_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Opens<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref>(<ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">CStringRef</ref><sp/>filename,<sp/><ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">CStringRef</ref><sp/><ref refid="glew_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Closes<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>pointer<sp/>to<sp/>a<sp/>FILE<sp/>object<sp/>representing<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classfmt_1_1_buffered_file_1a2702f924d04db7f93b7512dd12ba79df" refkind="member"><highlight class="normal"><sp/><sp/>FILE<sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_;<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>place<sp/>parentheses<sp/>around<sp/>fileno<sp/>to<sp/>workaround<sp/>a<sp/>bug<sp/>in<sp/>some<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>MinGW<sp/>that<sp/>define<sp/>fileno<sp/>as<sp/>a<sp/>macro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref><sp/>(fileno)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classfmt_1_1_buffered_file_1aa07aa36b56d75a0e8db27d1790a8266c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_buffered_file_1aa07aa36b56d75a0e8db27d1790a8266c" kindref="member">print</ref>(<ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">CStringRef</ref><sp/>format_str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_arg_list" kindref="compound">ArgList</ref><sp/>&amp;args)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefmt_1adec465a02f79e1e023ec283fa6da9f13" kindref="member">fmt::print</ref>(file_,<sp/>format_str,<sp/>args);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="format_8h_1a65215c7dfcc0e942cd0798860877e86b" kindref="member">FMT_VARIADIC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/><ref refid="namespacefmt_1adec465a02f79e1e023ec283fa6da9f13" kindref="member">print</ref>,<sp/><ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">CStringRef</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>file.<sp/>Closed<sp/>file<sp/>is<sp/>represented<sp/>by<sp/>a<sp/>File<sp/>object<sp/>with<sp/>descriptor<sp/>-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Methods<sp/>that<sp/>are<sp/>not<sp/>declared<sp/>with<sp/>FMT_NOEXCEPT<sp/>may<sp/>throw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fmt::SystemError<sp/>in<sp/>case<sp/>of<sp/>failure.<sp/>Note<sp/>that<sp/>some<sp/>errors<sp/>such<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>closing<sp/>the<sp/>file<sp/>multiple<sp/>times<sp/>will<sp/>cause<sp/>a<sp/>crash<sp/>on<sp/>Windows<sp/>rather</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>an<sp/>exception.<sp/>You<sp/>can<sp/>get<sp/>standard<sp/>behavior<sp/>by<sp/>overriding<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>invalid<sp/>parameter<sp/>handler<sp/>with<sp/>_set_invalid_parameter_handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classfmt_1_1_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183" refid="classfmt_1_1_file_1afdcf7b474c64251e2a1e4e29a6123a7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_file_1afdcf7b474c64251e2a1e4e29a6123a7b" kindref="member">fd_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>descriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>File<sp/>object<sp/>with<sp/>a<sp/>given<sp/>descriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classfmt_1_1_file_1adfb362493ea08b5be31d10847403c2ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_file_1adfb362493ea08b5be31d10847403c2ca" kindref="member">File</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)<sp/>:<sp/>fd_(fd)<sp/>{}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Possible<sp/>values<sp/>for<sp/>the<sp/>oflag<sp/>argument<sp/>to<sp/>the<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191" refid="classfmt_1_1_file_1a77a5cec6620e02afe25d5df7626ecc06a0da25552868db9d1a1fd6e0f1b523084" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RDONLY<sp/>=<sp/><ref refid="posix_8h_1a6fa0773ef89920062fe6ab8b6e3cf337" kindref="member">FMT_POSIX</ref>(O_RDONLY),<sp/></highlight><highlight class="comment">//<sp/>Open<sp/>for<sp/>reading<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classfmt_1_1_file_1a77a5cec6620e02afe25d5df7626ecc06a6cb6bafc4d57536fa52c14e50090812c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>WRONLY<sp/>=<sp/><ref refid="posix_8h_1a6fa0773ef89920062fe6ab8b6e3cf337" kindref="member">FMT_POSIX</ref>(O_WRONLY),<sp/></highlight><highlight class="comment">//<sp/>Open<sp/>for<sp/>writing<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classfmt_1_1_file_1a77a5cec6620e02afe25d5df7626ecc06aba057d48a69e6e314a6b56f67d567461" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RDWR<sp/><sp/><sp/>=<sp/><ref refid="posix_8h_1a6fa0773ef89920062fe6ab8b6e3cf337" kindref="member">FMT_POSIX</ref>(O_RDWR)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>for<sp/>reading<sp/>and<sp/>writing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>File<sp/>object<sp/>which<sp/>doesn&apos;t<sp/>represent<sp/>any<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classfmt_1_1_file_1ac91e0eeb32b780593df95bd399ef1b10" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file_1ac91e0eeb32b780593df95bd399ef1b10" kindref="member">File</ref>()<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>fd_(-1)<sp/>{}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Opens<sp/>a<sp/>file<sp/>and<sp/>constructs<sp/>a<sp/>File<sp/>object<sp/>representing<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref>(<ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">CStringRef</ref><sp/><ref refid="glew_8h_1ab25d8cd967ccbd19b630d7100ff8f67e" kindref="member">path</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oflag);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!FMT_USE_RVALUE_REFERENCES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Emulate<sp/>a<sp/>move<sp/>constructor<sp/>and<sp/>a<sp/>move<sp/>assignment<sp/>operator<sp/>if<sp/>rvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>references<sp/>are<sp/>not<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>proxy<sp/>object<sp/>to<sp/>emulate<sp/>a<sp/>move<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>private<sp/>to<sp/>make<sp/>it<sp/>impossible<sp/>call<sp/>operator<sp/>Proxy<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structfmt_1_1_file_1_1_proxy" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfmt_1_1_file_1_1_proxy" kindref="compound">Proxy</ref><sp/>{</highlight></codeline>
<codeline lineno="210" refid="structfmt_1_1_file_1_1_proxy_1a3fdeb370adfa796de8030bbb20a270c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfmt_1_1_file_1_1_proxy_1a3fdeb370adfa796de8030bbb20a270c9" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>constructor&quot;<sp/>for<sp/>moving<sp/>from<sp/>a<sp/>temporary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classfmt_1_1_file_1af39ee41d0516e4410f935db49bc25a70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file_1af39ee41d0516e4410f935db49bc25a70" kindref="member">File</ref>(<ref refid="structfmt_1_1_file_1_1_proxy" kindref="compound">Proxy</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>fd_(<ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>.fd)<sp/>{}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>constructor&quot;<sp/>for<sp/>moving<sp/>from<sp/>an<sp/>lvalue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classfmt_1_1_file_1aa46430b90123d6ab616599c7da79baae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file_1aa46430b90123d6ab616599c7da79baae" kindref="member">File</ref>(<ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;other)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>fd_(other.fd_)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>other.fd_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>assignment<sp/>operator&quot;<sp/>for<sp/>moving<sp/>from<sp/>a<sp/>temporary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classfmt_1_1_file_1a49693f3a5e0cdb33e8db1e80f3bfb66d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;<ref refid="classfmt_1_1_file_1a49693f3a5e0cdb33e8db1e80f3bfb66d" kindref="member">operator=</ref>(<ref refid="structfmt_1_1_file_1_1_proxy" kindref="compound">Proxy</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_<sp/>=<sp/>p.<ref refid="structfmt_1_1_file_1_1_proxy_1a3fdeb370adfa796de8030bbb20a270c9" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;move<sp/>assignment<sp/>operator&quot;<sp/>for<sp/>moving<sp/>from<sp/>an<sp/>lvalue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classfmt_1_1_file_1a0a5735314d74ec3769077e2ae1ce960a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;<ref refid="classfmt_1_1_file_1a0a5735314d74ec3769077e2ae1ce960a" kindref="member">operator=</ref>(<ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_<sp/>=<sp/>other.<ref refid="classfmt_1_1_file_1afdcf7b474c64251e2a1e4e29a6123a7b" kindref="member">fd_</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>other.<ref refid="classfmt_1_1_file_1afdcf7b474c64251e2a1e4e29a6123a7b" kindref="member">fd_</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>proxy<sp/>object<sp/>for<sp/>moving<sp/>from<sp/>a<sp/>temporary:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>File<sp/>file<sp/>=<sp/>File(...);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classfmt_1_1_file_1ab1523e72fde1f9080a4bae41dccfd824" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="structfmt_1_1_file_1_1_proxy" kindref="compound">Proxy</ref>()<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfmt_1_1_file_1_1_proxy" kindref="compound">Proxy</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref><sp/>=<sp/>{fd_};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="format_8h_1acc0b3b39544c7a0930ae1567d952a8d4" kindref="member">FMT_DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classfmt_1_1_file" kindref="compound">File</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref>(<ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;&amp;other)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>:<sp/>fd_(other.fd_)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>other.fd_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref>&amp;<sp/>operator=(<ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_<sp/>=<sp/>other.fd_;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>other.fd_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroys<sp/>the<sp/>object<sp/>closing<sp/>the<sp/>file<sp/>it<sp/>represents<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>~<ref refid="classfmt_1_1_file" kindref="compound">File</ref>()<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>file<sp/>descriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classfmt_1_1_file_1a19976004ecb9edfb762b5255736fe73c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_file_1a19976004ecb9edfb762b5255736fe73c" kindref="member">descriptor</ref>()<sp/>const<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd_;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Closes<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>file<sp/>size.<sp/>The<sp/>size<sp/>has<sp/>signed<sp/>type<sp/>for<sp/>consistency<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stat::st_size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="namespacefmt_1aef84b50b68fdc25388fed2952c2db563" kindref="member">LongLong</ref><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempts<sp/>to<sp/>read<sp/>count<sp/>bytes<sp/>from<sp/>the<sp/>file<sp/>into<sp/>the<sp/>specified<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>std::size_t<sp/>read(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>,<sp/>std::size_t<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempts<sp/>to<sp/>write<sp/>count<sp/>bytes<sp/>from<sp/>the<sp/>specified<sp/>buffer<sp/>to<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/>std::size_t<sp/>count);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Duplicates<sp/>a<sp/>file<sp/>descriptor<sp/>with<sp/>the<sp/>dup<sp/>function<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>duplicate<sp/>as<sp/>a<sp/>file<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>dup(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Makes<sp/>fd<sp/>be<sp/>the<sp/>copy<sp/>of<sp/>this<sp/>file<sp/>descriptor,<sp/>closing<sp/>fd<sp/>first<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dup2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Makes<sp/>fd<sp/>be<sp/>the<sp/>copy<sp/>of<sp/>this<sp/>file<sp/>descriptor,<sp/>closing<sp/>fd<sp/>first<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dup2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="classfmt_1_1_error_code" kindref="compound">ErrorCode</ref><sp/>&amp;ec)<sp/><ref refid="format_8h_1aef128913e8400683b1cbd1a3a2e11df3" kindref="member">FMT_NOEXCEPT</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>pipe<sp/>setting<sp/>up<sp/>read_end<sp/>and<sp/>write_end<sp/>file<sp/>objects<sp/>for<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>writing<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pipe(<ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;read_end,<sp/><ref refid="classfmt_1_1_file" kindref="compound">File</ref><sp/>&amp;write_end);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>BufferedFile<sp/>object<sp/>associated<sp/>with<sp/>this<sp/>file<sp/>and<sp/>detaches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>File<sp/>object<sp/>from<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">BufferedFile</ref><sp/>fdopen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="glew_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>memory<sp/>page<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacefmt_1a28071220364a5499348cec5dbba7a005" kindref="member">getpagesize</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(LC_NUMERIC_MASK)<sp/>||<sp/>defined(_MSC_VER))<sp/>&amp;&amp;<sp/>!defined(__ANDROID__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>FMT_LOCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FMT_LOCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>&quot;C&quot;<sp/>numeric<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Locale<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>_locale_t<sp/>locale_t;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>LC_NUMERIC_MASK<sp/>=<sp/>LC_NUMERIC<sp/>};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>locale_t<sp/>newlocale(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>category_mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*locale,<sp/>locale_t)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_create_locale(category_mask,<sp/>locale);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freelocale(locale_t<sp/>locale)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>_free_locale(locale);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>strtod_l(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endptr,<sp/>_locale_t<sp/>locale)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_strtod_l(nptr,<sp/>endptr,<sp/>locale);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>locale_t<sp/>locale_;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="format_8h_1acc0b3b39544c7a0930ae1567d952a8d4" kindref="member">FMT_DISALLOW_COPY_AND_ASSIGN</ref>(Locale);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>locale_t<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>Locale()<sp/>:<sp/>locale_(newlocale(LC_NUMERIC_MASK,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!locale_)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_system_error" kindref="compound">fmt::SystemError</ref>(errno,<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>create<sp/>locale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>~Locale()<sp/>{<sp/>freelocale(locale_);<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>Type<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>locale_;<sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Converts<sp/>string<sp/>to<sp/>floating-point<sp/>number<sp/>and<sp/>advances<sp/>str<sp/>past<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>parsed<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>strtod(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;str)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="glew_8h_1a432111147038972f06e049e18a837002" kindref="member">end</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref><sp/>=<sp/>strtod_l(str,<sp/>&amp;end,<sp/>locale_);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="glew_8h_1a432111147038972f06e049e18a837002" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FMT_LOCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!FMT_USE_RVALUE_REFERENCES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>compatibility<sp/>with<sp/>C++98.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="namespacestd_1a37ba44826afa04fddf20fd70c45ac3b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_buffered_file" kindref="compound">fmt::BufferedFile</ref><sp/>&amp;<ref refid="namespacestd_1a8efbeec947c80dbebd7d657d123495db" kindref="member">move</ref>(<ref refid="classfmt_1_1_buffered_file" kindref="compound">fmt::BufferedFile</ref><sp/>&amp;<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>;<sp/>}</highlight></codeline>
<codeline lineno="362" refid="namespacestd_1a8efbeec947c80dbebd7d657d123495db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classfmt_1_1_file" kindref="compound">fmt::File</ref><sp/>&amp;<ref refid="namespacestd_1a8efbeec947c80dbebd7d657d123495db" kindref="member">move</ref>(<ref refid="classfmt_1_1_file" kindref="compound">fmt::File</ref><sp/>&amp;<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>;<sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FMT_POSIX_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/posix.h"/>
  </compounddef>
</doxygen>
