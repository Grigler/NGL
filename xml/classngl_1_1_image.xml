<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_image" kind="class" language="C++" prot="public">
    <compoundname>ngl::Image</compoundname>
    <includes refid="_image_8h" local="no">Image.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3" prot="public" static="no">
        <name>ImageModes</name>
        <enumvalue id="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3a889574aebacda6bfd3e534e2b49b8028" prot="public">
          <name>RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3aea3495a278957dc58165e48a8945469f" prot="public">
          <name>RGBA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>save the FrameBuffer to file using current built in I/O </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name / path of the file to save _x the x position into the framebuffer This location is the lower left corner of a rectangular block of pixels _y the y position into the framebuffer This location is the lower left corner of a rectangular block of pixels _width of the rectangle _height the height of the rectangle _mode RGB or RGBA image </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="74" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="74" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngl_1_1_image_1a1fb243ab588c02a9140c709cd15f5398" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; unsigned char[] &gt;</type>
        <definition>std::unique_ptr&lt;unsigned char[] &gt; ngl::Image::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
<para>the actual image data loaded packed in r,g,b,(a) format in contiguous memory stored in a smart_pointer for safety </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="114" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="classngl_1_1_image_1aeb71aab44c79b64f28a3abdbffe98beb" compoundref="_image_8cpp" startline="46" endline="54">Image</referencedby>
        <referencedby refid="classngl_1_1_image_1a092526069e48a5b4692be349f04f8dd2" compoundref="_image_8cpp" startline="56" endline="76">getColour</referencedby>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_image_1afa97949bbe798b6d74791842f6190591" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>the size of the image in the X direction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="118" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="classngl_1_1_image_1aeb71aab44c79b64f28a3abdbffe98beb" compoundref="_image_8cpp" startline="46" endline="54">Image</referencedby>
        <referencedby refid="classngl_1_1_image_1a092526069e48a5b4692be349f04f8dd2" compoundref="_image_8cpp" startline="56" endline="76">getColour</referencedby>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_image_1ad837381b7874bc096f02db4b15dfa3ed" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>the size of the image in the Y direction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="122" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="classngl_1_1_image_1aeb71aab44c79b64f28a3abdbffe98beb" compoundref="_image_8cpp" startline="46" endline="54">Image</referencedby>
        <referencedby refid="classngl_1_1_image_1a092526069e48a5b4692be349f04f8dd2" compoundref="_image_8cpp" startline="56" endline="76">getColour</referencedby>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_image_1abf71029a3726bf66f63f5a6002dd2b76" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::m_channels</definition>
        <argsstring></argsstring>
        <name>m_channels</name>
        <initializer>=3</initializer>
        <briefdescription>
<para>bits per pixel (RGB / RGBA) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="126" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="126" bodyend="-1"/>
        <referencedby refid="classngl_1_1_image_1aeb71aab44c79b64f28a3abdbffe98beb" compoundref="_image_8cpp" startline="46" endline="54">Image</referencedby>
        <referencedby refid="classngl_1_1_image_1a092526069e48a5b4692be349f04f8dd2" compoundref="_image_8cpp" startline="56" endline="76">getColour</referencedby>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_image_1a4e443593773b79ae2e70b07dacc801b7" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::m_format</definition>
        <argsstring></argsstring>
        <name>m_format</name>
        <initializer>=<ref refid="glew_8h_1a69f1c49996aca30177171c7b086cfb34" kindref="member">GL_RGB</ref></initializer>
        <briefdescription>
<para>image format, use GL types for this as we are going to use this class mainly for OpenGL </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="130" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="130" bodyend="-1"/>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_image_1aa4f4a0c7969c914f350cfc2a82238e24" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::Image::m_loaded</definition>
        <argsstring></argsstring>
        <name>m_loaded</name>
        <initializer>=false</initializer>
        <briefdescription>
<para>loaded flag </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="134" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_image_1a10b481b38e6475897c8662fee0c98f63" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::Image::m_hasAlpha</definition>
        <argsstring></argsstring>
        <name>m_hasAlpha</name>
        <initializer>=false</initializer>
        <briefdescription>
<para>do we have an alpha channel </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="138" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="138" bodyend="-1"/>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_image_1af835182d0da059d2448e69c26f3830df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Image::Image</definition>
        <argsstring>()=default</argsstring>
        <name>Image</name>
        <briefdescription>
<para>default ctor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1ab95086219ab60f652e8022c2b4af429e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Image::Image</definition>
        <argsstring>(const std::string &amp;_fname)</argsstring>
        <name>Image</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_fname</declname>
        </param>
        <briefdescription>
<para>ctor passing in filename </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file to load. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="44" column="1" bodyfile="/Users/jmacey/NGL/src/Image.cpp" bodystart="41" bodyend="44"/>
        <references refid="classngl_1_1_image_1a836b99787c51a05162e6f313cd5ef2c2">load</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1aeb71aab44c79b64f28a3abdbffe98beb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Image::Image</definition>
        <argsstring>(const Image &amp;_i)</argsstring>
        <name>Image</name>
        <param>
          <type>const <ref refid="classngl_1_1_image" kindref="compound">Image</ref> &amp;</type>
          <declname>_i</declname>
        </param>
        <briefdescription>
<para>copy ctor (does a deep copy so could be expensive) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_i</parametername>
</parameternamelist>
<parameterdescription>
<para>image to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="49" column="1" bodyfile="/Users/jmacey/NGL/src/Image.cpp" bodystart="46" bodyend="54"/>
        <references refid="classngl_1_1_image_1abf71029a3726bf66f63f5a6002dd2b76" compoundref="_image_8h" startline="126">m_channels</references>
        <references refid="classngl_1_1_image_1a1fb243ab588c02a9140c709cd15f5398" compoundref="_image_8h" startline="114">m_data</references>
        <references refid="classngl_1_1_image_1ad837381b7874bc096f02db4b15dfa3ed" compoundref="_image_8h" startline="122">m_height</references>
        <references refid="classngl_1_1_image_1afa97949bbe798b6d74791842f6190591" compoundref="_image_8h" startline="118">m_width</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1af22fa44658489810c315c1053df874a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Image::~Image</definition>
        <argsstring>()=default</argsstring>
        <name>~Image</name>
        <briefdescription>
<para>dtor as we use a smart pointer the data will release automatically </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1a836b99787c51a05162e6f313cd5ef2c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngl::Image::load</definition>
        <argsstring>(const std::string &amp;_fname) noexcept</argsstring>
        <name>load</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_fname</declname>
        </param>
        <briefdescription>
<para>load the image data, this will clear the previous data and attempt to load the new image data </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true is loaded ok, else false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="59" column="1"/>
        <referencedby refid="classngl_1_1_image_1ab95086219ab60f652e8022c2b4af429e" compoundref="_image_8cpp" startline="41" endline="44">Image</referencedby>
        <referencedby refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" compoundref="_image_8cpp" startline="105" endline="155">saveFrameBufferToFile</referencedby>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">ngl::Texture::Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">ngl::Texture::loadImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1ac59efd33040751c18b3389fbaea988bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* ngl::Image::getPixels</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getPixels</name>
        <briefdescription>
<para>raw access to unsigned char pixel data </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the first image pixel element. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="64" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="64" bodyend="64"/>
        <referencedby refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" compoundref="_texture_8cpp" startline="64" endline="78">ngl::Texture::setTextureGL</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1afd54496e8ae21e8df0d79e1d2aee0b07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::width</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>width</name>
        <briefdescription>
<para>Get the width of the texture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>width of the texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="80" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="80" bodyend="80"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">ngl::Texture::Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">ngl::Texture::loadImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1ad8ce0c58b9f3f2a6cd5ef90f439527f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::height</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>height</name>
        <briefdescription>
<para>Get the height of the texture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>height of the texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="85" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="85" bodyend="85"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">ngl::Texture::Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">ngl::Texture::loadImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1ac36018566ec1a8afcd3d55d617b2282e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::format</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>format</name>
        <briefdescription>
<para>Get the pixel format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>pixel format of the texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="90" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="90" bodyend="90"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">ngl::Texture::Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">ngl::Texture::loadImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1af3c776f7d6aa7b5bba33e2f6a27bfdb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Image::channels</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>channels</name>
        <briefdescription>
<para>gets the number of channels </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>usually 3 (RGB) or 4 (RGBA) but can handle others depending on libl </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="95" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="95" bodyend="95"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">ngl::Texture::Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">ngl::Texture::loadImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1a092526069e48a5b4692be349f04f8dd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref></type>
        <definition>Colour ngl::Image::getColour</definition>
        <argsstring>(const GLuint _x, const GLuint _y) const  noexcept</argsstring>
        <name>getColour</name>
        <param>
          <type>const <ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_y</declname>
        </param>
        <briefdescription>
<para>get the colour value from X,Y co-ordinates (image absolute 0,0 = top Left) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position in the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position in the image </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="101" column="1" bodyfile="/Users/jmacey/NGL/src/Image.cpp" bodystart="56" bodyend="76"/>
        <references refid="classngl_1_1_image_1abf71029a3726bf66f63f5a6002dd2b76" compoundref="_image_8h" startline="126">m_channels</references>
        <references refid="classngl_1_1_image_1a1fb243ab588c02a9140c709cd15f5398" compoundref="_image_8h" startline="114">m_data</references>
        <references refid="classngl_1_1_image_1ad837381b7874bc096f02db4b15dfa3ed" compoundref="_image_8h" startline="122">m_height</references>
        <references refid="classngl_1_1_image_1afa97949bbe798b6d74791842f6190591" compoundref="_image_8h" startline="118">m_width</references>
        <references refid="_n_g_lassert_8h_1acef7dc418d5bcc430c79741ba952beb4" compoundref="_n_g_lassert_8h" startline="53">NGL_ASSERT</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_image_1a9d9a1715c483e87cfbcf0601a8239c4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref></type>
        <definition>Colour ngl::Image::getColour</definition>
        <argsstring>(const Real _uvX, const Real _uvY) const  noexcept</argsstring>
        <name>getColour</name>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_uvX</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_uvY</declname>
        </param>
        <briefdescription>
<para>get the colour value from X,Y co-ordinates in texture space </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_uvX</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position in the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_uvY</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position in the image </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="107" column="1" bodyfile="/Users/jmacey/NGL/src/Image.cpp" bodystart="79" bodyend="103"/>
        <references refid="classngl_1_1_image_1abf71029a3726bf66f63f5a6002dd2b76" compoundref="_image_8h" startline="126">m_channels</references>
        <references refid="classngl_1_1_image_1a1fb243ab588c02a9140c709cd15f5398" compoundref="_image_8h" startline="114">m_data</references>
        <references refid="classngl_1_1_image_1ad837381b7874bc096f02db4b15dfa3ed" compoundref="_image_8h" startline="122">m_height</references>
        <references refid="classngl_1_1_image_1afa97949bbe798b6d74791842f6190591" compoundref="_image_8h" startline="118">m_width</references>
        <references refid="_n_g_lassert_8h_1acef7dc418d5bcc430c79741ba952beb4" compoundref="_n_g_lassert_8h" startline="53">NGL_ASSERT</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Image::saveFrameBufferToFile</definition>
        <argsstring>(const std::string &amp;_fname, int _x, int _y, int _width, int _height, ImageModes _mode=ImageModes::RGB)</argsstring>
        <name>saveFrameBufferToFile</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_fname</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_width</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_height</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3" kindref="member">ImageModes</ref></type>
          <declname>_mode</declname>
          <defval><ref refid="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3a889574aebacda6bfd3e534e2b49b8028" kindref="member">ImageModes::RGB</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="75" column="1" bodyfile="/Users/jmacey/NGL/src/Image.cpp" bodystart="105" bodyend="155"/>
        <references refid="glew_8h_1a69f1c49996aca30177171c7b086cfb34" compoundref="glew_8h" startline="680">GL_RGB</references>
        <references refid="glew_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4" compoundref="glew_8h" startline="681">GL_RGBA</references>
        <references refid="glew_8h_1a80a33c79f69417372d65d2a65ca36d49" compoundref="glew_8h" startline="637">GL_UNSIGNED_BYTE</references>
        <references refid="glew_8h_1aac48a329f0ddbfea61b8bb056460201a">glReadPixels</references>
        <references refid="classngl_1_1_image_1a836b99787c51a05162e6f313cd5ef2c2">load</references>
        <references refid="classngl_1_1_image_1abf71029a3726bf66f63f5a6002dd2b76" compoundref="_image_8h" startline="126">m_channels</references>
        <references refid="classngl_1_1_image_1a1fb243ab588c02a9140c709cd15f5398" compoundref="_image_8h" startline="114">m_data</references>
        <references refid="classngl_1_1_image_1a4e443593773b79ae2e70b07dacc801b7" compoundref="_image_8h" startline="130">m_format</references>
        <references refid="classngl_1_1_image_1a10b481b38e6475897c8662fee0c98f63" compoundref="_image_8h" startline="138">m_hasAlpha</references>
        <references refid="classngl_1_1_image_1ad837381b7874bc096f02db4b15dfa3ed" compoundref="_image_8h" startline="122">m_height</references>
        <references refid="classngl_1_1_image_1afa97949bbe798b6d74791842f6190591" compoundref="_image_8h" startline="118">m_width</references>
        <references refid="_n_g_lassert_8h_1acef7dc418d5bcc430c79741ba952beb4" compoundref="_n_g_lassert_8h" startline="53">NGL_ASSERT</references>
        <references refid="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3aea3495a278957dc58165e48a8945469f">RGBA</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1607">
        <label>ngl::Image</label>
        <link refid="classngl_1_1_image"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/Image.h" line="34" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Image.h" bodystart="33" bodyend="140"/>
    <listofallmembers>
      <member refid="classngl_1_1_image_1af3c776f7d6aa7b5bba33e2f6a27bfdb7" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>channels</name></member>
      <member refid="classngl_1_1_image_1ac36018566ec1a8afcd3d55d617b2282e" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>format</name></member>
      <member refid="classngl_1_1_image_1a092526069e48a5b4692be349f04f8dd2" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>getColour</name></member>
      <member refid="classngl_1_1_image_1a9d9a1715c483e87cfbcf0601a8239c4f" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>getColour</name></member>
      <member refid="classngl_1_1_image_1ac59efd33040751c18b3389fbaea988bc" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>getPixels</name></member>
      <member refid="classngl_1_1_image_1ad8ce0c58b9f3f2a6cd5ef90f439527f9" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>height</name></member>
      <member refid="classngl_1_1_image_1af835182d0da059d2448e69c26f3830df" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>Image</name></member>
      <member refid="classngl_1_1_image_1ab95086219ab60f652e8022c2b4af429e" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>Image</name></member>
      <member refid="classngl_1_1_image_1aeb71aab44c79b64f28a3abdbffe98beb" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>Image</name></member>
      <member refid="classngl_1_1_image_1aac33e0b8e85f864ecf829c239a7c8bc3" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>ImageModes</name></member>
      <member refid="classngl_1_1_image_1a836b99787c51a05162e6f313cd5ef2c2" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>load</name></member>
      <member refid="classngl_1_1_image_1abf71029a3726bf66f63f5a6002dd2b76" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_channels</name></member>
      <member refid="classngl_1_1_image_1a1fb243ab588c02a9140c709cd15f5398" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_data</name></member>
      <member refid="classngl_1_1_image_1a4e443593773b79ae2e70b07dacc801b7" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_format</name></member>
      <member refid="classngl_1_1_image_1a10b481b38e6475897c8662fee0c98f63" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_hasAlpha</name></member>
      <member refid="classngl_1_1_image_1ad837381b7874bc096f02db4b15dfa3ed" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_height</name></member>
      <member refid="classngl_1_1_image_1aa4f4a0c7969c914f350cfc2a82238e24" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_loaded</name></member>
      <member refid="classngl_1_1_image_1afa97949bbe798b6d74791842f6190591" prot="private" virt="non-virtual"><scope>ngl::Image</scope><name>m_width</name></member>
      <member refid="classngl_1_1_image_1ae092e0b30e34806d9026d332acd53cfe" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>saveFrameBufferToFile</name></member>
      <member refid="classngl_1_1_image_1afd54496e8ae21e8df0d79e1d2aee0b07" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>width</name></member>
      <member refid="classngl_1_1_image_1af22fa44658489810c315c1053df874a9" prot="public" virt="non-virtual"><scope>ngl::Image</scope><name>~Image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
