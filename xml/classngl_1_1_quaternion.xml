<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_quaternion" kind="class" language="C++" prot="public">
    <compoundname>ngl::Quaternion</compoundname>
    <includes refid="_quaternion_8h" local="no">Quaternion.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::m_s</definition>
        <argsstring></argsstring>
        <name>m_s</name>
        <briefdescription>
<para>the quaternion data for the scalar real part </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="306" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="306" bodyend="-1"/>
        <referencedby refid="classngl_1_1_quaternion_1a9bb2e6e7305b15a7ea748fb761d400d2" compoundref="_quaternion_8cpp" startline="88" endline="107">operator*</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acb1fb8b69778638ce4cc03904220e70c" compoundref="_quaternion_8cpp" startline="117" endline="125">operator+</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aa21bca2367f12aac8c5b18870876fa4c" compoundref="_quaternion_8cpp" startline="128" endline="136">operator-</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" compoundref="_quaternion_8cpp" startline="171" endline="178">normalise</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" compoundref="_quaternion_8cpp" startline="182" endline="185">magnitude</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a0cbd2e6aacb29c48ed2f9ffe2bac70b4" compoundref="_quaternion_8cpp" startline="188" endline="196">operator==</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a6dfed93492f82b5fb126bd128c444ebf" compoundref="_quaternion_8cpp" startline="211" endline="219">rotateX</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aff36f97a44e888b009d643b5034f79a3" compoundref="_quaternion_8cpp" startline="221" endline="230">rotateY</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a575aadb4a60707541fec638be0786a79" compoundref="_quaternion_8cpp" startline="232" endline="242">rotateZ</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a8f3f2b8f1e1148906464cd3e5388e993" compoundref="_quaternion_8cpp" startline="245" endline="256">fromAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aee2cf20d40d7448d2c48a4cc15557461" compoundref="_quaternion_8cpp" startline="259" endline="272">fromEulerAngles</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1ada890b0f9f3bfc6b6bc7c6bde3a1af1f" compoundref="_quaternion_8cpp" startline="282" endline="293">toAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acaf83233694a76c38d72b0d8c6ee5a37" compoundref="_quaternion_8cpp" startline="295" endline="336">slerp</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a86d9082e6d544e2d31aff8c90a0c9fd4" compoundref="_quaternion_8cpp" startline="340" endline="377">toMat4</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a3f490ba27161ecec25b0f7215631b37f" compoundref="_quaternion_8cpp" startline="379" endline="416">toMat4Transpose</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::m_x</definition>
        <argsstring></argsstring>
        <name>m_x</name>
        <briefdescription>
<para>the quaternion data for x </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="308" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="308" bodyend="-1"/>
        <referencedby refid="classngl_1_1_quaternion_1a9bb2e6e7305b15a7ea748fb761d400d2" compoundref="_quaternion_8cpp" startline="88" endline="107">operator*</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acb1fb8b69778638ce4cc03904220e70c" compoundref="_quaternion_8cpp" startline="117" endline="125">operator+</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aa21bca2367f12aac8c5b18870876fa4c" compoundref="_quaternion_8cpp" startline="128" endline="136">operator-</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" compoundref="_quaternion_8cpp" startline="171" endline="178">normalise</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" compoundref="_quaternion_8cpp" startline="182" endline="185">magnitude</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a0cbd2e6aacb29c48ed2f9ffe2bac70b4" compoundref="_quaternion_8cpp" startline="188" endline="196">operator==</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a6dfed93492f82b5fb126bd128c444ebf" compoundref="_quaternion_8cpp" startline="211" endline="219">rotateX</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aff36f97a44e888b009d643b5034f79a3" compoundref="_quaternion_8cpp" startline="221" endline="230">rotateY</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a575aadb4a60707541fec638be0786a79" compoundref="_quaternion_8cpp" startline="232" endline="242">rotateZ</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a8f3f2b8f1e1148906464cd3e5388e993" compoundref="_quaternion_8cpp" startline="245" endline="256">fromAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aee2cf20d40d7448d2c48a4cc15557461" compoundref="_quaternion_8cpp" startline="259" endline="272">fromEulerAngles</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a9a2796abae29dd1d9eb4cdca67798761" compoundref="_quaternion_8cpp" startline="274" endline="280">rotatePoint</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1ada890b0f9f3bfc6b6bc7c6bde3a1af1f" compoundref="_quaternion_8cpp" startline="282" endline="293">toAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acaf83233694a76c38d72b0d8c6ee5a37" compoundref="_quaternion_8cpp" startline="295" endline="336">slerp</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a86d9082e6d544e2d31aff8c90a0c9fd4" compoundref="_quaternion_8cpp" startline="340" endline="377">toMat4</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a3f490ba27161ecec25b0f7215631b37f" compoundref="_quaternion_8cpp" startline="379" endline="416">toMat4Transpose</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::m_y</definition>
        <argsstring></argsstring>
        <name>m_y</name>
        <briefdescription>
<para>the quaternion data for y </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="310" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="310" bodyend="-1"/>
        <referencedby refid="classngl_1_1_quaternion_1a9bb2e6e7305b15a7ea748fb761d400d2" compoundref="_quaternion_8cpp" startline="88" endline="107">operator*</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acb1fb8b69778638ce4cc03904220e70c" compoundref="_quaternion_8cpp" startline="117" endline="125">operator+</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aa21bca2367f12aac8c5b18870876fa4c" compoundref="_quaternion_8cpp" startline="128" endline="136">operator-</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" compoundref="_quaternion_8cpp" startline="171" endline="178">normalise</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" compoundref="_quaternion_8cpp" startline="182" endline="185">magnitude</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a0cbd2e6aacb29c48ed2f9ffe2bac70b4" compoundref="_quaternion_8cpp" startline="188" endline="196">operator==</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a6dfed93492f82b5fb126bd128c444ebf" compoundref="_quaternion_8cpp" startline="211" endline="219">rotateX</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aff36f97a44e888b009d643b5034f79a3" compoundref="_quaternion_8cpp" startline="221" endline="230">rotateY</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a575aadb4a60707541fec638be0786a79" compoundref="_quaternion_8cpp" startline="232" endline="242">rotateZ</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a8f3f2b8f1e1148906464cd3e5388e993" compoundref="_quaternion_8cpp" startline="245" endline="256">fromAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aee2cf20d40d7448d2c48a4cc15557461" compoundref="_quaternion_8cpp" startline="259" endline="272">fromEulerAngles</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a9a2796abae29dd1d9eb4cdca67798761" compoundref="_quaternion_8cpp" startline="274" endline="280">rotatePoint</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1ada890b0f9f3bfc6b6bc7c6bde3a1af1f" compoundref="_quaternion_8cpp" startline="282" endline="293">toAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acaf83233694a76c38d72b0d8c6ee5a37" compoundref="_quaternion_8cpp" startline="295" endline="336">slerp</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a86d9082e6d544e2d31aff8c90a0c9fd4" compoundref="_quaternion_8cpp" startline="340" endline="377">toMat4</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a3f490ba27161ecec25b0f7215631b37f" compoundref="_quaternion_8cpp" startline="379" endline="416">toMat4Transpose</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::m_z</definition>
        <argsstring></argsstring>
        <name>m_z</name>
        <briefdescription>
<para>the quaternion data for z </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="312" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="312" bodyend="-1"/>
        <referencedby refid="classngl_1_1_quaternion_1a9bb2e6e7305b15a7ea748fb761d400d2" compoundref="_quaternion_8cpp" startline="88" endline="107">operator*</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acb1fb8b69778638ce4cc03904220e70c" compoundref="_quaternion_8cpp" startline="117" endline="125">operator+</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aa21bca2367f12aac8c5b18870876fa4c" compoundref="_quaternion_8cpp" startline="128" endline="136">operator-</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" compoundref="_quaternion_8cpp" startline="171" endline="178">normalise</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" compoundref="_quaternion_8cpp" startline="182" endline="185">magnitude</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a0cbd2e6aacb29c48ed2f9ffe2bac70b4" compoundref="_quaternion_8cpp" startline="188" endline="196">operator==</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a6dfed93492f82b5fb126bd128c444ebf" compoundref="_quaternion_8cpp" startline="211" endline="219">rotateX</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aff36f97a44e888b009d643b5034f79a3" compoundref="_quaternion_8cpp" startline="221" endline="230">rotateY</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a575aadb4a60707541fec638be0786a79" compoundref="_quaternion_8cpp" startline="232" endline="242">rotateZ</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a8f3f2b8f1e1148906464cd3e5388e993" compoundref="_quaternion_8cpp" startline="245" endline="256">fromAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1aee2cf20d40d7448d2c48a4cc15557461" compoundref="_quaternion_8cpp" startline="259" endline="272">fromEulerAngles</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a9a2796abae29dd1d9eb4cdca67798761" compoundref="_quaternion_8cpp" startline="274" endline="280">rotatePoint</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1ada890b0f9f3bfc6b6bc7c6bde3a1af1f" compoundref="_quaternion_8cpp" startline="282" endline="293">toAxisAngle</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1acaf83233694a76c38d72b0d8c6ee5a37" compoundref="_quaternion_8cpp" startline="295" endline="336">slerp</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a86d9082e6d544e2d31aff8c90a0c9fd4" compoundref="_quaternion_8cpp" startline="340" endline="377">toMat4</referencedby>
        <referencedby refid="classngl_1_1_quaternion_1a3f490ba27161ecec25b0f7215631b37f" compoundref="_quaternion_8cpp" startline="379" endline="416">toMat4Transpose</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_quaternion_1a87a6ddc4cc9559df46a57bff182b74d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngl::Quaternion::Quaternion</definition>
        <argsstring>(const Real _s=0.0f, const Real _x=0.0f, const Real _y=0.0f, const Real _z=0.0f) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_s</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
          <defval>0.0f</defval>
        </param>
        <briefdescription>
<para>constructor I use the format used in John Vinces bood where we have a scalar and a vector, some libs do this the otherway round and use the w component, make sure you check if using different libs </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_s</parametername>
</parameternamelist>
<parameterdescription>
<para>- the s component of the quaternion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>- the x component of the quaternion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>- the y component of the quaternion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>- the z component of the quaternion </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="51" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a2ded3ec00d13ba2d21b1397187aad0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>(const Mat4 &amp;_m) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref> &amp;</type>
          <declname>_m</declname>
        </param>
        <briefdescription>
<para>constructor passing in a matrix </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to build the quat from this is useful when using the slerp so we can interpolate between two rotation matrices </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="62" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="30" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a632d93cb40661e500c6e0154d6d10706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>(const Vec3 &amp;_rot) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_rot</declname>
        </param>
        <briefdescription>
<para>constructor passing in a <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> which represents the rolls around the x y and z axis </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_rot</parametername>
</parameternamelist>
<parameterdescription>
<para>the roatation to build the quat from this is useful when using the slerp so we can interpolate between two rotation matrices </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="70" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="70" bodyend="85"/>
        <references refid="namespacengl_1a0bade03a2edcb08a49da7731394284fe" compoundref="_util_8cpp" startline="89" endline="92">ngl::radians</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a248652fd20ebf3c83502a09a7b65ad14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngl::Quaternion::Quaternion</definition>
        <argsstring>(const Quaternion &amp;_q) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>copy constructor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quaternion to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="75" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a9e9fa2cb4f30d3486a1b13c374c43cbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::set</definition>
        <argsstring>(Real _s, Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_s</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>method to set the quaternion values </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>the z value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_w</parametername>
</parameternamelist>
<parameterdescription>
<para>the w value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="87" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="87" bodyend="93"/>
        <referencedby refid="classngl_1_1_quaternion_1a9a2796abae29dd1d9eb4cdca67798761" compoundref="_quaternion_8cpp" startline="274" endline="280">rotatePoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aae275b2005fc4112eb2949fde2e2ff74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::getS</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getS</name>
        <briefdescription>
<para>accesor for the scalar part </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>m_s the scalar part of the quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="98" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="98" bodyend="98"/>
        <referencedby refid="namespacengl_1af7d6529b9460ca8d335e5c90e2ec310f" compoundref="_n_g_l_stream_8cpp" startline="99" endline="102">ngl::operator&lt;&lt;</referencedby>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af09e096530638ecc6bda0ca56a4bf21d" compoundref="_x_m_l_serializer_8cpp" startline="249" endline="253">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aabbf1f62a783942312fd041114be049c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::getX</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getX</name>
        <briefdescription>
<para>accesor for the x vector components </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>m_x the scalar part of the quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="103" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="103" bodyend="103"/>
        <referencedby refid="namespacengl_1af7d6529b9460ca8d335e5c90e2ec310f" compoundref="_n_g_l_stream_8cpp" startline="99" endline="102">ngl::operator&lt;&lt;</referencedby>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af09e096530638ecc6bda0ca56a4bf21d" compoundref="_x_m_l_serializer_8cpp" startline="249" endline="253">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a65f77385ff2d1036a182ce35606b91f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::getY</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getY</name>
        <briefdescription>
<para>accesor for the y vector components </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>m_y the scalar part of the quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="108" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="108" bodyend="108"/>
        <referencedby refid="namespacengl_1af7d6529b9460ca8d335e5c90e2ec310f" compoundref="_n_g_l_stream_8cpp" startline="99" endline="102">ngl::operator&lt;&lt;</referencedby>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af09e096530638ecc6bda0ca56a4bf21d" compoundref="_x_m_l_serializer_8cpp" startline="249" endline="253">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a4bb95b29c955671ac50f50246762932c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::Quaternion::getZ</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getZ</name>
        <briefdescription>
<para>accesor for the z vector components </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>m_z the scalar part of the quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="113" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="113" bodyend="113"/>
        <referencedby refid="namespacengl_1af7d6529b9460ca8d335e5c90e2ec310f" compoundref="_n_g_l_stream_8cpp" startline="99" endline="102">ngl::operator&lt;&lt;</referencedby>
        <referencedby refid="classngl_1_1_x_m_l_serializer_1af09e096530638ecc6bda0ca56a4bf21d" compoundref="_x_m_l_serializer_8cpp" startline="249" endline="253">ngl::XMLSerializer::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a72c1ee85e4a5e1148b5bc1cbf1f2a5b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref></type>
        <definition>Vec4 ngl::Quaternion::getVector</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getVector</name>
        <briefdescription>
<para>accesor for the vector components as an <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="118" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a0e449f010fd056bf99fa36728958fea7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::setVector</definition>
        <argsstring>(const Vec4 &amp;_v) noexcept</argsstring>
        <name>setVector</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> &amp;</type>
          <declname>_v</declname>
        </param>
        <briefdescription>
<para>mutator for the vector components as an <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_v</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to set the quat vector components from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="123" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1acce239884db44d5e1177feb10125e48d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::setS</definition>
        <argsstring>(Real &amp;_s) noexcept</argsstring>
        <name>setS</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &amp;</type>
          <declname>_s</declname>
        </param>
        <briefdescription>
<para>mutator for the scalar part </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_s</parametername>
</parameternamelist>
<parameterdescription>
<para>the scalar part of the quaternion to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="133" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1ab7cf75f0e3195018b759daf3c3a16be4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::setX</definition>
        <argsstring>(Real &amp;_x) noexcept</argsstring>
        <name>setX</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &amp;</type>
          <declname>_x</declname>
        </param>
        <briefdescription>
<para>mutator for the x vector part </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x vector part of the quaternion to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="138" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1afab54cb6bc92b4dae96cc5e2717fe9fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::setY</definition>
        <argsstring>(Real &amp;_y) noexcept</argsstring>
        <name>setY</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &amp;</type>
          <declname>_y</declname>
        </param>
        <briefdescription>
<para>mutator for the y vector part </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x vector part of the quaternion to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="143" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1afe33a089e8eaf531e5627fe45e1b3ffe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::setZ</definition>
        <argsstring>(Real &amp;_z) noexcept</argsstring>
        <name>setZ</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &amp;</type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>mutator for the z vector part </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>the z vector part of the quaternion to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="148" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="148" bodyend="148"/>
        <references refid="namespacengl_1abf8f4c8a842fda025d266ea490dd1ab0" compoundref="_vec2_8h" startline="286" endline="289">ngl::operator*</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a9bb2e6e7305b15a7ea748fb761d400d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Quaternion::operator*</definition>
        <argsstring>(const Quaternion &amp;_q) const  noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>Perform a multiplication between 2 quaternions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result of the mutliplication (product) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="154" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="88" bodyend="107"/>
        <references refid="classngl_1_1_vec4_1ad96cd267cff49372a6d45d840d899727" compoundref="_vec4_8cpp" startline="110" endline="115">ngl::Vec4::cross</references>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_vec4_1a3ffbb98e16e3e05d658cf38907911fff" compoundref="_vec4_8h" startline="321">ngl::Vec4::m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_vec4_1adc415581c84f9e54f15198a002f8948b" compoundref="_vec4_8h" startline="322">ngl::Vec4::m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="classngl_1_1_vec4_1afef13d1ede4b248147e7dd126fd1e17a" compoundref="_vec4_8h" startline="323">ngl::Vec4::m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a61eebd9b7f748193f3d6dca0e87b5505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::operator*=</definition>
        <argsstring>(const Quaternion &amp;_q) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>Perform a multiplication this and another quaternions sets the current quat q1 = q1*q2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="160" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a1e11408738fcb0a99dd1c4ac2679f2b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Quaternion::operator*</definition>
        <argsstring>(Real _s) const  noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_s</declname>
        </param>
        <briefdescription>
<para>Perform a multiplication between a quaternion and a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_s</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs scalar argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result of the mutliplication q*s </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="166" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1ae61bc3b06a45c915836401e02bf1af71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::operator*=</definition>
        <argsstring>(Real _s) noexcept</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_s</declname>
        </param>
        <briefdescription>
<para>Perform a multiplication this and a real scalar sets the current quat to q=q*_s. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_s</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="172" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="160" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1acb1fb8b69778638ce4cc03904220e70c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Quaternion::operator+</definition>
        <argsstring>(const Quaternion &amp;_q) const  noexcept</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>add two quaternions </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="178" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="117" bodyend="125"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aa21bca2367f12aac8c5b18870876fa4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Quaternion::operator-</definition>
        <argsstring>(const Quaternion &amp;_q) const  noexcept</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>subtract two quaternions </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="184" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="128" bodyend="136"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aa520b2b12d6a7833f73a186f6a60ef2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::operator+=</definition>
        <argsstring>(const Quaternion &amp;_q) noexcept</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>add _q to the current quaternion </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="189" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a4df0ce0011b356bda38d1244938b1dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::operator-=</definition>
        <argsstring>(const Quaternion &amp;_q) noexcept</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>subtract _q from the current quaternion </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the rhs quaternion argument </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="194" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::normalise</definition>
        <argsstring>() noexcept</argsstring>
        <name>normalise</name>
        <briefdescription>
<para>normalise this quaternion this sets each of the component parts by calculating the magnitude and dividing each component by this </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="200" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="171" bodyend="178"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" compoundref="_quaternion_8cpp" startline="182" endline="185">magnitude</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real Quaternion::magnitude</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>magnitude</name>
        <briefdescription>
<para>returns the magnitude of the quaternion </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The magnitude of the quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="205" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="182" bodyend="185"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <referencedby refid="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" compoundref="_quaternion_8cpp" startline="171" endline="178">normalise</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a245762175ddad91c211034066104c7d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion ngl::Quaternion::conjugate</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>conjugate</name>
        <briefdescription>
<para>conjugate negate the vector part can also be done by the -() operator </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the conjugate of the current quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="210" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a680da2fe9ba5096f42911b03f8eb962a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion ngl::Quaternion::inverse</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>inverse</name>
        <briefdescription>
<para>conjugate negate the vector part can also be done by the -() operator </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the conjugate of the current quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="215" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a9e204d2fa5e2eb80c42360d13deb394d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Quaternion::operator-</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>conjugate negate the vector part but for the current vector - </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the conjugate of the current quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="220" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aeea10cc65558a21aac075ac1d879d961" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion ngl::Quaternion::operator-</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>returns the inverse of the quaternion (aka conjugate) the scalar part remains the same and we reverse the vector part </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the conjugate of the quaternion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="226" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="226" bodyend="226"/>
        <references refid="namespacengl_1abf8f4c8a842fda025d266ea490dd1ab0" compoundref="_vec2_8h" startline="286" endline="289">ngl::operator*</references>
        <references refid="namespacengl_1a2828b006f18ee4614b5bcd5957b33c7e" compoundref="_mat3_8h" startline="297" endline="307">ngl::operator==</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a0cbd2e6aacb29c48ed2f9ffe2bac70b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Quaternion::operator==</definition>
        <argsstring>(const Quaternion &amp;_q) const  noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q</declname>
        </param>
        <briefdescription>
<para>test for equality </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q</parametername>
</parameternamelist>
<parameterdescription>
<para>the quaternion to test against </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the same (based on EPSILON test range) or false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="232" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="188" bodyend="196"/>
        <references refid="_types_8h_1a04b3daeb8f076608db8eb09234c8d29f" compoundref="_types_8h" startline="136">FCompare</references>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aebd106516a04e1fedaca38f86576187e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref></type>
        <definition>Vec4 Quaternion::operator*</definition>
        <argsstring>(const Vec4 &amp;_vec) const  noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref> &amp;</type>
          <declname>_vec</declname>
        </param>
        <briefdescription>
<para>operator to allow a quat to be multiplied by a vector V2=Q*V1 this is formed by sandwiching the vector between the current quat and the inverse of the current quat (conjugate) so we get q*_vec*q.<ref refid="classngl_1_1_quaternion_1a245762175ddad91c211034066104c7d9" kindref="member">conjugate()</ref> this is the main way to do quaternion rotation on points (or can use the rotatePoint method which does the same thing) we must ensure that the quat has been set to the correct values for rotation (i.e. set the axis and the rotation values this can be done using the rotateX/Y/Z or fromAxisAngle or fromEulerAngle methods </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to be multiplied </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector formed from q*_vec*q^-1 (conjugate) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="251" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a6dfed93492f82b5fb126bd128c444ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::rotateX</definition>
        <argsstring>(Real _angle) noexcept</argsstring>
        <name>rotateX</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_angle</declname>
        </param>
        <briefdescription>
<para>set the current quaternion as a rotation around the X cartesian axis [1,0,0] </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle of rotation around the x axis in degrees </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="256" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="211" bodyend="219"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="namespacengl_1a0bade03a2edcb08a49da7731394284fe" compoundref="_util_8cpp" startline="89" endline="92">ngl::radians</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aff36f97a44e888b009d643b5034f79a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::rotateY</definition>
        <argsstring>(Real _angle) noexcept</argsstring>
        <name>rotateY</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_angle</declname>
        </param>
        <briefdescription>
<para>set the current quaternion as a rotation around the Y cartesian axis [0,1,0] </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle of rotation around the y axis in degrees </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="261" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="221" bodyend="230"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="namespacengl_1a0bade03a2edcb08a49da7731394284fe" compoundref="_util_8cpp" startline="89" endline="92">ngl::radians</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a575aadb4a60707541fec638be0786a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::rotateZ</definition>
        <argsstring>(Real _angle) noexcept</argsstring>
        <name>rotateZ</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_angle</declname>
        </param>
        <briefdescription>
<para>set the current quaternion as a rotation around the Z cartesian axis [0,0,1] </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle of rotation around the Z axis in degrees </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="266" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="232" bodyend="242"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="namespacengl_1a0bade03a2edcb08a49da7731394284fe" compoundref="_util_8cpp" startline="89" endline="92">ngl::radians</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a8f3f2b8f1e1148906464cd3e5388e993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::fromAxisAngle</definition>
        <argsstring>(const Vec3 &amp;_axis, Real _angle) noexcept</argsstring>
        <name>fromAxisAngle</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_axis</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_angle</declname>
        </param>
        <briefdescription>
<para>set the current quaternion as a rotation around the vector _axis </para>        </briefdescription>
        <detaileddescription>
<para>[in] _axis the axis to rotate around (will be normalized) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle of rotation around the Z axis in degrees </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="272" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="245" bodyend="256"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" compoundref="_vec3_8h" startline="310">ngl::Vec3::m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" compoundref="_vec3_8h" startline="311">ngl::Vec3::m_y</references>
        <references refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" compoundref="_vec3_8h" startline="312">ngl::Vec3::m_z</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="classngl_1_1_vec3_1a091a5439ddfd8a25fe486cf026345ef5" compoundref="_vec3_8cpp" startline="206" endline="213">ngl::Vec3::normalize</references>
        <references refid="namespacengl_1a0bade03a2edcb08a49da7731394284fe" compoundref="_util_8cpp" startline="89" endline="92">ngl::radians</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1aee2cf20d40d7448d2c48a4cc15557461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::fromEulerAngles</definition>
        <argsstring>(const Real _x, const Real _y, const Real _z) noexcept</argsstring>
        <name>fromEulerAngles</name>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>set the current quaternion as a rotation based on 3 Euler angles this will create the quat as a product of 3 seprate quats </para>        </briefdescription>
        <detaileddescription>
<para>[in] _x the rotation in degrees around the x axis [in] _y the rotation in degrees around the y axis [in] _z the rotation in degrees around the z axis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="280" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="259" bodyend="272"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="namespacengl_1a0bade03a2edcb08a49da7731394284fe" compoundref="_util_8cpp" startline="89" endline="92">ngl::radians</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a9a2796abae29dd1d9eb4cdca67798761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::rotatePoint</definition>
        <argsstring>(const Quaternion &amp;_r, Vec3 &amp;io_p) noexcept</argsstring>
        <name>rotatePoint</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_r</declname>
        </param>
        <param>
          <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>io_p</declname>
        </param>
        <briefdescription>
<para>rotate our point by a quat (but can also be done using the * operator) </para>        </briefdescription>
        <detaileddescription>
<para>[in] _r the rotation Quat [inout] io_p the point to be rotated (result we be set in this point) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="286" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="274" bodyend="280"/>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
        <references refid="classngl_1_1_quaternion_1a9e9fa2cb4f30d3486a1b13c374c43cbb" compoundref="_quaternion_8h" startline="87" endline="93">set</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1ada890b0f9f3bfc6b6bc7c6bde3a1af1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void Quaternion::toAxisAngle</definition>
        <argsstring>(Vec3 &amp;o_axis, Real &amp;o_angle) noexcept</argsstring>
        <name>toAxisAngle</name>
        <param>
          <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>o_axis</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &amp;</type>
          <declname>o_angle</declname>
        </param>
        <briefdescription>
<para>return the axis and angle of the current quat (angle in degrees) </para>        </briefdescription>
        <detaileddescription>
<para>[out] o_axis the axis of rotation ( [out] o_angle the angle of rotation about the quat angle in degrees </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="292" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="282" bodyend="293"/>
        <references refid="namespacengl_1a930047323925cd64a358c519723fa59e" compoundref="_util_8cpp" startline="95" endline="98">ngl::degrees</references>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a86d9082e6d544e2d31aff8c90a0c9fd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 Quaternion::toMat4</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>toMat4</name>
        <briefdescription>
<para>return the current quat as a 4x4 transform matrix </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the quat as a matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="297" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="340" bodyend="377"/>
        <references refid="classngl_1_1_mat4_1a5015fab65e2285a39c6ae1d9f9e32068" compoundref="_mat4_8h" startline="300">ngl::Mat4::m_openGL</references>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_quaternion_1a3f490ba27161ecec25b0f7215631b37f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref></type>
        <definition>Mat4 Quaternion::toMat4Transpose</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>toMat4Transpose</name>
        <briefdescription>
<para>return the current quat as a 4x4 transform matrix transposed </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the quat as a matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="302" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="379" bodyend="416"/>
        <references refid="classngl_1_1_mat4_1a5015fab65e2285a39c6ae1d9f9e32068" compoundref="_mat4_8h" startline="300">ngl::Mat4::m_openGL</references>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classngl_1_1_quaternion_1acaf83233694a76c38d72b0d8c6ee5a37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Quaternion::slerp</definition>
        <argsstring>(const Quaternion &amp;_q1, const Quaternion &amp;_q2, const Real &amp;_t) noexcept</argsstring>
        <name>slerp</name>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q1</declname>
        </param>
        <param>
          <type>const <ref refid="classngl_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>_q2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &amp;</type>
          <declname>_t</declname>
        </param>
        <briefdescription>
<para>this function spherically interpolates between two quaternions with respect to t </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_q1</parametername>
</parameternamelist>
<parameterdescription>
<para>- the first quaternion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_q2</parametername>
</parameternamelist>
<parameterdescription>
<para>- the second quaternion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_t</parametername>
</parameternamelist>
<parameterdescription>
<para>- the interpolating t value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="239" column="1" bodyfile="/Users/jmacey/NGL/src/Quaternion.cpp" bodystart="295" bodyend="336"/>
        <references refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" compoundref="_quaternion_8h" startline="306">m_s</references>
        <references refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" compoundref="_quaternion_8h" startline="308">m_x</references>
        <references refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" compoundref="_quaternion_8h" startline="310">m_y</references>
        <references refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" compoundref="_quaternion_8h" startline="312">m_z</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1847">
        <label>ngl::Quaternion</label>
        <link refid="classngl_1_1_quaternion"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/Quaternion.h" line="39" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Quaternion.h" bodystart="38" bodyend="314"/>
    <listofallmembers>
      <member refid="classngl_1_1_quaternion_1a245762175ddad91c211034066104c7d9" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>conjugate</name></member>
      <member refid="classngl_1_1_quaternion_1a8f3f2b8f1e1148906464cd3e5388e993" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>fromAxisAngle</name></member>
      <member refid="classngl_1_1_quaternion_1aee2cf20d40d7448d2c48a4cc15557461" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>fromEulerAngles</name></member>
      <member refid="classngl_1_1_quaternion_1aae275b2005fc4112eb2949fde2e2ff74" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>getS</name></member>
      <member refid="classngl_1_1_quaternion_1a72c1ee85e4a5e1148b5bc1cbf1f2a5b7" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>getVector</name></member>
      <member refid="classngl_1_1_quaternion_1aabbf1f62a783942312fd041114be049c" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>getX</name></member>
      <member refid="classngl_1_1_quaternion_1a65f77385ff2d1036a182ce35606b91f8" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>getY</name></member>
      <member refid="classngl_1_1_quaternion_1a4bb95b29c955671ac50f50246762932c" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>getZ</name></member>
      <member refid="classngl_1_1_quaternion_1a680da2fe9ba5096f42911b03f8eb962a" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>inverse</name></member>
      <member refid="classngl_1_1_quaternion_1a0163279fcf5493731eb8f0fd77369c37" prot="protected" virt="non-virtual"><scope>ngl::Quaternion</scope><name>m_s</name></member>
      <member refid="classngl_1_1_quaternion_1a7bfa2783fedfd53804250f690d57feb5" prot="protected" virt="non-virtual"><scope>ngl::Quaternion</scope><name>m_x</name></member>
      <member refid="classngl_1_1_quaternion_1ae7e4a55b81417700e4b8011d12c409a7" prot="protected" virt="non-virtual"><scope>ngl::Quaternion</scope><name>m_y</name></member>
      <member refid="classngl_1_1_quaternion_1a004e9d4a71762a8491d3c440d505a0eb" prot="protected" virt="non-virtual"><scope>ngl::Quaternion</scope><name>m_z</name></member>
      <member refid="classngl_1_1_quaternion_1a94475006fee766493e1917011cd6c19f" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>magnitude</name></member>
      <member refid="classngl_1_1_quaternion_1a5af664820ed619072e8b939b930153f6" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>normalise</name></member>
      <member refid="classngl_1_1_quaternion_1a9bb2e6e7305b15a7ea748fb761d400d2" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator*</name></member>
      <member refid="classngl_1_1_quaternion_1a1e11408738fcb0a99dd1c4ac2679f2b6" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator*</name></member>
      <member refid="classngl_1_1_quaternion_1aebd106516a04e1fedaca38f86576187e" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator*</name></member>
      <member refid="classngl_1_1_quaternion_1a61eebd9b7f748193f3d6dca0e87b5505" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator*=</name></member>
      <member refid="classngl_1_1_quaternion_1ae61bc3b06a45c915836401e02bf1af71" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator*=</name></member>
      <member refid="classngl_1_1_quaternion_1acb1fb8b69778638ce4cc03904220e70c" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator+</name></member>
      <member refid="classngl_1_1_quaternion_1aa520b2b12d6a7833f73a186f6a60ef2b" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator+=</name></member>
      <member refid="classngl_1_1_quaternion_1aa21bca2367f12aac8c5b18870876fa4c" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator-</name></member>
      <member refid="classngl_1_1_quaternion_1a9e204d2fa5e2eb80c42360d13deb394d" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator-</name></member>
      <member refid="classngl_1_1_quaternion_1aeea10cc65558a21aac075ac1d879d961" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator-</name></member>
      <member refid="classngl_1_1_quaternion_1a4df0ce0011b356bda38d1244938b1dc6" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator-=</name></member>
      <member refid="classngl_1_1_quaternion_1a0cbd2e6aacb29c48ed2f9ffe2bac70b4" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>operator==</name></member>
      <member refid="classngl_1_1_quaternion_1a87a6ddc4cc9559df46a57bff182b74d4" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classngl_1_1_quaternion_1a2ded3ec00d13ba2d21b1397187aad0f7" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classngl_1_1_quaternion_1a632d93cb40661e500c6e0154d6d10706" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classngl_1_1_quaternion_1a248652fd20ebf3c83502a09a7b65ad14" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classngl_1_1_quaternion_1a9a2796abae29dd1d9eb4cdca67798761" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>rotatePoint</name></member>
      <member refid="classngl_1_1_quaternion_1a6dfed93492f82b5fb126bd128c444ebf" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>rotateX</name></member>
      <member refid="classngl_1_1_quaternion_1aff36f97a44e888b009d643b5034f79a3" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>rotateY</name></member>
      <member refid="classngl_1_1_quaternion_1a575aadb4a60707541fec638be0786a79" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>rotateZ</name></member>
      <member refid="classngl_1_1_quaternion_1a9e9fa2cb4f30d3486a1b13c374c43cbb" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>set</name></member>
      <member refid="classngl_1_1_quaternion_1acce239884db44d5e1177feb10125e48d" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>setS</name></member>
      <member refid="classngl_1_1_quaternion_1a0e449f010fd056bf99fa36728958fea7" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>setVector</name></member>
      <member refid="classngl_1_1_quaternion_1ab7cf75f0e3195018b759daf3c3a16be4" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>setX</name></member>
      <member refid="classngl_1_1_quaternion_1afab54cb6bc92b4dae96cc5e2717fe9fd" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>setY</name></member>
      <member refid="classngl_1_1_quaternion_1afe33a089e8eaf531e5627fe45e1b3ffe" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>setZ</name></member>
      <member refid="classngl_1_1_quaternion_1acaf83233694a76c38d72b0d8c6ee5a37" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>slerp</name></member>
      <member refid="classngl_1_1_quaternion_1ada890b0f9f3bfc6b6bc7c6bde3a1af1f" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>toAxisAngle</name></member>
      <member refid="classngl_1_1_quaternion_1a86d9082e6d544e2d31aff8c90a0c9fd4" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>toMat4</name></member>
      <member refid="classngl_1_1_quaternion_1a3f490ba27161ecec25b0f7215631b37f" prot="public" virt="non-virtual"><scope>ngl::Quaternion</scope><name>toMat4Transpose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
