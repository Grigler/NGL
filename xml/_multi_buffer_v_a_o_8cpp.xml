<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_multi_buffer_v_a_o_8cpp" kind="file" language="C++">
    <compoundname>MultiBufferVAO.cpp</compoundname>
    <includes refid="_multi_buffer_v_a_o_8h" local="yes">MultiBufferVAO.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="_n_g_lassert_8h" local="no">NGLassert.h</includes>
    <incdepgraph>
      <node id="4933">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="4934" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4941" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
      </node>
      <node id="4942">
        <label>QGLContext</label>
      </node>
      <node id="4936">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
      </node>
      <node id="4931">
        <label>MultiBufferVAO.h</label>
        <link refid="_multi_buffer_v_a_o_8h"/>
        <childnode refid="4932" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
      </node>
      <node id="4930">
        <label>MultiBufferVAO.cpp</label>
        <link refid="MultiBufferVAO.cpp"/>
        <childnode refid="4931" relation="include">
        </childnode>
        <childnode refid="4944" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
      </node>
      <node id="4935">
        <label>stddef.h</label>
      </node>
      <node id="4934">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
      </node>
      <node id="4939">
        <label>GL/glu.h</label>
      </node>
      <node id="4937">
        <label>limits.h</label>
      </node>
      <node id="4932">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="4933" relation="include">
        </childnode>
      </node>
      <node id="4938">
        <label>wchar.h</label>
      </node>
      <node id="4943">
        <label>vector</label>
      </node>
      <node id="4941">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="4945">
        <label>NGLassert.h</label>
        <link refid="_n_g_lassert_8h"/>
      </node>
      <node id="4944">
        <label>iostream</label>
      </node>
      <node id="4940">
        <label>GL/gl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_multi_buffer_v_a_o_8h" kindref="compound">MultiBufferVAO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_n_g_lassert_8h" kindref="compound">NGLassert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6" refid="classngl_1_1_multi_buffer_v_a_o_1a831d5fd192abc2574cdb632548c18e2b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1a831d5fd192abc2574cdb632548c18e2b" kindref="member">MultiBufferVAO::~MultiBufferVAO</ref>()</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1acca9153f53ed152ac047a3367089455e" kindref="member">removeVAO</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classngl_1_1_multi_buffer_v_a_o_1a185194009a80278c4e0bd9678440cb47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1a185194009a80278c4e0bd9678440cb47" kindref="member">MultiBufferVAO::draw</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>draw<sp/>an<sp/>unallocated<sp/>VOA\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>draw<sp/>an<sp/>unbound<sp/>VOA\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1101b854177debf0c1d2611fbec24ffa" kindref="member">glDrawArrays</ref>(<ref refid="classngl_1_1_abstract_v_a_o_1a7df62921ae3aff699778d17dc9d37df9" kindref="member">m_mode</ref>,<sp/>0,<sp/>static_cast&lt;GLsizei&gt;(<ref refid="classngl_1_1_abstract_v_a_o_1a04cd955b0987f618a279bbe6da056b46" kindref="member">m_indicesCount</ref>));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classngl_1_1_multi_buffer_v_a_o_1acca9153f53ed152ac047a3367089455e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1acca9153f53ed152ac047a3367089455e" kindref="member">MultiBufferVAO::removeVAO</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref><sp/>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref><sp/>:<sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1a86a024241bdac65a90d4992aeb7ca538" kindref="member">m_vboIDs</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a55652a3f087bb13267a5481b6ff1fe19" kindref="member">glDeleteBuffers</ref>(1,&amp;<ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a214386aefdc30034088a21a6bccfbcbd" kindref="member">glDeleteVertexArrays</ref>(1,&amp;<ref refid="classngl_1_1_abstract_v_a_o_1a7c7d6a3322e757a3a7298f4321e48f1d" kindref="member">m_id</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40" refid="classngl_1_1_multi_buffer_v_a_o_1ae4cefb054144526101b2c2d20a2db3cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1ae4cefb054144526101b2c2d20a2db3cd" kindref="member">MultiBufferVAO::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data" kindref="compound">VertexData</ref><sp/>&amp;_data)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_v_a_o_1a8f5bab0afa205e8aa96b4d1ad1b8751c" kindref="member">m_bound</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>set<sp/>VOA<sp/>data<sp/>when<sp/>unbound\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/>vboID;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" kindref="member">glGenBuffers</ref>(1,<sp/>&amp;vboID);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1a86a024241bdac65a90d4992aeb7ca538" kindref="member">m_vboIDs</ref>.push_back(vboID);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>will<sp/>bind<sp/>an<sp/>array<sp/>buffer<sp/>to<sp/>the<sp/>first<sp/>one<sp/>and<sp/>load<sp/>the<sp/>data<sp/>for<sp/>the<sp/>verts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" kindref="member">glBindBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/>vboID);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" kindref="member">glBufferData</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,static_cast&lt;GLsizeiptr&gt;(_data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1ac70e6ea1e79a22adac0ebfff20aab5ff" kindref="member">m_size</ref>),<sp/>&amp;_data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1aced95e3e8893a259344de637d0dd7d72" kindref="member">m_data</ref>,<sp/>_data.<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data_1a3aea6d6bc943b07efe4c44bf5dd4d2a9" kindref="member">m_mode</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o_1a7dc1263ac463214a116981b77636a948" kindref="member">m_allocated</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classngl_1_1_multi_buffer_v_a_o_1a32868b8d8f6114f63d249c1ac6a1e2c3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1a32868b8d8f6114f63d249c1ac6a1e2c3" kindref="member">MultiBufferVAO::getBufferID</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_n_g_lassert_8h_1acef7dc418d5bcc430c79741ba952beb4" kindref="member">NGL_ASSERT</ref>(_id&lt;<ref refid="classngl_1_1_multi_buffer_v_a_o_1a86a024241bdac65a90d4992aeb7ca538" kindref="member">m_vboIDs</ref>.size());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_multi_buffer_v_a_o_1a86a024241bdac65a90d4992aeb7ca538" kindref="member">m_vboIDs</ref>[_id];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/MultiBufferVAO.cpp"/>
  </compounddef>
</doxygen>
