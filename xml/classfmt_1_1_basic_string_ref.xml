<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfmt_1_1_basic_string_ref" kind="class" language="C++" prot="public">
    <compoundname>fmt::BasicStringRef</compoundname>
    <includes refid="format_8h" local="no">format.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Char</declname>
        <defname>Char</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfmt_1_1_basic_string_ref_1a2c31e3eb762d751cc91d9fecbe423d89" prot="private" static="no" mutable="no">
        <type>const Char *</type>
        <definition>const Char* fmt::BasicStringRef&lt; Char &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="418" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="418" bodyend="-1"/>
        <referencedby refid="classfmt_1_1_basic_string_ref_1a8e9a2f33780c6fe88bd80fb9da193ced" compoundref="format_8h" startline="458" endline="464">fmt::BasicStringRef&lt; char &gt;::compare</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfmt_1_1_basic_string_ref_1af8086acf75eb6f1795f1d1c15dac094d" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t fmt::BasicStringRef&lt; Char &gt;::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="419" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="419" bodyend="-1"/>
        <referencedby refid="classfmt_1_1_basic_string_ref_1a8e9a2f33780c6fe88bd80fb9da193ced" compoundref="format_8h" startline="458" endline="464">fmt::BasicStringRef&lt; char &gt;::compare</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1adc7198e4dbd3eefff16081aae819181a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicStringRef&lt; Char &gt;::BasicStringRef</definition>
        <argsstring>(const Char *s, std::size_t size)</argsstring>
        <name>BasicStringRef</name>
        <param>
          <type>const Char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a string reference object from a C string and a size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="423" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="423" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1a5e3875071c0be193aa706d6c8e7bf29c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicStringRef&lt; Char &gt;::BasicStringRef</definition>
        <argsstring>(const Char *s)</argsstring>
        <name>BasicStringRef</name>
        <param>
          <type>const Char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a string reference object from a C string computing the size with <computeroutput>std::char_traits&lt;Char&gt;<ref refid="wglew_8h_1a74efbdef71b2e5711088ae39fc925d2d" kindref="member">length</ref></computeroutput>.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="431" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="431" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1afd8ffd0c6d2ccac657f277a4faea3889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicStringRef&lt; Char &gt;::BasicStringRef</definition>
        <argsstring>(const std::basic_string&lt; Char &gt; &amp;s)</argsstring>
        <name>BasicStringRef</name>
        <param>
          <type>const std::basic_string&lt; Char &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a string reference from an <computeroutput>std::string</computeroutput> object.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="439" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="439" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1a7340f48f53cf9188e9fea5e6e1556969" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::basic_string&lt; Char &gt;</type>
        <definition>std::basic_string&lt;Char&gt; fmt::BasicStringRef&lt; Char &gt;::to_string</definition>
        <argsstring>() const </argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a string reference to an <computeroutput>std::string</computeroutput> object.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="447" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="447" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1ae9c80502c527437215fe1c11dca8b475" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Char *</type>
        <definition>const Char* fmt::BasicStringRef&lt; Char &gt;::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the string data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="452" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="452" bodyend="452"/>
        <referencedby refid="namespacefmt_1_1internal_1a92bdabe812efd23c6f9686ddd6a7805f" compoundref="format_8cc" startline="296" endline="305">fmt::internal::report_unknown_type</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_thousands_sep_1a57a43bdd242e29d243c5301643f52b4a" compoundref="format_8h" startline="906" endline="912">fmt::internal::ThousandsSep::operator()</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_make_value_1a7f6a5b8995963c199e042caa52abdab6" compoundref="format_8h" startline="1200" endline="1203">fmt::internal::MakeValue&lt; Formatter &gt;::set_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1ae38d9106dd5bec69488e5464aedc266a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t fmt::BasicStringRef&lt; Char &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the string size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="455" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="455" bodyend="455"/>
        <referencedby refid="namespacefmt_1_1internal_1a92bdabe812efd23c6f9686ddd6a7805f" compoundref="format_8cc" startline="296" endline="305">fmt::internal::report_unknown_type</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_thousands_sep_1a57a43bdd242e29d243c5301643f52b4a" compoundref="format_8h" startline="906" endline="912">fmt::internal::ThousandsSep::operator()</referencedby>
        <referencedby refid="classfmt_1_1internal_1_1_make_value_1a7f6a5b8995963c199e042caa52abdab6" compoundref="format_8h" startline="1200" endline="1203">fmt::internal::MakeValue&lt; Formatter &gt;::set_string</referencedby>
        <referencedby refid="classfmt_1_1_basic_writer_1a2eb820ad907cede8df8226af444f59d6" compoundref="format_8h" startline="2741" endline="2827">fmt::BasicWriter&lt; Char &gt;::write_int</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_string_ref_1a8e9a2f33780c6fe88bd80fb9da193ced" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>int fmt::BasicStringRef&lt; Char &gt;::compare</definition>
        <argsstring>(BasicStringRef other) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="458" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="458" bodyend="464"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfmt_1_1_basic_string_ref_1af0c85958cdfb63d912d312c19ae81d7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(BasicStringRef lhs, BasicStringRef rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="466" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="friend" id="classfmt_1_1_basic_string_ref_1a836256d721e8228d72db00235a57bc9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(BasicStringRef lhs, BasicStringRef rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="469" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="469" bodyend="471"/>
      </memberdef>
      <memberdef kind="friend" id="classfmt_1_1_basic_string_ref_1a9e8993607a0ef7c60efb860170e5ce5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(BasicStringRef lhs, BasicStringRef rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="472" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="472" bodyend="474"/>
      </memberdef>
      <memberdef kind="friend" id="classfmt_1_1_basic_string_ref_1ab59af398fee6a8d5716b3e1df4576f94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(BasicStringRef lhs, BasicStringRef rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="475" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="friend" id="classfmt_1_1_basic_string_ref_1ab7e3a5a5a2dfa6fe31d90e89467cebd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(BasicStringRef lhs, BasicStringRef rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="478" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="478" bodyend="480"/>
      </memberdef>
      <memberdef kind="friend" id="classfmt_1_1_basic_string_ref_1ad6664b4fb7a1d73d429b41c7ae9de98e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(BasicStringRef lhs, BasicStringRef rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="481" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="481" bodyend="483"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A string reference. It can be constructed from a C string or <computeroutput>std::string</computeroutput>.</para><para>You can use one of the following typedefs for common character types:</para><para>+---------<mdash/>+----------------------<mdash/>+ | Type | Definition | +============+=========================+ | StringRef | <ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef&lt;char&gt;</ref> | +---------<mdash/>+----------------------<mdash/>+ | WStringRef | BasicStringRef&lt;wchar_t&gt; | +---------<mdash/>+----------------------<mdash/>+</para><para>This class is most useful as a parameter type to allow passing different types of strings to a function, for example::</para><para>template &lt;typename... Args&gt; std::string format(StringRef format_str, const Args &amp; ... args);</para><para>format(&quot;{}&quot;, 42); format(std::string(&quot;{}&quot;), 42);  </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1307">
        <label>fmt::BasicStringRef&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_string_ref"/>
      </node>
      <node id="1308">
        <label>fmt::BasicStringRef&lt; char &gt;</label>
        <link refid="classfmt_1_1_basic_string_ref"/>
        <childnode refid="1307" relation="template-instance">
          <edgelabel>&lt; char &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1310">
        <label>Char</label>
      </node>
      <node id="1309">
        <label>fmt::BasicStringRef&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_string_ref"/>
        <childnode refid="1310" relation="usage">
          <edgelabel>-data_</edgelabel>
        </childnode>
        <childnode refid="1311" relation="usage">
          <edgelabel>-size_</edgelabel>
        </childnode>
      </node>
      <node id="1311">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="416" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="416" bodyend="484"/>
    <listofallmembers>
      <member refid="classfmt_1_1_basic_string_ref_1adc7198e4dbd3eefff16081aae819181a" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>BasicStringRef</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1a5e3875071c0be193aa706d6c8e7bf29c" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>BasicStringRef</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1afd8ffd0c6d2ccac657f277a4faea3889" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>BasicStringRef</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1a8e9a2f33780c6fe88bd80fb9da193ced" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>compare</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1ae9c80502c527437215fe1c11dca8b475" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>data</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1a2c31e3eb762d751cc91d9fecbe423d89" prot="private" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>data_</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1a836256d721e8228d72db00235a57bc9e" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>operator!=</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1a9e8993607a0ef7c60efb860170e5ce5a" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>operator&lt;</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1ab59af398fee6a8d5716b3e1df4576f94" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>operator&lt;=</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1af0c85958cdfb63d912d312c19ae81d7c" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>operator==</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1ab7e3a5a5a2dfa6fe31d90e89467cebd5" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>operator&gt;</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1ad6664b4fb7a1d73d429b41c7ae9de98e" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>operator&gt;=</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1ae38d9106dd5bec69488e5464aedc266a" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>size</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1af8086acf75eb6f1795f1d1c15dac094d" prot="private" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>size_</name></member>
      <member refid="classfmt_1_1_basic_string_ref_1a7340f48f53cf9188e9fea5e6e1556969" prot="public" virt="non-virtual"><scope>fmt::BasicStringRef</scope><name>to_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
