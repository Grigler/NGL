<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_shader_lib_8cpp" kind="file" language="C++">
    <compoundname>ShaderLib.cpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">fstream</includes>
    <includes local="no">memory</includes>
    <includes local="no">algorithm</includes>
    <includes refid="_shader_lib_8h" local="yes">ShaderLib.h</includes>
    <includes refid="_text_shaders_8h" local="yes">TextShaders.h</includes>
    <includes refid="_colour_shaders_8h" local="yes">ColourShaders.h</includes>
    <includes refid="_diffuse_shaders_8h" local="yes">DiffuseShaders.h</includes>
    <includes refid="_toon_shaders_8h" local="yes">ToonShaders.h</includes>
    <includes refid="document_8h" local="yes">rapidjson/document.h</includes>
    <incdepgraph>
      <node id="5903">
        <label>Mat4.h</label>
        <link refid="_mat4_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5902" relation="include">
        </childnode>
        <childnode refid="5894" relation="include">
        </childnode>
      </node>
      <node id="5890">
        <label>ShaderProgram.h</label>
        <link refid="_shader_program_8h"/>
        <childnode refid="5888" relation="include">
        </childnode>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5891" relation="include">
        </childnode>
        <childnode refid="5898" relation="include">
        </childnode>
        <childnode refid="5899" relation="include">
        </childnode>
      </node>
      <node id="5878">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="5879" relation="include">
        </childnode>
        <childnode refid="5885" relation="include">
        </childnode>
        <childnode refid="5886" relation="include">
        </childnode>
        <childnode refid="5887" relation="include">
        </childnode>
      </node>
      <node id="5917">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5920">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5926">
        <label>iterator</label>
      </node>
      <node id="5887">
        <label>QGLContext</label>
      </node>
      <node id="5895">
        <label>Vec3.h</label>
        <link refid="_vec3_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5894" relation="include">
        </childnode>
      </node>
      <node id="5896">
        <label>cmath</label>
      </node>
      <node id="5912">
        <label>cassert</label>
      </node>
      <node id="5881">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="5882" relation="include">
        </childnode>
        <childnode refid="5883" relation="include">
        </childnode>
      </node>
      <node id="5897">
        <label>string</label>
      </node>
      <node id="5924">
        <label>internal/strfunc.h</label>
        <link refid="strfunc_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5919">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5880">
        <label>stddef.h</label>
      </node>
      <node id="5873">
        <label>fstream</label>
      </node>
      <node id="5879">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="5880" relation="include">
        </childnode>
        <childnode refid="5881" relation="include">
        </childnode>
        <childnode refid="5884" relation="include">
        </childnode>
      </node>
      <node id="5907">
        <label>ToonShaders.h</label>
        <link refid="_toon_shaders_8h"/>
        <childnode refid="5897" relation="include">
        </childnode>
      </node>
      <node id="5871">
        <label>ShaderLib.cpp</label>
        <link refid="ShaderLib.cpp"/>
        <childnode refid="5872" relation="include">
        </childnode>
        <childnode refid="5873" relation="include">
        </childnode>
        <childnode refid="5874" relation="include">
        </childnode>
        <childnode refid="5875" relation="include">
        </childnode>
        <childnode refid="5876" relation="include">
        </childnode>
        <childnode refid="5904" relation="include">
        </childnode>
        <childnode refid="5905" relation="include">
        </childnode>
        <childnode refid="5906" relation="include">
        </childnode>
        <childnode refid="5907" relation="include">
        </childnode>
        <childnode refid="5908" relation="include">
        </childnode>
      </node>
      <node id="5902">
        <label>ostream</label>
      </node>
      <node id="5884">
        <label>GL/glu.h</label>
      </node>
      <node id="5882">
        <label>limits.h</label>
      </node>
      <node id="5921">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5892">
        <label>Vec4.h</label>
        <link refid="_vec4_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5893" relation="include">
        </childnode>
        <childnode refid="5895" relation="include">
        </childnode>
        <childnode refid="5894" relation="include">
        </childnode>
      </node>
      <node id="5876">
        <label>ShaderLib.h</label>
        <link refid="_shader_lib_8h"/>
        <childnode refid="5877" relation="include">
        </childnode>
        <childnode refid="5888" relation="include">
        </childnode>
        <childnode refid="5890" relation="include">
        </childnode>
        <childnode refid="5900" relation="include">
        </childnode>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5901" relation="include">
        </childnode>
        <childnode refid="5903" relation="include">
        </childnode>
        <childnode refid="5892" relation="include">
        </childnode>
        <childnode refid="5897" relation="include">
        </childnode>
        <childnode refid="5899" relation="include">
        </childnode>
      </node>
      <node id="5904">
        <label>TextShaders.h</label>
        <link refid="_text_shaders_8h"/>
        <childnode refid="5897" relation="include">
        </childnode>
      </node>
      <node id="5883">
        <label>wchar.h</label>
      </node>
      <node id="5888">
        <label>Shader.h</label>
        <link refid="_shader_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5889" relation="include">
        </childnode>
        <childnode refid="5872" relation="include">
        </childnode>
      </node>
      <node id="5877">
        <label>Colour.h</label>
        <link refid="_colour_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
      </node>
      <node id="5923">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5913">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5898">
        <label>vector</label>
      </node>
      <node id="5925">
        <label>new</label>
      </node>
      <node id="5894">
        <label>array</label>
      </node>
      <node id="5886">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="5872">
        <label>cstdlib</label>
      </node>
      <node id="5910">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="5872" relation="include">
        </childnode>
        <childnode refid="5911" relation="include">
        </childnode>
        <childnode refid="5912" relation="include">
        </childnode>
        <childnode refid="5913" relation="include">
        </childnode>
        <childnode refid="5914" relation="include">
        </childnode>
      </node>
      <node id="5889">
        <label>iostream</label>
      </node>
      <node id="5906">
        <label>DiffuseShaders.h</label>
        <link refid="_diffuse_shaders_8h"/>
        <childnode refid="5897" relation="include">
        </childnode>
      </node>
      <node id="5900">
        <label>Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5872" relation="include">
        </childnode>
      </node>
      <node id="5901">
        <label>Mat3.h</label>
        <link refid="_mat3_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5894" relation="include">
        </childnode>
        <childnode refid="5902" relation="include">
        </childnode>
      </node>
      <node id="5899">
        <label>unordered_map</label>
      </node>
      <node id="5905">
        <label>ColourShaders.h</label>
        <link refid="_colour_shaders_8h"/>
        <childnode refid="5897" relation="include">
        </childnode>
      </node>
      <node id="5909">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
        <childnode refid="5914" relation="include">
        </childnode>
        <childnode refid="5915" relation="include">
        </childnode>
        <childnode refid="5916" relation="include">
        </childnode>
        <childnode refid="5918" relation="include">
        </childnode>
        <childnode refid="5923" relation="include">
        </childnode>
      </node>
      <node id="5915">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5914">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5922">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
      </node>
      <node id="5908">
        <label>rapidjson/document.h</label>
        <link refid="document_8h"/>
        <childnode refid="5909" relation="include">
        </childnode>
        <childnode refid="5915" relation="include">
        </childnode>
        <childnode refid="5924" relation="include">
        </childnode>
        <childnode refid="5925" relation="include">
        </childnode>
        <childnode refid="5926" relation="include">
        </childnode>
      </node>
      <node id="5891">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5892" relation="include">
        </childnode>
        <childnode refid="5896" relation="include">
        </childnode>
        <childnode refid="5897" relation="include">
        </childnode>
      </node>
      <node id="5875">
        <label>algorithm</label>
      </node>
      <node id="5918">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
        <childnode refid="5919" relation="include">
        </childnode>
        <childnode refid="5920" relation="include">
        </childnode>
        <childnode refid="5921" relation="include">
        </childnode>
        <childnode refid="5922" relation="include">
        </childnode>
      </node>
      <node id="5885">
        <label>GL/gl.h</label>
      </node>
      <node id="5911">
        <label>cstring</label>
      </node>
      <node id="5893">
        <label>Vec2.h</label>
        <link refid="_vec2_8h"/>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5894" relation="include">
        </childnode>
      </node>
      <node id="5916">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="5910" relation="include">
        </childnode>
        <childnode refid="5917" relation="include">
        </childnode>
      </node>
      <node id="5874">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>implementation files for ShaderLibrary and manager class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Jon<sp/>Macey</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_lib_8h" kindref="compound">ShaderLib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_text_shaders_8h" kindref="compound">TextShaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_colour_shaders_8h" kindref="compound">ColourShaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_diffuse_shaders_8h" kindref="compound">DiffuseShaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_toon_shaders_8h" kindref="compound">ToonShaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="document_8h" kindref="compound">rapidjson/document.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classngl_1_1_shader_lib_1a3d32727943d66a8fd83add5ff197ad13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a3d32727943d66a8fd83add5ff197ad13" kindref="member">ShaderLib::setShaderParamFromMat4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniformMatrix4fv(_paramName.c_str(),1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_p1.openGL());</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classngl_1_1_shader_lib_1abc19cd9c5f28d4220ac5710f26dcb00a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1abc19cd9c5f28d4220ac5710f26dcb00a" kindref="member">ShaderLib::setRegisteredUniformFromMat4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_registeredUniformName,<sp/><ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref><sp/>_p1<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniformMatrix4fv(_registeredUniformName,1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_p1.openGL());</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classngl_1_1_shader_lib_1ad61c98f4da4b7006cacc08a426a42bf2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ad61c98f4da4b7006cacc08a426a42bf2" kindref="member">ShaderLib::setShaderParamFromMat3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref><sp/>_p1<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniformMatrix3fv(_paramName.c_str(),1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_p1.openGL());</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classngl_1_1_shader_lib_1a910d2677edf9ee0d69db82480e679eb6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a910d2677edf9ee0d69db82480e679eb6" kindref="member">ShaderLib::setRegisteredUniformFromMat3</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref><sp/>_p1<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniformMatrix3fv(_paramName,1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_p1.openGL());</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classngl_1_1_shader_lib_1a9aa91de653fccd15e7ffaa9719e68139" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a9aa91de653fccd15e7ffaa9719e68139" kindref="member">ShaderLib::setShaderParamFromVec4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform4fv(_paramName.c_str(),1,_p1.openGL());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classngl_1_1_shader_lib_1adcdd0bcb1ec3cd45024222cfefa73827" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1adcdd0bcb1ec3cd45024222cfefa73827" kindref="member">ShaderLib::setRegisteredUniformVec4</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform4f(_paramName,_p1.m_x,_p1.m_y,_p1.m_z,_p1.m_w);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classngl_1_1_shader_lib_1a1a08cba1857570203ff929362f8cbe9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a1a08cba1857570203ff929362f8cbe9b" kindref="member">ShaderLib::setShaderParamFromColour</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_colour" kindref="compound">Colour</ref><sp/>_p1<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform4fv(_paramName.c_str(),1,_p1.openGL());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classngl_1_1_shader_lib_1ad9b1c61540a1fd05e94971c1623ac128" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ad9b1c61540a1fd05e94971c1623ac128" kindref="member">ShaderLib::setRegisteredUniformFromColour</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_colour" kindref="compound">Colour</ref><sp/>_p1<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform4f(_paramName,_p1.m_r,_p1.m_g,_p1.m_b,_p1.m_a);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classngl_1_1_shader_lib_1ab9aa9d02fbd64db1c8c227853c1efefd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ab9aa9d02fbd64db1c8c227853c1efefd" kindref="member">ShaderLib::setRegisteredUniformVec3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform3f(_paramName,_p1.m_x,_p1.m_y,_p1.m_z);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classngl_1_1_shader_lib_1a78009d4b4f73b173c1c81c8b16530643" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a78009d4b4f73b173c1c81c8b16530643" kindref="member">ShaderLib::setRegisteredUniformVec2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform2f(_paramName,_p1.m_x,_p1.m_y);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classngl_1_1_shader_lib_1a9faf1fcc53d2dbec5fd9c9e239808e04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a9faf1fcc53d2dbec5fd9c9e239808e04" kindref="member">ShaderLib::setShaderParam4f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p4<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform4f(_paramName.c_str(),_p1,_p2,_p3,_p4);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classngl_1_1_shader_lib_1acf163862b0e3f3e1df2880b3d2f515b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1acf163862b0e3f3e1df2880b3d2f515b8" kindref="member">ShaderLib::setRegisteredUniform4f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p4<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform4f(_paramName,_p1,_p2,_p3,_p4);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classngl_1_1_shader_lib_1a912550dd1d05853a49a1e458f250614f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a912550dd1d05853a49a1e458f250614f" kindref="member">ShaderLib::setShaderParam3f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p2,<sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p3<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform3f(_paramName.c_str(),_p1,_p2,_p3);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classngl_1_1_shader_lib_1aac8e14e81625357cbc5da8659d3709eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1aac8e14e81625357cbc5da8659d3709eb" kindref="member">ShaderLib::setRegisteredUniform3f</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p2,<sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p3<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform3f(_paramName,_p1,_p2,_p3);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classngl_1_1_shader_lib_1ac97e1e993ad81aecc7ce8c78516963c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac97e1e993ad81aecc7ce8c78516963c0" kindref="member">ShaderLib::setShaderParam2f</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p2<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform2f(_paramName.c_str(),_p1,_p2);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classngl_1_1_shader_lib_1a52eca9f0f6d6566a7f3064d7dd6315fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a52eca9f0f6d6566a7f3064d7dd6315fd" kindref="member">ShaderLib::setRegisteredUniform2f</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p2<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform2f(_paramName,_p1,_p2);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classngl_1_1_shader_lib_1a5856327bd1fa7704a8d965d99332a7e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a5856327bd1fa7704a8d965d99332a7e2" kindref="member">ShaderLib::setShaderParam1i</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_p1<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform1i(_paramName.c_str(),_p1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classngl_1_1_shader_lib_1adebd60a39fba7f231ee9c9c790612fc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1adebd60a39fba7f231ee9c9c790612fc5" kindref="member">ShaderLib::setRegisteredUniform1i</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform1i(_paramName,_p1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classngl_1_1_shader_lib_1a49843176da69f14b25713a8657453885" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a49843176da69f14b25713a8657453885" kindref="member">ShaderLib::setShaderParam1f</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setUniform1f(_paramName.c_str(),_p1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classngl_1_1_shader_lib_1a9210462acc20cd79a256a9674ab30692" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a9210462acc20cd79a256a9674ab30692" kindref="member">ShaderLib::setRegisteredUniform1f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_p1<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>(*this)[m_currentShader]-&gt;setRegisteredUniform1f(_paramName,_p1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classngl_1_1_shader_lib_1a257b32e95c4ef7931abdfbcee465d792" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a257b32e95c4ef7931abdfbcee465d792" kindref="member">ShaderLib::loadShader</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shaderName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_vert,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_frag,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_geo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_exitOnError<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>add<sp/>code<sp/>to<sp/>do<sp/>this<sp/>next<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1a9362db426901a67b0ce07e7bbb52ac14" kindref="member">NGL_UNUSED</ref>(_exitOnError);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>createShaderProgram(_shaderName);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>attachShader(_shaderName+</highlight><highlight class="stringliteral">&quot;Vertex&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b" kindref="member">ShaderType::VERTEX</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>attachShader(_shaderName+</highlight><highlight class="stringliteral">&quot;Fragment&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716" kindref="member">ShaderType::FRAGMENT</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>loadShaderSource(_shaderName+</highlight><highlight class="stringliteral">&quot;Vertex&quot;</highlight><highlight class="normal">,_vert);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>loadShaderSource(_shaderName+</highlight><highlight class="stringliteral">&quot;Fragment&quot;</highlight><highlight class="normal">,_frag);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>compileShader(_shaderName+</highlight><highlight class="stringliteral">&quot;Vertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>compileShader(_shaderName+</highlight><highlight class="stringliteral">&quot;Fragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>attachShaderToProgram(_shaderName,_shaderName+</highlight><highlight class="stringliteral">&quot;Vertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>attachShaderToProgram(_shaderName,_shaderName+</highlight><highlight class="stringliteral">&quot;Fragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_geo<sp/>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>attachShader(_shaderName+</highlight><highlight class="stringliteral">&quot;Geo&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7dab22957ad8078e8d73de61aef53d13a74" kindref="member">ShaderType::GEOMETRY</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>loadShaderSource(_shaderName+</highlight><highlight class="stringliteral">&quot;Geo&quot;</highlight><highlight class="normal">,_vert);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>compileShader(_shaderName+</highlight><highlight class="stringliteral">&quot;Geo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>attachShaderToProgram(_shaderName,_shaderName+</highlight><highlight class="stringliteral">&quot;Geo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>linkProgramObject(_shaderName);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classngl_1_1_shader_lib_1af8ee83bc19a41b2fec85b44516ac307c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af8ee83bc19a41b2fec85b44516ac307c" kindref="member">ShaderLib::reset</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Closing<sp/>down<sp/>shader<sp/>manager\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6de89cf6ff70c6ced1eacb781a3c6d57" kindref="member">programs</ref><sp/>:<sp/><ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6de89cf6ff70c6ced1eacb781a3c6d57" kindref="member">programs</ref>.second;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref><sp/>:<sp/><ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>.second;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classngl_1_1_shader_lib_1a1f057ebf8ff9744974cf6f7fb7857810" refkind="member"><highlight class="normal"><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/><ref refid="classngl_1_1_shader_lib_1a1f057ebf8ff9744974cf6f7fb7857810" kindref="member">ShaderLib::getAttribLocation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shaderName,<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName<sp/><sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>attrib=0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_shaderName);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end())</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>shader<sp/>and<sp/>call<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>attrib=<ref refid="glew_8h_1a20f33502cbda8885498352fcdbf71fe8" kindref="member">glGetAttribLocation</ref>(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;getID(),_paramName.c_str());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>trying<sp/>to<sp/>get<sp/>attrib<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_paramName&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_shaderName&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attrib;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_shader_lib_1ad4e47d35f70b176da947b14466b494b1" kindref="member">ShaderLib::ShaderLib</ref>()<sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Shader<sp/>Manager<sp/>ctor\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" kindref="member">m_debugState</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a74aaabcafbd0f61240c9b39455e65459" kindref="member">m_numShaders</ref>=0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" kindref="member">m_nullProgram</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>=</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>[</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">]=<ref refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" kindref="member">m_nullProgram</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" kindref="member">loadTextShaders</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" kindref="member">loadColourShaders</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" kindref="member">loadDiffuseShaders</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" kindref="member">loadToonShaders</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" kindref="member">m_debugState</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classngl_1_1_shader_lib_1a6050ac0e403532ac507faa8177ab7957" refkind="member"><highlight class="normal"><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/><ref refid="classngl_1_1_shader_lib_1a6050ac0e403532ac507faa8177ab7957" kindref="member">ShaderLib::getShaderID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shaderName)<sp/>noexcept</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.find(_shaderName);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader<sp/>and<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;getShaderHandle();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning:<sp/>No<sp/>shader<sp/>named<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>_shaderName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>shader<sp/>program<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classngl_1_1_shader_lib_1a9d11b8ed61d72064c47a79e8200a0f3d" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_shader" kindref="compound">ngl::Shader</ref>*<sp/><ref refid="classngl_1_1_shader_lib_1a9d11b8ed61d72064c47a79e8200a0f3d" kindref="member">ShaderLib::getShader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shaderName)<sp/>noexcept</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader" kindref="compound">ngl::Shader</ref>*<sp/>shaderPointer;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.find(_shaderName);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader<sp/>and<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderPointer<sp/>=<sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderPointer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning:<sp/>No<sp/>shader<sp/>named<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>_shaderName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>shader<sp/>program<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shaderPointer;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">ShaderLib::attachShader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref><sp/>_type<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>[_name]=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader" kindref="compound">Shader</ref>(_name,_type);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" kindref="member">m_debugState</ref>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;just<sp/>attached<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>[_name]-&gt;getShaderHandle()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">ShaderLib::compileShader</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.find(_name);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.end())</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>shader<sp/>and<sp/>call<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;compile();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>shader<sp/>not<sp/>know<sp/>in<sp/>compile<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str();}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" kindref="member">ShaderLib::createShaderProgram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" kindref="member">m_debugState</ref>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;creating<sp/>empty<sp/>ShaderProgram<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>[_name]=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref>(_name);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">ShaderLib::attachShaderToProgram</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_program,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shader<sp/><sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>shader<sp/>and<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.find(_shader);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_program);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader<sp/>and<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.end()<sp/>&amp;&amp;<sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref><sp/>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end())</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>attach<sp/>the<sp/>shader<sp/>to<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;attachShader(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>increment<sp/>the<sp/>shader<sp/>ref<sp/>count<sp/>so<sp/>we<sp/>know<sp/>if<sp/>how<sp/>many<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;incrementRefCount();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classngl_1_1_shader_lib_1a2d54b41a2e0165220f44dd4b64ad0dcd" kindref="member">m_debugState</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;_shader.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>attached<sp/>to<sp/>program<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_program.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>cant<sp/>attach<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_shader.c_str()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_program.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classngl_1_1_shader_lib_1a4c4bf5247f361b9e8a03bbf781ca3ef7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a4c4bf5247f361b9e8a03bbf781ca3ef7" kindref="member">ShaderLib::loadShaderSource</ref>(<ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>_shaderName,<sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>_sourceFile<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.find(_shaderName);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader<sp/>and<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;load(_sourceFile);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>shader<sp/>not<sp/>know<sp/>in<sp/>loadShaderSource<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_shaderName.c_str();}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classngl_1_1_shader_lib_1a7627c2bc4f66948e8db9ffaca468382d" refkind="member"><highlight class="normal"><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref><sp/><ref refid="classngl_1_1_shader_lib_1a7627c2bc4f66948e8db9ffaca468382d" kindref="member">ShaderLib::getShaderType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;<ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>low<sp/>for<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>tlower=<ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a07993c0d92c1aeeb357ba0495c8b5325" kindref="member">std::transform</ref>(<ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>.begin(),<sp/><ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>.end(),<sp/>tlower.begin(),<sp/>::tolower);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,ShaderType&gt;<sp/>stype=</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vertex&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b" kindref="member">ShaderType::VERTEX</ref>},</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;fragment&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716" kindref="member">ShaderType::FRAGMENT</ref>},</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;geometry&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7dab22957ad8078e8d73de61aef53d13a74" kindref="member">ShaderType::GEOMETRY</ref>},</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;tesscontrol&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da46501e52c3411c5c5879a8fe4432d885" kindref="member">ShaderType::TESSCONTROL</ref>},</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;tesseval&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da1094991cfaebfc09516e6eee108f83d2" kindref="member">ShaderType::TESSEVAL</ref>},</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;compute&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7daac404d7ce6ca5862e9b8a2641fbafd90" kindref="member">ShaderType::COMPUTE</ref>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>=stype.find(tlower);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>!=stype.end())</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>-&gt;second;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7dab50339a10e1de285ac99d4c3990b8693" kindref="member">ShaderType::NONE</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a096d53bd57413b5ebc529c60bc433dee" kindref="member">ShaderLib::loadFromJson</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_fname)<sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rj=<ref refid="namespacerapidjson" kindref="compound">rapidjson</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>file;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>file.open(_fname.c_str(),<sp/><ref refid="glew_8h_1a83ad0ee7f1e06b59c90271716e689080" kindref="member">std::ios::in</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.fail())</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;error<sp/>opening<sp/>json<sp/>file\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;std::string&gt;<sp/><ref refid="glew_8h_1af8522dcbb70042d3bc57e6a83eb0550d" kindref="member">source</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>((std::istreambuf_iterator&lt;char&gt;(file)),<sp/>std::istreambuf_iterator&lt;char&gt;())<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>a<sp/>mutable<sp/>string<sp/>for<sp/>parsing<sp/>so<sp/>copy<sp/>to<sp/>a<sp/>char<sp/>*<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;char<sp/>[]&gt;<sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[source-&gt;size()]);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>.get(),<sp/>source-&gt;c_str(),<sp/>source-&gt;size());</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>terminate<sp/>the<sp/>string!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a6c0f527f003707dfaca177b40f406ed9" kindref="member">buffer</ref>[source-&gt;size()]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">rj::Document</ref><sp/>doc;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doc.ParseInsitu&lt;0&gt;(buffer.get()).HasParseError())</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Parse<sp/>Error<sp/>for<sp/>file<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_fname&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!doc.HasMember(</highlight><highlight class="stringliteral">&quot;ShaderProgram&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>be<sp/>a<sp/>valid<sp/>shader<sp/>json<sp/>file&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;***************Loading<sp/>Shaders<sp/>from<sp/>JSON*****************\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>iterate<sp/>through<sp/>the<sp/>json<sp/>and<sp/>gather<sp/>our<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rj::Value::ConstMemberIterator<sp/>itr<sp/>=<sp/>doc.MemberBegin();<sp/>itr<sp/>!=<sp/>doc.MemberEnd();<sp/>++itr)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(itr-&gt;value.HasMember(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug=itr-&gt;value[</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">].GetBool();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj::Value::Ch*<sp/>progName=itr-&gt;value[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(progName<sp/>==NULL<sp/>||<sp/>strlen(progName)==0<sp/>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;ShaderProgram<sp/>must<sp/>have<sp/>a<sp/>name<sp/>(or<sp/>could<sp/>be<sp/>0<sp/>length)<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" kindref="member">createShaderProgram</ref>(progName);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">rj::Value</ref>&amp;<sp/><ref refid="glew_8h_1a9ef40b8b66ee2f657225b989845b9a19" kindref="member">shaders</ref><sp/>=<sp/>itr-&gt;value[</highlight><highlight class="stringliteral">&quot;Shaders&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">rj::SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>shaders.Size();<sp/>i++)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">rj::Value</ref><sp/>&amp;currentShader<sp/>=<sp/>shaders[i];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj::Value::Ch<sp/>*<ref refid="glew_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef" kindref="member">name</ref>=currentShader[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref><sp/><ref refid="glew_8h_1a36b14850b945d03396f1da1cbc42699d" kindref="member">shadertype</ref>=<ref refid="classngl_1_1_shader_lib_1a7627c2bc4f66948e8db9ffaca468382d" kindref="member">getShaderType</ref>(currentShader[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].GetString());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(name,shadertype);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">rj::Value</ref>&amp;<sp/><ref refid="glew_8h_1a88fceae44f6bde3f9bebdc5d3c98a028" kindref="member">paths</ref><sp/>=<sp/>currentShader[</highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>shaderSource;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">rj::SizeType</ref><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref><sp/>=<sp/>0;<sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref><sp/>&lt;<sp/>paths.Size();<sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>++)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>shader<sp/>sources<sp/>in<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/><ref refid="glew_8h_1af8522dcbb70042d3bc57e6a83eb0550d" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source.open(paths[<ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>].GetString(),<sp/><ref refid="glew_8h_1a83ad0ee7f1e06b59c90271716e689080" kindref="member">std::ios::in</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;attempting<sp/>to<sp/>load<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;paths[<ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>].GetString()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source.fail())</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;error<sp/>opening<sp/>shader<sp/>file\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;std::string&gt;<sp/><ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>((std::istreambuf_iterator&lt;char&gt;(source)),<sp/>std::istreambuf_iterator&lt;char&gt;()));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;loaded<sp/>data<sp/>string<sp/>\n&quot;</highlight><highlight class="normal">&lt;&lt;<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f-&gt;c_str())&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source.close();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderSource+=*<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderSource+=</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(name,shaderSource);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;*********<sp/>Final<sp/>Shader<sp/>String<sp/>***************\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;shaderSource&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(name);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(progName,name);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>parse<sp/>shader<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Linking<sp/>and<sp/>registering<sp/>Uniforms<sp/>to<sp/>ShaderLib\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" kindref="member">linkProgramObject</ref>(progName);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//autoRegisterUniforms(progName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;**********************DONE********************\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">ShaderLib::loadShaderSourceFromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shaderName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_string<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.find(_shaderName);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader<sp/>and<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1afcd3ecbfe7809affdef36be9cceb1c9b" kindref="member">m_shaders</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;loadFromString(_string);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;*_string&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>shader<sp/>not<sp/>know<sp/>in<sp/>loadShaderSource<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_shaderName.c_str();}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" kindref="member">ShaderLib::linkProgramObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_name);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Linking<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;link();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>known<sp/>in<sp/>link<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str();}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">ShaderLib::use</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/><sp/>)<sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_name);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;Shader<sp/>manager<sp/>Use\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>=_name;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;use();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>use<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>=</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ad8e40c882d63c4671dea2ca2dfcf3046" kindref="member">glUseProgram</ref>(0);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classngl_1_1_shader_lib_1aacd2aebc2534b254cf96ef764f061bfd" refkind="member"><highlight class="normal"><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/><ref refid="classngl_1_1_shader_lib_1aacd2aebc2534b254cf96ef764f061bfd" kindref="member">ShaderLib::getProgramID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_name);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;getID();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>use<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" kindref="member">ShaderLib::autoRegisterUniforms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shaderName<sp/><sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_shaderName);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;autoRegisterUniforms();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>registerUniform<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_shaderName&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">ShaderLib::bindAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_programName,<sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/>_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_attribName<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_programName);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;bindAttribute(_index,_attribName);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>bindAttribute<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_programName.c_str();}</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="classngl_1_1_shader_lib_1a77d06945bdff2251cd5fc03a2676720a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a77d06945bdff2251cd5fc03a2676720a" kindref="member">ShaderLib::bindFragDataLocation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_programName,<sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/>_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_attribName<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_programName);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;bindFragDataLocation(_index,_attribName);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>bindAttribute<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_programName.c_str();}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="namespacengl_1aea32faaa47fb94200b4984368f942203" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1aea32faaa47fb94200b4984368f942203" kindref="member">ceckGLError</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><sp/>&amp;_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_line<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a06e0f3c96f3599a4bb7dd2dcfe8b869f" kindref="member">NGLCheckGLError</ref>(_file,_line);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref><sp/>*<sp/><ref refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" kindref="member">ShaderLib::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_name);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>=_name;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>[]<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;returning<sp/>a<sp/>null<sp/>program<sp/>and<sp/>hoping<sp/>for<sp/>the<sp/>best\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" kindref="member">m_nullProgram</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classngl_1_1_shader_lib_1aa5939b620130f3fb76b7f55d869e7132" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref><sp/>*<sp/><ref refid="classngl_1_1_shader_lib_1aefa36fc01957998fcab5862e75a0a622" kindref="member">ShaderLib::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_name<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_name);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>=_name;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>Program<sp/>not<sp/>know<sp/>in<sp/>[]<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;returning<sp/>a<sp/>null<sp/>program<sp/>and<sp/>hoping<sp/>for<sp/>the<sp/>best\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" kindref="member">m_nullProgram</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" kindref="member">ShaderLib::useNullProgram</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>=</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ad72f5d1e2c32a965e3440a33af873e11" kindref="member">m_nullProgram</ref>-&gt;<ref refid="classngl_1_1_shader_program_1adec315c2b48d5fa2917eeaed84e2eb80" kindref="member">use</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="classngl_1_1_shader_lib_1aff7233e389bc6815fda0086f3beea814" refkind="member"><highlight class="normal"><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/><ref refid="classngl_1_1_shader_lib_1aff7233e389bc6815fda0086f3beea814" kindref="member">ShaderLib::getUniformBlockIndex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_uniformBlockName<sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end())</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>shader<sp/>and<sp/>call<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=<ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>-&gt;second-&gt;getUniformBlockIndex(_uniformBlockName);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>id<sp/>for<sp/>uniform<sp/>block<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_uniformBlockName<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a58c2a664503e14ffb8f21012aabff3e9" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac9f874040dab2cb996c3849be284d44b" kindref="member">ShaderLib::loadTextShaders</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" kindref="member">createShaderProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglTextVertex&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b" kindref="member">ShaderType::VERTEX</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglTextFragment&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716" kindref="member">ShaderType::FRAGMENT</ref>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglTextVertex&quot;</highlight><highlight class="normal">,<ref refid="_text_shaders_8h_1a6e35ec192b803deb45733256c32bb3be" kindref="member">textVertexShader</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglTextFragment&quot;</highlight><highlight class="normal">,<ref refid="_text_shaders_8h_1a59273a260a531f7859d10b943268925a" kindref="member">textFragmentShader</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglTextVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglTextFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglTextVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglTextFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inVert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">,1,</highlight><highlight class="stringliteral">&quot;inUV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" kindref="member">linkProgramObject</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" kindref="member">autoRegisterUniforms</ref>(</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" kindref="member">ShaderLib::loadColourShaders</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" kindref="member">createShaderProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglColourVertex&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b" kindref="member">ShaderType::VERTEX</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglColourFragment&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716" kindref="member">ShaderType::FRAGMENT</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglColourVertex&quot;</highlight><highlight class="normal">,<ref refid="_colour_shaders_8h_1a922fd1d60ce438daea39baf8c1ff945c" kindref="member">colourVertexShader</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglColourFragment&quot;</highlight><highlight class="normal">,<ref refid="_colour_shaders_8h_1ad14fa863298942f700dc65635b3dcadc" kindref="member">colourFragmentShader</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglColourVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglColourFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglColourVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglColourFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inVert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" kindref="member">linkProgramObject</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" kindref="member">autoRegisterUniforms</ref>(</highlight><highlight class="stringliteral">&quot;nglColourShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1a005c7b95f7cc6bb38bb207443503e392" kindref="member">ShaderLib::loadDiffuseShaders</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" kindref="member">createShaderProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseVertex&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b" kindref="member">ShaderType::VERTEX</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseFragment&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716" kindref="member">ShaderType::FRAGMENT</ref>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseVertex&quot;</highlight><highlight class="normal">,<ref refid="_diffuse_shaders_8h_1aee26a94a59f39d3d34cde95aee8e2738" kindref="member">diffuseVertexShader</ref>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseFragment&quot;</highlight><highlight class="normal">,<ref refid="_diffuse_shaders_8h_1a107986c80c412fc53b63825fb2583d72" kindref="member">diffuseFragmentShader</ref>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglDiffuseVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglDiffuseFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inVert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">,2,</highlight><highlight class="stringliteral">&quot;inNormal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" kindref="member">linkProgramObject</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" kindref="member">autoRegisterUniforms</ref>(</highlight><highlight class="stringliteral">&quot;nglDiffuseShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1aae06fcd5d36ccf79399384d04c5c59d3" kindref="member">ShaderLib::loadToonShaders</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a853991148271635d675f9f7f04578074" kindref="member">createShaderProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglToonVertex&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b" kindref="member">ShaderType::VERTEX</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1aa5522797b285b3107e64e7ada9f3a493" kindref="member">attachShader</ref>(</highlight><highlight class="stringliteral">&quot;nglToonFragment&quot;</highlight><highlight class="normal">,<ref refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716" kindref="member">ShaderType::FRAGMENT</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglToonVertex&quot;</highlight><highlight class="normal">,<ref refid="_toon_shaders_8h_1a3ccc0ef71a5a89763c120cc82fb3f756" kindref="member">toonVertexShader</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a51417a146135c70ad9e05e784f55a31f" kindref="member">loadShaderSourceFromString</ref>(</highlight><highlight class="stringliteral">&quot;nglToonFragment&quot;</highlight><highlight class="normal">,<ref refid="_toon_shaders_8h_1a268a70d58f8d1ba173751d96922d6c41" kindref="member">toonFragmentShader</ref>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglToonVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ac1dc18632b4e8e190687e3ae1cb52061" kindref="member">compileShader</ref>(</highlight><highlight class="stringliteral">&quot;nglToonFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglToonVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a9cb2f69021343de47cd79539743f60be" kindref="member">attachShaderToProgram</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;nglToonFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inVert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1a07120595b1c25df459c25abdb379d1fb" kindref="member">bindAttribute</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">,2,</highlight><highlight class="stringliteral">&quot;inNormal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1abb33d0d7b1019b10701860b6c21c405a" kindref="member">linkProgramObject</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab26e0fcf1f09c64f915c5a2c140a0ef0" kindref="member">autoRegisterUniforms</ref>(</highlight><highlight class="stringliteral">&quot;nglToonShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_shader_lib_1ab2a153b12c656d4e2909b36b80e01922" kindref="member">use</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="classngl_1_1_shader_lib_1adbe11de9255b3090e52f9f9c6c3d2f76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1adbe11de9255b3090e52f9f9c6c3d2f76" kindref="member">ShaderLib::printRegisteredUniforms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_shader)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(_shader);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;printRegisteredUniforms();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="classngl_1_1_shader_lib_1ab27e3d6818579bfca620307afda3ef7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ab27e3d6818579bfca620307afda3ef7c" kindref="member">ShaderLib::printProperties</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.find(<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/><sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>!=<ref refid="classngl_1_1_shader_lib_1a7c55550ae736a0c8bc2ea38c80d3759c" kindref="member">m_shaderPrograms</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;_______________________________________________________________________________________________________________________\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Printing<sp/>Properties<sp/>for<sp/>ShaderProgram<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;_______________________________________________________________________________________________________________________\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4" kindref="member">program</ref>-&gt;second-&gt;printProperties();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;_______________________________________________________________________________________________________________________\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>no<sp/>currently<sp/>active<sp/>shader<sp/>to<sp/>print<sp/>properties<sp/>for<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802" refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform1f(_paramName.c_str(),_v0);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806" refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform1f(_paramName.c_str(),_v0);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="classngl_1_1_shader_lib_1af056261adebd696be38d34028de83620" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v1)<sp/>noexcept</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform2f(_paramName.c_str(),_v0,_v1);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816" refid="classngl_1_1_shader_lib_1a998d8984bdaa4635ad54da69a746ecf2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v1)<sp/>noexcept</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform2f(_paramName.c_str(),_v0,_v1);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="classngl_1_1_shader_lib_1a78280a831f4925875fcea32da3ba1afe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v1,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v2)<sp/>noexcept</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform3f(_paramName.c_str(),_v0,_v1,_v2);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827" refid="classngl_1_1_shader_lib_1a9d977ef51ab4ef00d074ecc7ec3cc49a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v1,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v2)<sp/>noexcept</highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform3f(_paramName.c_str(),_v0,_v1,_v2);</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="classngl_1_1_shader_lib_1a99c385f78005e0442c3db10ec9f72a75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v1,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v2,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v3)<sp/>noexcept</highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform4f(_paramName.c_str(),_v0,_v1,_v2,_v3);</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836" refid="classngl_1_1_shader_lib_1aab4524ffd4af09af37853325c3168ecc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v0,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v1,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v2,<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_v3)<sp/>noexcept</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform4f(_paramName.c_str(),_v0,_v1,_v2,_v3);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="classngl_1_1_shader_lib_1ae9d08c56fb64b8b8b040dab9798451ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform1i(_paramName.c_str(),_v0);</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845" refid="classngl_1_1_shader_lib_1a2d07158d621a4e27f1bebd0dea9c62d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform1i(_paramName.c_str(),_v0);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="classngl_1_1_shader_lib_1a664c029554da0effdda60e3aa8b5dea9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v1)<sp/>noexcept</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform2i(_paramName.c_str(),_v0,_v1);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854" refid="classngl_1_1_shader_lib_1a96373cb1967f31b33b84b8b834eb5fa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v1)<sp/>noexcept</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform2i(_paramName.c_str(),_v0,_v1);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859" refid="classngl_1_1_shader_lib_1a142a344ccd99ddcc7ee251277c56f64f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v1,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v2)<sp/>noexcept</highlight></codeline>
<codeline lineno="860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform3i(_paramName.c_str(),_v0,_v1,_v2);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863" refid="classngl_1_1_shader_lib_1a97d0cbcf60a6b90654e6a25b36efa991" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v1,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v2)<sp/>noexcept</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform3i(_paramName.c_str(),_v0,_v1,_v2);</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="classngl_1_1_shader_lib_1af7b81db7da0ac8c89697fcdf613da88e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v1,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v2,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v3)<sp/>noexcept</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform4i(_paramName.c_str(),_v0,_v1,_v2,_v3);</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872" refid="classngl_1_1_shader_lib_1af1a22edddd86a1d9a68f63ea632e9722" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v0,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v1,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v2,<ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref><sp/>_v3)<sp/>noexcept</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform4f(_paramName.c_str(),_v0,_v1,_v2,_v3);</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="classngl_1_1_shader_lib_1a076ebb116e921686843433e620675372" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_colour" kindref="compound">Colour</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform4f(_paramName.c_str(),_v0.m_r,_v0.m_g,_v0.m_b,_v0.m_a);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881" refid="classngl_1_1_shader_lib_1a34967680b618d39d567e4d3aba834fcc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_colour" kindref="compound">Colour</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform4f(_paramName.c_str(),_v0.m_r,_v0.m_g,_v0.m_b,_v0.m_a);</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885" refid="classngl_1_1_shader_lib_1a5b9b376ca38fc9d74c777da14f17c72d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform2f(_paramName.c_str(),_v0.m_x,_v0.m_y);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889" refid="classngl_1_1_shader_lib_1ae5e4e6940c9aec060ecda29624d5d001" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec2" kindref="compound">Vec2</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform2f(_paramName.c_str(),_v0.m_x,_v0.m_y);</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893" refid="classngl_1_1_shader_lib_1a744b65785a5c9519abd60ef8323a24b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform3f(_paramName.c_str(),_v0.m_x,_v0.m_y,_v0.m_z);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897" refid="classngl_1_1_shader_lib_1a4f43d44f447162c31b384728bc7f11c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform3f(_paramName.c_str(),_v0.m_x,_v0.m_y,_v0.m_z);</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901" refid="classngl_1_1_shader_lib_1a9540be112311cb01cca6b7a2fb4d46bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniform4f(_paramName.c_str(),_v0.m_x,_v0.m_y,_v0.m_z,_v0.m_w);</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="905" refid="classngl_1_1_shader_lib_1a58f3da05389830651f5e8e0547dca178" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_vec4" kindref="compound">Vec4</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniform4f(_paramName.c_str(),_v0.m_x,_v0.m_y,_v0.m_z,_v0.m_w);</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910" refid="classngl_1_1_shader_lib_1a15311b64bcc2e4a9eeee49b6069a3188" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniformMatrix3fv(_paramName.c_str(),1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_v0.openGL());</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915" refid="classngl_1_1_shader_lib_1a1ee7ee22adc70d5b94c6fa710eb02025" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_mat3" kindref="compound">Mat3</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniformMatrix3fv(_paramName,1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_v0.openGL());</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921" refid="classngl_1_1_shader_lib_1a522a19f96b26bc69c4208340ef5fce49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1af2687f1347df033be0b595a6f53d3c1b" kindref="member">ShaderLib::setUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setUniformMatrix4fv(_paramName.c_str(),1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_v0.openGL());</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925" refid="classngl_1_1_shader_lib_1a8a6284a263bdf49aa9ad9fef1eea5e3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_shader_lib_1ac918a8821d6392d87fd69c56458b1c62" kindref="member">ShaderLib::setRegisteredUniform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_paramName,<ref refid="classngl_1_1_mat4" kindref="compound">Mat4</ref><sp/>_v0)<sp/>noexcept</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>(*this)[<ref refid="classngl_1_1_shader_lib_1a062dfbdeed5de8321dcce241d2dfc451" kindref="member">m_currentShader</ref>]-&gt;setRegisteredUniformMatrix4fv(_paramName,1,<ref refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" kindref="member">GL_FALSE</ref>,_v0.openGL());</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/ShaderLib.cpp"/>
  </compounddef>
</doxygen>
