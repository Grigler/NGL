<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_shader" kind="class" language="C++" prot="public">
    <compoundname>ngl::Shader</compoundname>
    <includes refid="_shader_8h" local="no">Shader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngl_1_1_shader_1a8ede272d2dc4193cb13e730d60ab8f5b" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>std::string ngl::Shader::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>the text name of this <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> used in the search for shader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="98" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_1a07f1f75e9426b59d8d8db659b3829fd0" compoundref="_shader_8cpp" startline="74" endline="78">~Shader</referencedby>
        <referencedby refid="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" compoundref="_shader_8cpp" startline="80" endline="102">compile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_1acb23e11bcd0da35ac79a530bf3ef3fa7" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>std::string ngl::Shader::m_source</definition>
        <argsstring></argsstring>
        <name>m_source</name>
        <briefdescription>
<para>the actual source code for this shader (used for debug and initial loading) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="102" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" compoundref="_shader_8cpp" startline="80" endline="102">compile</referencedby>
        <referencedby refid="classngl_1_1_shader_1a89759dae6f482f497c81349c7e012ce2" compoundref="_shader_8cpp" startline="105" endline="132">load</referencedby>
        <referencedby refid="classngl_1_1_shader_1a4fd27a6d72ac27effeb115e15bed3cb9" compoundref="_shader_8cpp" startline="134" endline="153">loadFromString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_1abc94c01f99c5df19d86e70178a0d8bd4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::Shader::m_compiled</definition>
        <argsstring></argsstring>
        <name>m_compiled</name>
        <briefdescription>
<para>flag to indicate if the shader has been compiled this will get channged on re-load of source to false </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="107" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" compoundref="_shader_8cpp" startline="80" endline="102">compile</referencedby>
        <referencedby refid="classngl_1_1_shader_1a89759dae6f482f497c81349c7e012ce2" compoundref="_shader_8cpp" startline="105" endline="132">load</referencedby>
        <referencedby refid="classngl_1_1_shader_1a4fd27a6d72ac27effeb115e15bed3cb9" compoundref="_shader_8cpp" startline="134" endline="153">loadFromString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_1a31483b9d1eb19b0ae744b6d4c9cdeae5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref></type>
        <definition>ShaderType ngl::Shader::m_shaderType</definition>
        <argsstring></argsstring>
        <name>m_shaderType</name>
        <briefdescription>
<para>what type of shader we are </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="111" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_1a1a84e2d7821f791183eb4b914a22d583" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Shader::m_shaderHandle</definition>
        <argsstring></argsstring>
        <name>m_shaderHandle</name>
        <briefdescription>
<para>the GL handle for this shader object used in linking etc </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="115" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_1a07f1f75e9426b59d8d8db659b3829fd0" compoundref="_shader_8cpp" startline="74" endline="78">~Shader</referencedby>
        <referencedby refid="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" compoundref="_shader_8cpp" startline="80" endline="102">compile</referencedby>
        <referencedby refid="classngl_1_1_shader_1a89759dae6f482f497c81349c7e012ce2" compoundref="_shader_8cpp" startline="105" endline="132">load</referencedby>
        <referencedby refid="classngl_1_1_shader_1a4fd27a6d72ac27effeb115e15bed3cb9" compoundref="_shader_8cpp" startline="134" endline="153">loadFromString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_1a5edc58c302d6a1825bd21a2b36545fa8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::Shader::m_debugState</definition>
        <argsstring></argsstring>
        <name>m_debugState</name>
        <briefdescription>
<para>flag to indicate the debug state </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="119" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="119" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" compoundref="_shader_8cpp" startline="80" endline="102">compile</referencedby>
        <referencedby refid="classngl_1_1_shader_1a89759dae6f482f497c81349c7e012ce2" compoundref="_shader_8cpp" startline="105" endline="132">load</referencedby>
        <referencedby refid="classngl_1_1_shader_1a4fd27a6d72ac27effeb115e15bed3cb9" compoundref="_shader_8cpp" startline="134" endline="153">loadFromString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_1a958b091252111eb8118e35737f4325cd" prot="private" static="no" mutable="no">
        <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>int ngl::Shader::m_refCount</definition>
        <argsstring></argsstring>
        <name>m_refCount</name>
        <briefdescription>
<para>number of ProgramObjects referencing this shader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="123" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_shader_1aa959a70fb3777d8d8950a81bff414a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Shader::Shader</definition>
        <argsstring>(std::string _name, ShaderType _type) noexcept</argsstring>
        <name>Shader</name>
        <param>
          <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
          <declname>_name</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1affa062a5da165462559270d064bc0f7d" kindref="member">ShaderType</ref></type>
          <declname>_type</declname>
        </param>
        <briefdescription>
<para>ctor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the program object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of shader we are building </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="48" column="1" bodyfile="/Users/jmacey/NGL/src/Shader.cpp" bodystart="52" bodyend="73"/>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7daac404d7ce6ca5862e9b8a2641fbafd90">ngl::COMPUTE</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da7345a249ed5c2f850d85dc1727c24716">ngl::FRAGMENT</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7dab22957ad8078e8d73de61aef53d13a74">ngl::GEOMETRY</references>
        <references refid="glew_8h_1a7902495bb16bcb4c7ea04255f3998400" compoundref="glew_8h" startline="3834">GL_COMPUTE_SHADER</references>
        <references refid="glew_8h_1a1a0294662b50921555cae95fb20740d4" compoundref="glew_8h" startline="1768">GL_FRAGMENT_SHADER</references>
        <references refid="glew_8h_1a1e0c2d7120ea4f2e30000d134a9dc335" compoundref="glew_8h" startline="2354">GL_GEOMETRY_SHADER</references>
        <references refid="glew_8h_1a49bfa77ccf6fd0a0e7894aa03cee1445" compoundref="glew_8h" startline="6687">GL_TESS_CONTROL_SHADER</references>
        <references refid="glew_8h_1aa4487628bc085e0bf9f3e54a8b638ee3" compoundref="glew_8h" startline="6686">GL_TESS_EVALUATION_SHADER</references>
        <references refid="glew_8h_1aceb29bc16e885f956eb9e351a7dd6276" compoundref="glew_8h" startline="1769">GL_VERTEX_SHADER</references>
        <references refid="glew_8h_1a4d3447ff3caf454bc686968fbe5f04bf" compoundref="glew_8h" startline="1915">glCreateShader</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7dab50339a10e1de285ac99d4c3990b8693">ngl::NONE</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da46501e52c3411c5c5879a8fe4432d885">ngl::TESSCONTROL</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da1094991cfaebfc09516e6eee108f83d2">ngl::TESSEVAL</references>
        <references refid="namespacengl_1affa062a5da165462559270d064bc0f7da0c3e47aef93a7f244f41ab309a33634b">ngl::VERTEX</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1a07f1f75e9426b59d8d8db659b3829fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Shader::~Shader</definition>
        <argsstring>()</argsstring>
        <name>~Shader</name>
        <briefdescription>
<para>dtor, will clean up shader source and remove shader from GL </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="52" column="1" bodyfile="/Users/jmacey/NGL/src/Shader.cpp" bodystart="74" bodyend="78"/>
        <references refid="glew_8h_1ac012d7614801ed69d643ad388dcfc768" compoundref="glew_8h" startline="1917">glDeleteShader</references>
        <references refid="classngl_1_1_shader_1a8ede272d2dc4193cb13e730d60ab8f5b" compoundref="_shader_8h" startline="98">m_name</references>
        <references refid="classngl_1_1_shader_1a1a84e2d7821f791183eb4b914a22d583" compoundref="_shader_8h" startline="115">m_shaderHandle</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Shader::compile</definition>
        <argsstring>() noexcept</argsstring>
        <name>compile</name>
        <briefdescription>
<para>compile the current shader will check to see if source is attached and issue warning if not </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="57" column="1" bodyfile="/Users/jmacey/NGL/src/Shader.cpp" bodystart="80" bodyend="102"/>
        <references refid="glew_8h_1a8b14cf3c9445c50aabe5c7d21b31d215" compoundref="glew_8h" startline="1796">GL_COMPILE_STATUS</references>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="glew_8h_1acf7a528ef1ef237d2a7676dcb0f22473" compoundref="glew_8h" startline="1913">glCompileShader</references>
        <references refid="glew_8h_1ae7002efbed794728b79205427b3ccc66" compoundref="glew_8h" startline="1930">glGetShaderiv</references>
        <references refid="classngl_1_1_shader_1abc94c01f99c5df19d86e70178a0d8bd4" compoundref="_shader_8h" startline="107">m_compiled</references>
        <references refid="classngl_1_1_shader_1a5edc58c302d6a1825bd21a2b36545fa8" compoundref="_shader_8h" startline="119">m_debugState</references>
        <references refid="classngl_1_1_shader_1a8ede272d2dc4193cb13e730d60ab8f5b" compoundref="_shader_8h" startline="98">m_name</references>
        <references refid="classngl_1_1_shader_1a1a84e2d7821f791183eb4b914a22d583" compoundref="_shader_8h" startline="115">m_shaderHandle</references>
        <references refid="classngl_1_1_shader_1acb23e11bcd0da35ac79a530bf3ef3fa7" compoundref="_shader_8h" startline="102">m_source</references>
        <references refid="namespacengl_1a59d9798630b6402a2e2a7c7d962ccb48" compoundref="_shader_8cpp" startline="31" endline="49">ngl::printInfoLog</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1a89759dae6f482f497c81349c7e012ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Shader::load</definition>
        <argsstring>(std::string _name) noexcept</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>load in shader source and attach it to the shader object if source is already loaded it will re-load and re-attached </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name for the source we are loading </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="62" column="1" bodyfile="/Users/jmacey/NGL/src/Shader.cpp" bodystart="105" bodyend="132"/>
        <references refid="glew_8h_1a369ec108462c247e3028edc9070117a0" compoundref="glew_8h" startline="1941">glShaderSource</references>
        <references refid="classngl_1_1_shader_1abc94c01f99c5df19d86e70178a0d8bd4" compoundref="_shader_8h" startline="107">m_compiled</references>
        <references refid="classngl_1_1_shader_1a5edc58c302d6a1825bd21a2b36545fa8" compoundref="_shader_8h" startline="119">m_debugState</references>
        <references refid="classngl_1_1_shader_1a1a84e2d7821f791183eb4b914a22d583" compoundref="_shader_8h" startline="115">m_shaderHandle</references>
        <references refid="classngl_1_1_shader_1acb23e11bcd0da35ac79a530bf3ef3fa7" compoundref="_shader_8h" startline="102">m_source</references>
        <references refid="namespacengl_1a59d9798630b6402a2e2a7c7d962ccb48" compoundref="_shader_8cpp" startline="31" endline="49">ngl::printInfoLog</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1a4fd27a6d72ac27effeb115e15bed3cb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Shader::loadFromString</definition>
        <argsstring>(const std::string &amp;_string) noexcept</argsstring>
        <name>loadFromString</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="64" column="1" bodyfile="/Users/jmacey/NGL/src/Shader.cpp" bodystart="134" bodyend="153"/>
        <references refid="glew_8h_1a369ec108462c247e3028edc9070117a0" compoundref="glew_8h" startline="1941">glShaderSource</references>
        <references refid="classngl_1_1_shader_1abc94c01f99c5df19d86e70178a0d8bd4" compoundref="_shader_8h" startline="107">m_compiled</references>
        <references refid="classngl_1_1_shader_1a5edc58c302d6a1825bd21a2b36545fa8" compoundref="_shader_8h" startline="119">m_debugState</references>
        <references refid="classngl_1_1_shader_1a1a84e2d7821f791183eb4b914a22d583" compoundref="_shader_8h" startline="115">m_shaderHandle</references>
        <references refid="classngl_1_1_shader_1acb23e11bcd0da35ac79a530bf3ef3fa7" compoundref="_shader_8h" startline="102">m_source</references>
        <references refid="namespacengl_1a59d9798630b6402a2e2a7c7d962ccb48" compoundref="_shader_8cpp" startline="31" endline="49">ngl::printInfoLog</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1abdb11e245fc0bec8830067050eb12980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Shader::toggleDebug</definition>
        <argsstring>() noexcept</argsstring>
        <name>toggleDebug</name>
        <briefdescription>
<para>toggle the debug state </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="68" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1ad5f3f53d1fbb17a651506f9b673816d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Shader::getShaderHandle</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getShaderHandle</name>
        <briefdescription>
<para>get the shader handle for this shader </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the hand for this shader </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="73" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1a109d6a595f70d9b80cb8c46f2d2dc6c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Shader::incrementRefCount</definition>
        <argsstring>() noexcept</argsstring>
        <name>incrementRefCount</name>
        <briefdescription>
<para>increment the shader ref count so we can see how many program objects are using this shader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="78" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1aa48d16209b907a12422d2d6383f34ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Shader::decrementRefCount</definition>
        <argsstring>() noexcept</argsstring>
        <name>decrementRefCount</name>
        <briefdescription>
<para>decrement the reference counteer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="82" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1a69ae6c9e57a9c91a454751de373ac631" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>int ngl::Shader::getRefCount</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getRefCount</name>
        <briefdescription>
<para>return the number of ProgramObjects referencing this shader </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of references </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="87" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_1ab4b05e1b5a92f6aa5779649c8d0456d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>const std::string ngl::Shader::getShaderSource</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getShaderSource</name>
        <briefdescription>
<para>the shader source </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the shader source </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="92" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="92" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>and encapsulation of an OpenGL <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> object with associations for source code, etc. Used in conjunction with the <ref refid="classngl_1_1_shader_program" kindref="compound">ShaderProgram</ref> class </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jonathan Macey </para></simplesect>
<simplesect kind="version"><para>1.0 </para></simplesect>
<simplesect kind="date"><para>24/11/10 </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1865">
        <label>ngl::Shader</label>
        <link refid="classngl_1_1_shader"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/Shader.h" line="41" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Shader.h" bodystart="40" bodyend="124"/>
    <listofallmembers>
      <member refid="classngl_1_1_shader_1a5cb76454ab9e2861dac436ea9c57da60" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>compile</name></member>
      <member refid="classngl_1_1_shader_1aa48d16209b907a12422d2d6383f34ec5" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>decrementRefCount</name></member>
      <member refid="classngl_1_1_shader_1a69ae6c9e57a9c91a454751de373ac631" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>getRefCount</name></member>
      <member refid="classngl_1_1_shader_1ad5f3f53d1fbb17a651506f9b673816d6" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>getShaderHandle</name></member>
      <member refid="classngl_1_1_shader_1ab4b05e1b5a92f6aa5779649c8d0456d9" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>getShaderSource</name></member>
      <member refid="classngl_1_1_shader_1a109d6a595f70d9b80cb8c46f2d2dc6c2" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>incrementRefCount</name></member>
      <member refid="classngl_1_1_shader_1a89759dae6f482f497c81349c7e012ce2" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>load</name></member>
      <member refid="classngl_1_1_shader_1a4fd27a6d72ac27effeb115e15bed3cb9" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>loadFromString</name></member>
      <member refid="classngl_1_1_shader_1abc94c01f99c5df19d86e70178a0d8bd4" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_compiled</name></member>
      <member refid="classngl_1_1_shader_1a5edc58c302d6a1825bd21a2b36545fa8" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_debugState</name></member>
      <member refid="classngl_1_1_shader_1a8ede272d2dc4193cb13e730d60ab8f5b" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_name</name></member>
      <member refid="classngl_1_1_shader_1a958b091252111eb8118e35737f4325cd" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_refCount</name></member>
      <member refid="classngl_1_1_shader_1a1a84e2d7821f791183eb4b914a22d583" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_shaderHandle</name></member>
      <member refid="classngl_1_1_shader_1a31483b9d1eb19b0ae744b6d4c9cdeae5" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_shaderType</name></member>
      <member refid="classngl_1_1_shader_1acb23e11bcd0da35ac79a530bf3ef3fa7" prot="private" virt="non-virtual"><scope>ngl::Shader</scope><name>m_source</name></member>
      <member refid="classngl_1_1_shader_1aa959a70fb3777d8d8950a81bff414a73" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>Shader</name></member>
      <member refid="classngl_1_1_shader_1abdb11e245fc0bec8830067050eb12980" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>toggleDebug</name></member>
      <member refid="classngl_1_1_shader_1a07f1f75e9426b59d8d8db659b3829fd0" prot="public" virt="non-virtual"><scope>ngl::Shader</scope><name>~Shader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
