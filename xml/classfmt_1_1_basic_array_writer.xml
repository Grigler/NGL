<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfmt_1_1_basic_array_writer" kind="class" language="C++" prot="public">
    <compoundname>fmt::BasicArrayWriter</compoundname>
    <basecompoundref refid="classfmt_1_1_basic_writer" prot="public" virt="non-virtual">fmt::BasicWriter&lt; Char &gt;</basecompoundref>
    <includes refid="format_8h" local="no">format.h</includes>
    <templateparamlist>
      <param>
        <type>typename Char</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfmt_1_1_basic_array_writer_1aa186fd39bef24d436e455baa0608e2a9" prot="private" static="no" mutable="no">
        <type><ref refid="classfmt_1_1internal_1_1_fixed_buffer" kindref="compound">internal::FixedBuffer</ref>&lt; Char &gt;</type>
        <definition>internal::FixedBuffer&lt;Char&gt; fmt::BasicArrayWriter&lt; Char &gt;::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="3076" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3076" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfmt_1_1_basic_array_writer_1a7559ecce2ffb3ecbb275dac5d2cc05e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicArrayWriter&lt; Char &gt;::BasicArrayWriter</definition>
        <argsstring>(Char *array, std::size_t size)</argsstring>
        <name>BasicArrayWriter</name>
        <param>
          <type>Char *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a :class:<computeroutput><ref refid="classfmt_1_1_basic_array_writer" kindref="compound">fmt::BasicArrayWriter</ref></computeroutput> object for <emphasis>array</emphasis> of the given size.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="3085" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3085" bodyend="3086"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_array_writer_1ab8787cfc9b1500c0f2765074f64e5088" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>SIZE</declname>
            <defname>SIZE</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fmt::BasicArrayWriter&lt; Char &gt;::BasicArrayWriter</definition>
        <argsstring>(Char(&amp;array)[SIZE])</argsstring>
        <name>BasicArrayWriter</name>
        <param>
          <type>Char(&amp;)</type>
          <declname>array</declname>
          <array>[SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a :class:<computeroutput><ref refid="classfmt_1_1_basic_array_writer" kindref="compound">fmt::BasicArrayWriter</ref></computeroutput> object for <emphasis>array</emphasis> of the size known at compile time.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="3095" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3095" bodyend="3096"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class template provides operations for formatting and writing data into a fixed-size array. For writing into a dynamically growing buffer use :class:<computeroutput><ref refid="classfmt_1_1_basic_memory_writer" kindref="compound">fmt::BasicMemoryWriter</ref></computeroutput>.</para><para>Any write method will throw <computeroutput>std::runtime_error</computeroutput> if the output doesn&apos;t fit into the array.</para><para>You can use one of the following typedefs for common character types:</para><para>+-----------<mdash/>+------------------------<mdash/>+ | Type | Definition | +==============+===========================+ | ArrayWriter | BasicArrayWriter&lt;char&gt; | +-----------<mdash/>+------------------------<mdash/>+ | WArrayWriter | BasicArrayWriter&lt;wchar_t&gt; | +-----------<mdash/>+------------------------<mdash/>+  </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1255">
        <label>fmt::BasicWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_writer"/>
      </node>
      <node id="1254">
        <label>fmt::BasicArrayWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_array_writer"/>
        <childnode refid="1255" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1259">
        <label>size_t</label>
      </node>
      <node id="1261">
        <label>T</label>
      </node>
      <node id="1258">
        <label>fmt::Buffer&lt; Char &gt;</label>
        <link refid="classfmt_1_1_buffer"/>
        <childnode refid="1259" relation="usage">
          <edgelabel>#size_</edgelabel>
          <edgelabel>#capacity_</edgelabel>
        </childnode>
        <childnode refid="1260" relation="template-instance">
          <edgelabel>&lt; Char &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1260">
        <label>fmt::Buffer&lt; T &gt;</label>
        <link refid="classfmt_1_1_buffer"/>
        <childnode refid="1259" relation="usage">
          <edgelabel>#size_</edgelabel>
          <edgelabel>#capacity_</edgelabel>
        </childnode>
        <childnode refid="1261" relation="usage">
          <edgelabel>#ptr_</edgelabel>
        </childnode>
      </node>
      <node id="1257">
        <label>fmt::BasicWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_writer"/>
        <childnode refid="1258" relation="usage">
          <edgelabel>-buffer_</edgelabel>
        </childnode>
      </node>
      <node id="1256">
        <label>fmt::BasicArrayWriter&lt; Char &gt;</label>
        <link refid="classfmt_1_1_basic_array_writer"/>
        <childnode refid="1257" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="3074" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3074" bodyend="3097"/>
    <listofallmembers>
      <member refid="classfmt_1_1_basic_array_writer_1a7559ecce2ffb3ecbb275dac5d2cc05e9" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>BasicArrayWriter</name></member>
      <member refid="classfmt_1_1_basic_array_writer_1ab8787cfc9b1500c0f2765074f64e5088" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>BasicArrayWriter</name></member>
      <member refid="classfmt_1_1_basic_writer_1a586c21bbbd38149bcf48fc30376afc9c" prot="protected" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>BasicWriter</name></member>
      <member refid="classfmt_1_1_basic_writer_1a9b2a71d2ec402005fca013111bb576cb" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>buffer</name></member>
      <member refid="classfmt_1_1_basic_array_writer_1aa186fd39bef24d436e455baa0608e2a9" prot="private" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>buffer_</name></member>
      <member refid="classfmt_1_1_basic_writer_1a8b68001f5c1c0ea851ddaef27dcbc691" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>c_str</name></member>
      <member refid="classfmt_1_1_basic_writer_1aa5b6f4dd01854cbc3ebf06a7f2fce713" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>clear</name></member>
      <member refid="classfmt_1_1_basic_writer_1a62d1c7b5be9c3580326320d5d178d096" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>data</name></member>
      <member refid="classfmt_1_1_basic_writer_1a3d21148f336a76a71b39abb2fd6c0f88" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a7ec4d6fb4cf9173b14d4ee100fd4a428" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a1fd4183e01fd56ec99af40431b32561b" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a4e0ef5415eb162ec991b69b930245094" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a2c876284b0b3b7f36cc0354e3348912a" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1afb01c45f06b2c13027343b74ce973a40" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1afa435e67e3db3d214f0272b10c0a3878" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a90215ced4a6a9fcd5065f1ffd4105a4b" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a4c7d6b3a40b4083f351de3f9ee0b3818" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a83967e3236b090ba035d5fc04317f4ed" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a5f07d053b9f215b548ba3623e7a09212" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1ac0483272173279436f3d47f49894cafb" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a45ded4f76427103f3c189855be8c5d46" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a79c23ed8ee17ee205ece04571f0dd79b" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfmt_1_1_basic_writer_1a1b6721b4ba4d3fa18ac781a36616cc2a" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>size</name></member>
      <member refid="classfmt_1_1_basic_writer_1a91f06ced6e063ee77a99740e0e79faf6" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>str</name></member>
      <member refid="classfmt_1_1_basic_writer_1aaa83498c649d4a90ea3366bae62f4eac" prot="public" virt="non-virtual"><scope>fmt::BasicArrayWriter</scope><name>write</name></member>
      <member refid="classfmt_1_1_basic_writer_1a25f6fc2e43d3bcfb3de9ac33afe6050d" prot="public" virt="virtual"><scope>fmt::BasicArrayWriter</scope><name>~BasicWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
