<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="document_8h" kind="file" language="C++">
    <compoundname>document.h</compoundname>
    <includes refid="reader_8h" local="yes">reader.h</includes>
    <includes refid="meta_8h" local="yes">internal/meta.h</includes>
    <includes refid="strfunc_8h" local="yes">internal/strfunc.h</includes>
    <includes local="no">new</includes>
    <includes local="no">iterator</includes>
    <includedby refid="_shader_lib_8cpp" local="yes">ShaderLib.cpp</includedby>
    <includedby refid="pointer_8h" local="yes">pointer.h</includedby>
    <incdepgraph>
      <node id="4203">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4206">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4212">
        <label>iterator</label>
      </node>
      <node id="4198">
        <label>cassert</label>
      </node>
      <node id="4210">
        <label>internal/strfunc.h</label>
        <link refid="strfunc_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4205">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4207">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4209">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4199">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4211">
        <label>new</label>
      </node>
      <node id="4196">
        <label>cstdlib</label>
      </node>
      <node id="4195">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="4196" relation="include">
        </childnode>
        <childnode refid="4197" relation="include">
        </childnode>
        <childnode refid="4198" relation="include">
        </childnode>
        <childnode refid="4199" relation="include">
        </childnode>
        <childnode refid="4200" relation="include">
        </childnode>
      </node>
      <node id="4194">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
        <childnode refid="4200" relation="include">
        </childnode>
        <childnode refid="4201" relation="include">
        </childnode>
        <childnode refid="4202" relation="include">
        </childnode>
        <childnode refid="4204" relation="include">
        </childnode>
        <childnode refid="4209" relation="include">
        </childnode>
      </node>
      <node id="4201">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4200">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4208">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
      </node>
      <node id="4193">
        <label>document.h</label>
        <link refid="document.h"/>
        <childnode refid="4194" relation="include">
        </childnode>
        <childnode refid="4201" relation="include">
        </childnode>
        <childnode refid="4210" relation="include">
        </childnode>
        <childnode refid="4211" relation="include">
        </childnode>
        <childnode refid="4212" relation="include">
        </childnode>
      </node>
      <node id="4204">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
        <childnode refid="4205" relation="include">
        </childnode>
        <childnode refid="4206" relation="include">
        </childnode>
        <childnode refid="4207" relation="include">
        </childnode>
        <childnode refid="4208" relation="include">
        </childnode>
      </node>
      <node id="4197">
        <label>cstring</label>
      </node>
      <node id="4202">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="4195" relation="include">
        </childnode>
        <childnode refid="4203" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4214">
        <label>ShaderLib.cpp</label>
        <link refid="_shader_lib_8cpp"/>
      </node>
      <node id="4215">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
      </node>
      <node id="4213">
        <label>document.h</label>
        <link refid="document.h"/>
        <childnode refid="4214" relation="include">
        </childnode>
        <childnode refid="4215" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_generic_value" prot="public">GenericValue</innerclass>
    <innerclass refid="class_generic_document" prot="public">GenericDocument</innerclass>
    <innerclass refid="struct_generic_member" prot="public">GenericMember</innerclass>
    <innerclass refid="class_generic_member_iterator" prot="public">GenericMemberIterator</innerclass>
    <innerclass refid="struct_generic_string_ref" prot="public">GenericStringRef</innerclass>
    <innerclass refid="structinternal_1_1_is_generic_value_impl" prot="public">internal::IsGenericValueImpl</innerclass>
    <innerclass refid="structinternal_1_1_is_generic_value_impl_3_01_t_00_01typename_01_void_3_01typename_01_t_1_1_enco3a51e9d8b4986f001b39e1e8edecb66a" prot="public">internal::IsGenericValueImpl&lt; T, typename Void&lt; typename T::EncodingType &gt;::Type, typename Void&lt; typename T::AllocatorType &gt;::Type &gt;</innerclass>
    <innerclass refid="structinternal_1_1_is_generic_value" prot="public">internal::IsGenericValue</innerclass>
    <innerclass refid="class_generic_value" prot="public">GenericValue</innerclass>
    <innerclass refid="struct_generic_value_1_1_string" prot="public">GenericValue::String</innerclass>
    <innerclass refid="struct_generic_value_1_1_short_string" prot="public">GenericValue::ShortString</innerclass>
    <innerclass refid="union_generic_value_1_1_number" prot="public">GenericValue::Number</innerclass>
    <innerclass refid="struct_generic_value_1_1_number_1_1_i" prot="public">GenericValue::Number::I</innerclass>
    <innerclass refid="struct_generic_value_1_1_number_1_1_u" prot="public">GenericValue::Number::U</innerclass>
    <innerclass refid="struct_generic_value_1_1_object" prot="public">GenericValue::Object</innerclass>
    <innerclass refid="struct_generic_value_1_1_array" prot="public">GenericValue::Array</innerclass>
    <innerclass refid="union_generic_value_1_1_data" prot="public">GenericValue::Data</innerclass>
    <innerclass refid="class_generic_document" prot="public">GenericDocument</innerclass>
    <innerclass refid="struct_generic_document_1_1_clear_stack_on_exit" prot="private">GenericDocument::ClearStackOnExit</innerclass>
    <innernamespace refid="namespaceinternal">internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga2f2eef0ee4477f3fe5874703a66e997f" prot="public" static="no">
        <name>RAPIDJSON_HAS_STDSTRING</name>
        <briefdescription>
<para>Enable RapidJSON support for <computeroutput>std::string</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>By defining this preprocessor symbol to <computeroutput>1</computeroutput>, several convenience functions for using rapidjson::GenericValue with <computeroutput>std::string</computeroutput> are enabled, especially for construction and comparison. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" line="40" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;</type>
        <definition>typedef GenericValue&lt;UTF8&lt;&gt; &gt; Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
<para><ref refid="class_generic_value" kindref="compound">GenericValue</ref> with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" line="1758" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" bodystart="1758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" prot="public" static="no">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;</type>
        <definition>typedef GenericDocument&lt;UTF8&lt;&gt; &gt; Document</definition>
        <argsstring></argsstring>
        <name>Document</name>
        <briefdescription>
<para><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" line="2077" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" bodystart="2077" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; CharType &gt;</type>
        <definition>GenericStringRef&lt; CharType &gt; StringRef</definition>
        <argsstring>(const CharType *str)</argsstring>
        <name>StringRef</name>
        <param>
          <type>const CharType *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Mark a character pointer as constant string. </para>        </briefdescription>
        <detaileddescription>
<para>Mark a plain character pointer as a &quot;string literal&quot;. This function can be used to avoid copying a character string to be referenced as a value in a JSON <ref refid="class_generic_value" kindref="compound">GenericValue</ref> object, if the string&apos;s lifetime is known to be valid long enough. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CharType</parametername>
</parameternamelist>
<parameterdescription>
<para>Character type of the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant string, lifetime assumed to be longer than the use of the string in e.g. a <ref refid="class_generic_value" kindref="compound">GenericValue</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref> string reference object</para></simplesect>
<simplesect kind="see"><para><ref refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" kindref="member">GenericValue::GenericValue(StringRefType)</ref>, <ref refid="class_generic_value_1a386708557555e6389184de608af5e6a6" kindref="member">GenericValue::operator=(StringRefType)</ref>, GenericValue::SetString(StringRefType), GenericValue::PushBack(StringRefType, Allocator&amp;), GenericValue::AddMember </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" line="348" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" bodystart="348" bodyend="350"/>
        <references refid="namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e" compoundref="strfunc_8h" startline="30" endline="34">internal::StrLen</references>
        <referencedby refid="document_8h_1a578c51ab574a50a9c760b9da7c7562f2" compoundref="document_8h" startline="368" endline="370">StringRef</referencedby>
        <referencedby refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" compoundref="document_8h" startline="552" endline="552">GenericValue&lt; Encoding, Allocator &gt;::GenericValue</referencedby>
        <referencedby refid="class_generic_value_1a386708557555e6389184de608af5e6a6" compoundref="document_8h" startline="625" endline="628">GenericValue&lt; Encoding, Allocator &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="document_8h_1a578c51ab574a50a9c760b9da7c7562f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; CharType &gt;</type>
        <definition>GenericStringRef&lt; CharType &gt; StringRef</definition>
        <argsstring>(const CharType *str, size_t length)</argsstring>
        <name>StringRef</name>
        <param>
          <type>const CharType *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Mark a character pointer as constant string. </para>        </briefdescription>
        <detaileddescription>
<para>Mark a plain character pointer as a &quot;string literal&quot;. This function can be used to avoid copying a character string to be referenced as a value in a JSON <ref refid="class_generic_value" kindref="compound">GenericValue</ref> object, if the string&apos;s lifetime is known to be valid long enough.</para><para>This version has better performance with supplied length, and also supports string containing null characters.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CharType</parametername>
</parameternamelist>
<parameterdescription>
<para>character type of the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant string, lifetime assumed to be longer than the use of the string in e.g. a <ref refid="class_generic_value" kindref="compound">GenericValue</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of source string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref> string reference object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" line="368" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/rapidjson/document.h" bodystart="368" bodyend="370"/>
        <references refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" compoundref="rapidjson_8h" startline="322">SizeType</references>
        <references refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" compoundref="document_8h" startline="348" endline="350">StringRef</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DOCUMENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_DOCUMENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meta_8h" kindref="compound">internal/meta.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strfunc_8h" kindref="compound">internal/strfunc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;new&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>placement<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="27"><highlight class="normal">RAPIDJSON_DIAG_OFF(4127)<sp/></highlight><highlight class="comment">//<sp/>conditional<sp/>expression<sp/>is<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="30"><highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RAPIDJSON_DOXYGEN_RUNNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_HAS_STDSTRING<sp/>1<sp/>//<sp/>force<sp/>generation<sp/>of<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_HAS_STDSTRING<sp/>0<sp/>//<sp/>no<sp/>std::string<sp/>support<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">#endif<sp/>//<sp/>!defined(RAPIDJSON_HAS_STDSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::iterator,<sp/>std::random_access_iterator_tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="70" refid="class_generic_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator&gt;</highlight></codeline>
<codeline lineno="73" refid="class_generic_document" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"></codeline>
<codeline lineno="81"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;<sp/></highlight></codeline>
<codeline lineno="82" refid="struct_generic_member" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_member" kindref="compound">GenericMember</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="83" refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">//<sp/>GenericMemberIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"></codeline>
<codeline lineno="111"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="112" refid="class_generic_member_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::iterator&lt;std::random_access_iterator_tag</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>typename<sp/>internal::MaybeAddConst&lt;Const,GenericMember&lt;Encoding,Allocator&gt;<sp/>&gt;::Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_generic_member_iterator_1a82bdd5798f1a5ac0e3e7ba4bd6938cfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,Allocator&gt;;</highlight></codeline>
<codeline lineno="117" refid="class_generic_member_iterator_1aa375aeb1ffac85cddc3a72a6c24ec6e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref><sp/><ref refid="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" kindref="member">PlainType</ref>;</highlight></codeline>
<codeline lineno="120" refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</ref><sp/><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="121" refid="class_generic_member_iterator_1a745942368b5c6c6cf32878ad104239a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::iterator&lt;std::random_access_iterator_tag,ValueType&gt;<sp/><ref refid="class_generic_member_iterator_1a745942368b5c6c6cf32878ad104239a3" kindref="member">BaseType</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125" refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref><sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>;</highlight></codeline>
<codeline lineno="127" refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,Encoding,Allocator&gt;</ref><sp/><sp/><ref refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" kindref="member">ConstIterator</ref>;</highlight></codeline>
<codeline lineno="129" refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;false,Encoding,Allocator&gt;</ref><sp/><ref refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" kindref="member">NonConstIterator</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_generic_member_iterator_1ac69f141f1fde31c1f550f524a69c5de9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">BaseType::pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1ac69f141f1fde31c1f550f524a69c5de9" kindref="member">Pointer</ref>;</highlight></codeline>
<codeline lineno="134" refid="class_generic_member_iterator_1ae80f6b601eb9e24f73aa75fb32b35c65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a86b4d0486956da7d2bb74efd20a1b255" kindref="member">BaseType::reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1ae80f6b601eb9e24f73aa75fb32b35c65" kindref="member">Reference</ref>;</highlight></codeline>
<codeline lineno="136" refid="class_generic_member_iterator_1a902b99c8ae351cd7626514dc5f30740a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::difference_type<sp/><ref refid="class_generic_member_iterator_1a902b99c8ae351cd7626514dc5f30740a" kindref="member">DifferenceType</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"></codeline>
<codeline lineno="142" refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" kindref="member">GenericMemberIterator</ref>()<sp/>:<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"></codeline>
<codeline lineno="160" refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" kindref="member">GenericMemberIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NonConstIterator<sp/>&amp;<sp/>it)<sp/>:<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>(it.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"></codeline>
<codeline lineno="164" refid="class_generic_member_iterator_1afd6c9a104e2285d1d0b50bde53c9109e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator&amp;<sp/><ref refid="class_generic_member_iterator_1afd6c9a104e2285d1d0b50bde53c9109e" kindref="member">operator++</ref>(){<sp/>++<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="165" refid="class_generic_member_iterator_1a6db8972f02d74b663b6ef90ee3ff34f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator&amp;<sp/><ref refid="class_generic_member_iterator_1a6db8972f02d74b663b6ef90ee3ff34f6" kindref="member">operator--</ref>(){<sp/>--<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="166" refid="class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/><sp/><ref refid="class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">){<sp/>Iterator<sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>++<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="167" refid="class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/><sp/><ref refid="class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">){<sp/>Iterator<sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>--<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="169"></codeline>
<codeline lineno="171"></codeline>
<codeline lineno="172" refid="class_generic_member_iterator_1ac533ee1f689563a7276c3ace44dfe4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/><ref refid="class_generic_member_iterator_1ac533ee1f689563a7276c3ace44dfe4e0" kindref="member">operator+</ref>(DifferenceType<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>(<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>+n);<sp/>}</highlight></codeline>
<codeline lineno="173" refid="class_generic_member_iterator_1a0152d4ec06c14f50279aa108a97216a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/><ref refid="class_generic_member_iterator_1a0152d4ec06c14f50279aa108a97216a7" kindref="member">operator-</ref>(DifferenceType<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>(<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>-n);<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_generic_member_iterator_1a1fc75f09d68b0f5d92f18ae8c4133e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator&amp;<sp/><ref refid="class_generic_member_iterator_1a1fc75f09d68b0f5d92f18ae8c4133e6a" kindref="member">operator+=</ref>(DifferenceType<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>)<sp/>{<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>+=<ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="176" refid="class_generic_member_iterator_1a7cd0c5f194007ec24fa9fa5c13e2502a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator&amp;<sp/><ref refid="class_generic_member_iterator_1a7cd0c5f194007ec24fa9fa5c13e2502a" kindref="member">operator-=</ref>(DifferenceType<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>)<sp/>{<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>-=<ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="178"></codeline>
<codeline lineno="180"></codeline>
<codeline lineno="181" refid="class_generic_member_iterator_1aacbaf8c5dfded8148a5ecd400338d457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1aacbaf8c5dfded8148a5ecd400338d457" kindref="member">operator==</ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>==<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="182" refid="class_generic_member_iterator_1a829ba40cafa98fd5ced56a07658ce0b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a829ba40cafa98fd5ced56a07658ce0b7" kindref="member">operator!=</ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>!=<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="183" refid="class_generic_member_iterator_1a395f81480589f78cb2497509730e36c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a395f81480589f78cb2497509730e36c3" kindref="member">operator&lt;=</ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&lt;=<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="184" refid="class_generic_member_iterator_1afe815c6a0cd2f72f800b59fdb443d223" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1afe815c6a0cd2f72f800b59fdb443d223" kindref="member">operator&gt;=</ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&gt;=<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="185" refid="class_generic_member_iterator_1a6a897b2e89822d798c985008fc3a9a18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a6a897b2e89822d798c985008fc3a9a18" kindref="member">operator&lt; </ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&lt;<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="186" refid="class_generic_member_iterator_1a89c57197cd49cfa6cf98e3bdf1454640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a89c57197cd49cfa6cf98e3bdf1454640" kindref="member">operator&gt; </ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&gt;<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="188"></codeline>
<codeline lineno="190"></codeline>
<codeline lineno="191" refid="class_generic_member_iterator_1a37f5cb3b669682da70fe3e5ec6bc4775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Reference<sp/><ref refid="class_generic_member_iterator_1a37f5cb3b669682da70fe3e5ec6bc4775" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="192" refid="class_generic_member_iterator_1a2e3d0e0f9a5c0ca69f09e4927ed985c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Pointer<sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a2e3d0e0f9a5c0ca69f09e4927ed985c3" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="193" refid="class_generic_member_iterator_1ae83095869e033554257e3f33df59fcfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Reference<sp/><ref refid="class_generic_member_iterator_1ae83095869e033554257e3f33df59fcfb" kindref="member">operator[]</ref>(DifferenceType<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>[<ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>];<sp/>}</highlight></codeline>
<codeline lineno="195"></codeline>
<codeline lineno="197" refid="class_generic_member_iterator_1a056851821e75c4be13b297604bc37c0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DifferenceType<sp/><ref refid="class_generic_member_iterator_1a056851821e75c4be13b297604bc37c0b" kindref="member">operator-</ref>(ConstIterator<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>-that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201" refid="class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74" kindref="member">GenericMemberIterator</ref>(Pointer<sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>)<sp/>:<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>(p)<sp/>{}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Pointer<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class-based<sp/>member<sp/>iterator<sp/>implementation<sp/>disabled,<sp/>use<sp/>plain<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt;false,Encoding,Allocator&gt;<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>*<sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt;true,Encoding,Allocator&gt;<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>*<sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">//<sp/>GenericStringRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"></codeline>
<codeline lineno="258"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="259" refid="struct_generic_string_ref" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref><sp/>{</highlight></codeline>
<codeline lineno="260" refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CharType<sp/><ref refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" kindref="member">Ch</ref>;<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>N&gt;</highlight></codeline>
<codeline lineno="286" refid="struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType<sp/>(&amp;str)[N])<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>(str),<sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>(N-1)<sp/>{}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"></codeline>
<codeline lineno="308" refid="struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>(str),<sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>(<ref refid="namespaceinternal" kindref="compound">internal</ref>::<ref refid="namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e" kindref="member">StrLen</ref>(str)){<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref><sp/>!=<sp/>NULL);<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"></codeline>
<codeline lineno="318" refid="struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="glew_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>(str),<sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>(len)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref><sp/>!=<sp/>NULL);<sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="struct_generic_string_ref_1a61a4241c23f65626ddc1da4ae5dac1b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch<sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;<sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>;<sp/></highlight></codeline>
<codeline lineno="325" refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>;<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>N&gt;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>(CharType<sp/>(&amp;str)[N])<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>delete<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"></codeline>
<codeline lineno="347"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="348" refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref><sp/><ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>(str,<sp/><ref refid="namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e" kindref="member">internal::StrLen</ref>(str));</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"></codeline>
<codeline lineno="367"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="368" refid="document_8h_1a578c51ab574a50a9c760b9da7c7562f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref><sp/><ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>(str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(length));</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref><sp/><ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;CharType&gt;&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>(str.data(),<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(str.size()));</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="comment">//<sp/>GenericValue<sp/>type<sp/>traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="namespaceinternal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="396" refid="structinternal_1_1_is_generic_value_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref><sp/>:<sp/>FalseType<sp/>{};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>select<sp/>candidates<sp/>according<sp/>to<sp/>nested<sp/>encoding<sp/>and<sp/>allocator<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="structinternal_1_1_is_generic_value_impl_3_01_t_00_01typename_01_void_3_01typename_01_t_1_1_enco3a51e9d8b4986f001b39e1e8edecb66a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref>&lt;T,<sp/>typename<sp/>Void&lt;typename<sp/>T::EncodingType&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>,<sp/>typename<sp/>Void&lt;typename<sp/>T::AllocatorType&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>&gt;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>IsBaseOf&lt;GenericValue&lt;typename<sp/>T::EncodingType,<sp/>typename<sp/>T::AllocatorType&gt;,<sp/>T&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref><sp/>{};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>to<sp/>match<sp/>arbitrary<sp/>GenericValue<sp/>instantiations,<sp/>including<sp/>derived<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="structinternal_1_1_is_generic_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_is_generic_value" kindref="compound">IsGenericValue</ref><sp/>:<sp/><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref>&lt;T&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref><sp/>{};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="comment">//<sp/>GenericValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"></codeline>
<codeline lineno="420"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>MemoryPoolAllocator&lt;&gt;<sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424" refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>;</highlight></codeline>
<codeline lineno="425" refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Encoding<sp/><ref refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" kindref="member">EncodingType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426" refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Allocator<sp/><ref refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" kindref="member">AllocatorType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428" refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;Ch&gt;</ref><sp/><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429" refid="class_generic_value_1a349b8faae61edc42b4289726820be439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;false,Encoding,Allocator&gt;::Iterator</ref><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="430" refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,Encoding,Allocator&gt;::Iterator</ref><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="431" refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432" refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref>;<sp/></highlight></codeline>
<codeline lineno="433" refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"></codeline>
<codeline lineno="437"></codeline>
<codeline lineno="439" refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>()<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_(kNullFlag)<sp/>{}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(rhs.data_),<sp/>flags_(rhs.flags_)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.<ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref><sp/>=<sp/>kNullFlag;<sp/></highlight><highlight class="comment">//<sp/>give<sp/>up<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator&gt;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</ref>&amp;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator&gt;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator=(<ref refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</ref>&amp;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"></codeline>
<codeline lineno="469" refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" kindref="member">GenericValue</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/><ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_()<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>defaultFlags[7]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kNullFlag,<sp/>kFalseFlag,<sp/>kTrueFlag,<sp/>kObjectFlag,<sp/>kArrayFlag,<sp/>kShortStringFlag,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kNumberAnyFlag</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref><sp/>&lt;=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>defaultFlags[<ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>];</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ShortString<sp/>to<sp/>store<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref><sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.ss.SetLength(0);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator<sp/>&gt;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/>Allocator<sp/>&amp;<sp/>allocator);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"></codeline>
<codeline lineno="498"><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DOXYGEN_RUNNING<sp/>//<sp/>hide<sp/>SFINAE<sp/>from<sp/>Doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="500" refid="class_generic_value_1a88f02daf621c42b96d49d608fa9214de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a88f02daf621c42b96d49d608fa9214de" kindref="member">GenericValue</ref>(T<sp/><ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref>,<sp/>RAPIDJSON_ENABLEIF((internal::IsSame&lt;T,bool&gt;)))<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(),<sp/>flags_(b<sp/>?<sp/>kTrueFlag<sp/>:<sp/>kFalseFlag)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe-guard<sp/>against<sp/>failing<sp/>SFINAE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">RAPIDJSON_STATIC_ASSERT</ref>((<ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">internal::IsSame&lt;bool,T&gt;::Value</ref>));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_(kNumberIntFlag)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.n.i64<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kUintFlag<sp/>|<sp/>kUint64Flag;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_(kNumberUintFlag)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.n.u64<sp/>=<sp/>u;<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u<sp/>&amp;<sp/>0x80000000))</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kIntFlag<sp/>|<sp/>kInt64Flag;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" kindref="member">GenericValue</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i64)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_(kNumberInt64Flag)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.n.i64<sp/>=<sp/>i64;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i64<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kNumberUint64Flag;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(static_cast&lt;uint64_t&gt;(i64)<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x00000000)))</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kUintFlag;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(static_cast&lt;uint64_t&gt;(i64)<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kIntFlag;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i64<sp/>&gt;=<sp/>static_cast&lt;int64_t&gt;(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kIntFlag;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" kindref="member">GenericValue</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u64)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_(kNumberUint64Flag)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.n.u64<sp/>=<sp/>u64;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u64<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x80000000,<sp/>0x00000000)))</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kInt64Flag;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u64<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x00000000)))</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kUintFlag;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u64<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>kIntFlag;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_(kNumberDoubleFlag)<sp/>{<sp/>data_.n.d<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_()<sp/>{<sp/>SetStringRaw(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length));<sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" kindref="member">GenericValue</ref>(StringRefType<sp/>s)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(),<sp/>flags_()<sp/>{<sp/>SetStringRaw(s);<sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/>Allocator&amp;<sp/>allocator)<sp/>:<sp/>data_(),<sp/>flags_()<sp/>{<sp/>SetStringRaw(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*s,<sp/>Allocator&amp;<sp/>allocator)<sp/>:<sp/>data_(),<sp/>flags_()<sp/>{<sp/>SetStringRaw(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>s,<sp/>Allocator&amp;<sp/>allocator)<sp/>:<sp/>data_(),<sp/>flags_()<sp/>{<sp/>SetStringRaw(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"></codeline>
<codeline lineno="573" refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Shortcut<sp/>by<sp/>Allocator&apos;s<sp/>trait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(flags_)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kArrayFlag:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>=<sp/>data_.a.elements;<sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>!=<sp/>data_.a.elements<sp/>+<sp/>data_.a.size;<sp/>++<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>-&gt;~GenericValue();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::Free(data_.a.elements);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kObjectFlag:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MemberIterator<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref><sp/>=<sp/>MemberBegin();<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref><sp/>!=<sp/>MemberEnd();<sp/>++<ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>-&gt;~Member();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::Free(data_.o.members);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kCopyStringFlag:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::Free(const_cast&lt;Ch*&gt;(data_.s.str));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing<sp/>for<sp/>other<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"></codeline>
<codeline lineno="601"></codeline>
<codeline lineno="602"></codeline>
<codeline lineno="604"></codeline>
<codeline lineno="606" refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" kindref="member">operator=</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RawAssign(rhs);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator=(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>rhs.Move();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"></codeline>
<codeline lineno="625" refid="class_generic_value_1a386708557555e6389184de608af5e6a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="class_generic_value_1a386708557555e6389184de608af5e6a6" kindref="member">operator=</ref>(StringRefType<sp/>str)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>(str);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::IsPointer&lt;T&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>operator=(T<sp/><ref refid="glew_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(value);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>CopyFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)&amp;rhs);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(rhs,<sp/>allocator);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">Swap</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>other)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>temp;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RawAssign(other);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(temp);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>b)<sp/>RAPIDJSON_NOEXCEPT<sp/>{<sp/>a.Swap(b);<sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Move()<sp/>RAPIDJSON_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="694"></codeline>
<codeline lineno="696"></codeline>
<codeline lineno="697"></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a2828b006f18ee4614b5bcd5957b33c7e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref><sp/>RhsType;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetType()<sp/>!=<sp/>rhs.GetType())</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(GetType())<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>:<sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>O(n^2)<sp/>inner-loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.o.size<sp/>!=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.o.size)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>lhsMemberItr<sp/>=<sp/>MemberBegin();<sp/>lhsMemberItr<sp/>!=<sp/>MemberEnd();<sp/>++lhsMemberItr)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RhsType::ConstMemberIterator<sp/>rhsMemberItr<sp/>=<sp/>rhs.FindMember(lhsMemberItr-&gt;name);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhsMemberItr<sp/>==<sp/>rhs.MemberEnd()<sp/>||<sp/>lhsMemberItr-&gt;value<sp/>!=<sp/>rhsMemberItr-&gt;value)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.a.size<sp/>!=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.a.size)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data_.a.size;<sp/>i++)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i]<sp/>!=<sp/>rhs[i])</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringEqual(rhs);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsDouble()<sp/>||<sp/>rhs.IsDouble())<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>GetDouble();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>convert<sp/>from<sp/>integer<sp/>to<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>rhs.GetDouble();<sp/></highlight><highlight class="comment">//<sp/>Ditto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;=<sp/>b<sp/>&amp;&amp;<sp/>a<sp/>&lt;=<sp/><ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>-Wfloat-equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.u64<sp/>==<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.n.u64;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>kTrueType,<sp/>kFalseType,<sp/>kNullType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a2828b006f18ee4614b5bcd5957b33c7e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs));<sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a2828b006f18ee4614b5bcd5957b33c7e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs));<sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/><ref refid="namespacengl_1a2828b006f18ee4614b5bcd5957b33c7e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(rhs);<sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/><ref refid="namespacengl_1a2828b006f18ee4614b5bcd5957b33c7e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>==<sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(rhs<sp/>==<sp/>lhs);<sp/>}</highlight></codeline>
<codeline lineno="783"></codeline>
<codeline lineno="785"></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/>GetType()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(flags_<sp/>&amp;<sp/>kTypeMask);<sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsNull()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>==<sp/>kNullFlag;<sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsFalse()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>==<sp/>kFalseFlag;<sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsTrue()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>==<sp/>kTrueFlag;<sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsBool()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kBoolFlag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsObject()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>==<sp/>kObjectFlag;<sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsArray()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>==<sp/>kArrayFlag;<sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsNumber()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kNumberFlag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInt()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kIntFlag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUint()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kUintFlag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInt64()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kInt64Flag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUint64()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kUint64Flag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsDouble()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kDoubleFlag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsString()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>kStringFlag)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"></codeline>
<codeline lineno="805"></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetNull()<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"></codeline>
<codeline lineno="812"></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetBool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsBool());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>==<sp/>kTrueFlag;<sp/>}</highlight></codeline>
<codeline lineno="816"></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetBool(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(b);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"></codeline>
<codeline lineno="822"></codeline>
<codeline lineno="823"></codeline>
<codeline lineno="825"></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetObject()<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>MemberCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.o.size;<sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ObjectEmpty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.o.size<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::NotExpr&lt;internal::IsSame&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::RemoveConst&lt;T&gt;::Type</ref>,<sp/>Ch&gt;<sp/>&gt;),(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))<sp/>operator[](T*<sp/><ref refid="glew_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::NotExpr&lt;internal::IsSame&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::RemoveConst&lt;T&gt;::Type</ref>,<sp/>Ch&gt;<sp/>&gt;),(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))<sp/>operator[](T*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[<ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>];<sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberIterator<sp/>member<sp/>=<sp/>FindMember(name);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member<sp/>!=<sp/>MemberEnd())</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>member-&gt;value;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>above<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>NullValue;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NullValue;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[<ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>];<sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name))];<sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name))];<sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstMemberIterator<sp/>MemberBegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConstMemberIterator(data_.o.members);<sp/>}</highlight></codeline>
<codeline lineno="884"></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstMemberIterator<sp/>MemberEnd()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConstMemberIterator(data_.o.members<sp/>+<sp/>data_.o.size);<sp/>}</highlight></codeline>
<codeline lineno="887"></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>MemberBegin()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MemberIterator(data_.o.members);<sp/>}</highlight></codeline>
<codeline lineno="890"></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>MemberEnd()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MemberIterator(data_.o.members<sp/>+<sp/>data_.o.size);<sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(n);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstMemberIterator<sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(name.IsString());</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberIterator<sp/>member<sp/>=<sp/>MemberBegin();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>member<sp/>!=<sp/>MemberEnd();<sp/>++member)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.<ref refid="class_generic_value_1a5ff908402687e14f5f14552ec58113a4" kindref="member">StringEqual</ref>(member-&gt;name))</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>member;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/>ConstMemberIterator<sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));<sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstMemberIterator<sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));<sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(name.IsString());</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object" kindref="compound">Object</ref>&amp;<sp/>o<sp/>=<sp/>data_.o;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.size<sp/>&gt;=<sp/>o.capacity)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.capacity<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.<ref refid="struct_generic_value_1_1_object_1ab22a81c7ac57baf0d4ea343dfd6d8b33" kindref="member">capacity</ref><sp/>=<sp/>kDefaultObjectCapacity;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.members<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Member*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Malloc(o.capacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Member)));</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>oldCapacity<sp/>=<sp/>o.capacity;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.capacity<sp/>+=<sp/>(oldCapacity<sp/>+<sp/>1)<sp/>/<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>grow<sp/>by<sp/>factor<sp/>1.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.members<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Member*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Realloc(o.members,<sp/>oldCapacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Member),<sp/>o.capacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Member)));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.members[o.size].name.RawAssign(name);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.members[o.size].value.RawAssign(value);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.size++;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/>StringRefType<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(value);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/>T<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(value);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(StringRefType<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(name);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(n,<sp/>value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(StringRefType<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(name);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(n,<sp/>value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(StringRefType<sp/>name,<sp/>StringRefType<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(value);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>AddMember(StringRefType<sp/>name,<sp/>T<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(name);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(n,<sp/>value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveAllMembers()<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MemberIterator<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref><sp/>=<sp/>MemberBegin();<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref><sp/>!=<sp/>MemberEnd();<sp/>++<ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>-&gt;~Member();</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.o.size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RemoveMember(n);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RemoveMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberIterator<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref><sp/>=<sp/>FindMember(name);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>MemberEnd())<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveMember(m);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>RemoveMember(MemberIterator<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(data_.o.size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(data_.o.members<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(m<sp/>&gt;=<sp/>MemberBegin()<sp/>&amp;&amp;<sp/>m<sp/>&lt;<sp/>MemberEnd());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberIterator<sp/>last(data_.o.members<sp/>+<sp/>(data_.o.size<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.o.size<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>m<sp/>!=<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>last<sp/>one<sp/>to<sp/>this<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m<sp/>=<sp/>*last;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>one<sp/>left,<sp/>just<sp/>destroy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;~Member();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data_.o.size;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>EraseMember(ConstMemberIterator<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EraseMember(pos,<sp/>pos<sp/>+1);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberIterator<sp/>EraseMember(ConstMemberIterator<sp/><ref refid="glew_8h_1a1d06221983ffd8920e50099d6382e24f" kindref="member">first</ref>,<sp/>ConstMemberIterator<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(data_.o.size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(data_.o.members<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&gt;=<sp/>MemberBegin());</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&lt;=<sp/>last);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(last<sp/>&lt;=<sp/>MemberEnd());</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberIterator<sp/>pos<sp/>=<sp/>MemberBegin()<sp/>+<sp/>(first<sp/>-<sp/>MemberBegin());</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MemberIterator<sp/>itr<sp/>=<sp/>pos;<sp/>itr<sp/>!=<sp/>last;<sp/>++itr)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr-&gt;~Member();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(&amp;*pos,<sp/>&amp;*last,<sp/>(MemberEnd()<sp/>-<sp/>last)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Member));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.o.size<sp/>-=<sp/>(last<sp/>-<sp/><ref refid="glew_8h_1a1d06221983ffd8920e50099d6382e24f" kindref="member">first</ref>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EraseMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EraseMember(n);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EraseMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EraseMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EraseMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberIterator<sp/>m<sp/>=<sp/>FindMember(name);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>MemberEnd())<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EraseMember(m);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"></codeline>
<codeline lineno="1271"></codeline>
<codeline lineno="1272"></codeline>
<codeline lineno="1274"></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetArray()<sp/>{<sp/><sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>Size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.a.size;<sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>Capacity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.a.capacity;<sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Empty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.a.size<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear()<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data_.a.size;<sp/>++i)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.elements[i].~GenericValue();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="glew_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/>data_.a.size);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.a.elements[<ref refid="glew_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>];</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[<ref refid="glew_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>];<sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueIterator<sp/>Begin()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.a.elements;<sp/>}</highlight></codeline>
<codeline lineno="1313"></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueIterator<sp/>End()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.a.elements<sp/>+<sp/>data_.a.size;<sp/>}</highlight></codeline>
<codeline lineno="1316"></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstValueIterator<sp/>Begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).Begin();<sp/>}</highlight></codeline>
<codeline lineno="1319"></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstValueIterator<sp/>End()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).End();<sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Reserve(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/>Allocator<sp/>&amp;allocator)<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&gt;<sp/>data_.a.capacity)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.elements<sp/>=<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*)allocator.Realloc(data_.a.elements,<sp/>data_.a.capacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>),<sp/>newCapacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.capacity<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.a.size<sp/>&gt;=<sp/>data_.a.capacity)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reserve(data_.a.capacity<sp/>==<sp/>0<sp/>?<sp/>kDefaultArrayCapacity<sp/>:<sp/>(data_.a.capacity<sp/>+<sp/>(data_.a.capacity<sp/>+<sp/>1)<sp/>/<sp/>2),<sp/>allocator);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.elements[data_.a.size++].RawAssign(value);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PushBack(value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(StringRefType<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*this).template<sp/>PushBack&lt;StringRefType&gt;(value,<sp/>allocator);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1a7eb8633670d0e7df80a9fa3a508dd1d2" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>PushBack(T<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(value);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PushBack(v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PopBack()<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(!Empty());</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.elements[--data_.a.size].~GenericValue();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueIterator<sp/>Erase(ConstValueIterator<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Erase(pos,<sp/>pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueIterator<sp/>Erase(ConstValueIterator<sp/>first,<sp/>ConstValueIterator<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(data_.a.size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(data_.a.elements<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&gt;=<sp/>Begin());</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&lt;=<sp/>last);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(last<sp/>&lt;=<sp/>End());</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueIterator<sp/>pos<sp/>=<sp/>Begin()<sp/>+<sp/>(first<sp/>-<sp/>Begin());</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ValueIterator<sp/>itr<sp/>=<sp/>pos;<sp/>itr<sp/>!=<sp/>last;<sp/>++itr)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(pos,<sp/>last,<sp/>(End()<sp/>-<sp/>last)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.size<sp/>-=<sp/>(last<sp/>-<sp/><ref refid="glew_8h_1a1d06221983ffd8920e50099d6382e24f" kindref="member">first</ref>);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"></codeline>
<codeline lineno="1446"></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetInt()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(flags_<sp/>&amp;<sp/>kIntFlag);<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.i.i;<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>GetUint()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(flags_<sp/>&amp;<sp/>kUintFlag);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.u.u;<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>GetInt64()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(flags_<sp/>&amp;<sp/>kInt64Flag);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.i64;<sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>GetUint64()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(flags_<sp/>&amp;<sp/>kUint64Flag);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.u64;<sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetDouble()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsNumber());</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/>kDoubleFlag)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.d;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>type,<sp/>no<sp/>conversion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/>kIntFlag)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.i.i;<sp/></highlight><highlight class="comment">//<sp/>int<sp/>-&gt;<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/>kUintFlag)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.n.u.u;<sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>-&gt;<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/>kInt64Flag)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data_.n.i64;<sp/></highlight><highlight class="comment">//<sp/>int64_t<sp/>-&gt;<sp/>double<sp/>(may<sp/>lose<sp/>precision)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>((flags_<sp/>&amp;<sp/>kUint64Flag)<sp/>!=<sp/>0);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data_.n.u64;<sp/></highlight><highlight class="comment">//<sp/>uint64_t<sp/>-&gt;<sp/>double<sp/>(may<sp/>lose<sp/>precision)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetInt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(i);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetUint(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(u);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetInt64(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i64)<sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(i64);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetUint64(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u64)<sp/><sp/><sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(u64);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetDouble(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>(d);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"></codeline>
<codeline lineno="1471"></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>GetString()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsString());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/>kInlineStrFlag)<sp/>?<sp/>data_.ss.str<sp/>:<sp/>data_.s.str);<sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>GetStringLength()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsString());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/>kInlineStrFlag)<sp/>?<sp/>(data_.ss.GetLength())<sp/>:<sp/>data_.s.length);<sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length));<sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(StringRefType<sp/>s)<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/>SetStringRaw(s);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/>Allocator&amp;<sp/>allocator)<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();<sp/>SetStringRaw(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length),<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>s,<sp/>Allocator&amp;<sp/>allocator)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(s,<sp/><ref refid="namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e" kindref="member">internal::StrLen</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>s,<sp/>Allocator&amp;<sp/>allocator)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(s.data(),<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(s.size()),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"></codeline>
<codeline lineno="1529"></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handler&gt;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Accept(Handler&amp;<sp/>handler)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(GetType())<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087" kindref="member">kNullType</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Null();</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54" kindref="member">kFalseType</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Bool(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6" kindref="member">kTrueType</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Bool(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>:</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!handler.StartObject())</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>MemberEnd();<sp/>++<ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(m-&gt;name.IsString());<sp/></highlight><highlight class="comment">//<sp/>User<sp/>may<sp/>change<sp/>the<sp/>type<sp/>of<sp/>name<sp/>by<sp/>MemberIterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!handler.Key(m-&gt;name.GetString(),<sp/>m-&gt;name.GetStringLength(),<sp/>(m-&gt;name.flags_<sp/>&amp;<sp/>kCopyFlag)<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m-&gt;value.Accept(handler))</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.EndObject(data_.o.size);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>:</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!handler.StartArray())</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>=<sp/>data_.a.elements;<sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>!=<sp/>data_.a.elements<sp/>+<sp/>data_.a.size;<sp/>++<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>-&gt;Accept(handler))</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.EndArray(data_.a.size);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>:</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.String(GetString(),<sp/>GetStringLength(),<sp/>(flags_<sp/>&amp;<sp/>kCopyFlag)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInt())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Int(data_.n.i.i);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsUint())<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Uint(data_.n.u.u);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInt64())<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Int64(data_.n.i64);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsUint64())<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Uint64(data_.n.u64);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Double(data_.n.d);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;</highlight></codeline>
<codeline lineno="1577" refid="class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1580" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac48966386b231124da7c3fb870e237ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref><sp/>=<sp/>0x100,</highlight></codeline>
<codeline lineno="1581" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>=<sp/>0x200,</highlight></codeline>
<codeline lineno="1582" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae3fb211193e0067efaddeb5a067120fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/>=<sp/>0x400,</highlight></codeline>
<codeline lineno="1583" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a7eba561e6cc6dcd704f907c5a005f3ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/>=<sp/>0x800,</highlight></codeline>
<codeline lineno="1584" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a87c567a71dfa5a63363d82d32346884a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref><sp/>=<sp/>0x1000,</highlight></codeline>
<codeline lineno="1585" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac9200c78f749b6efaae640167a370c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref><sp/>=<sp/>0x2000,</highlight></codeline>
<codeline lineno="1586" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a70c741e7c488835892aa857f50090d7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref><sp/>=<sp/>0x4000,</highlight></codeline>
<codeline lineno="1587" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af3bf3661275a38c86addba900c52dccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref><sp/>=<sp/>0x100000,</highlight></codeline>
<codeline lineno="1588" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a10ef921aef1773bc1f88796bf1828f92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref><sp/>=<sp/>0x200000,</highlight></codeline>
<codeline lineno="1589" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae58a76d504c6a67566aebfa4a6bd2e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae58a76d504c6a67566aebfa4a6bd2e55" kindref="member">kInlineStrFlag</ref><sp/>=<sp/>0x400000,</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>flags<sp/>of<sp/>different<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a8c5507cf143edac6e50abec2d89cc40d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087" kindref="member">kNullType</ref>,</highlight></codeline>
<codeline lineno="1593" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a75dbcdbacc82f9379c602f0b6c41cf07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a75dbcdbacc82f9379c602f0b6c41cf07" kindref="member">kTrueFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6" kindref="member">kTrueType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref>,</highlight></codeline>
<codeline lineno="1594" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a66d3877b074bb1a0455a6f6d3f7f91a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a66d3877b074bb1a0455a6f6d3f7f91a3" kindref="member">kFalseFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54" kindref="member">kFalseType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref>,</highlight></codeline>
<codeline lineno="1595" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484acfe8b720220d0a2e378683367386cbaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484acfe8b720220d0a2e378683367386cbaf" kindref="member">kNumberIntFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>,</highlight></codeline>
<codeline lineno="1596" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae8c6c6286edf9c309e77af0ea0cf039c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae8c6c6286edf9c309e77af0ea0cf039c" kindref="member">kNumberUintFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>,</highlight></codeline>
<codeline lineno="1597" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ad117eb41bb8015a76aadf6149bbd8ce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ad117eb41bb8015a76aadf6149bbd8ce5" kindref="member">kNumberInt64Flag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>,</highlight></codeline>
<codeline lineno="1598" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aaa1ee6a546d4db67f4bdef41d1f54f02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aaa1ee6a546d4db67f4bdef41d1f54f02" kindref="member">kNumberUint64Flag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref>,</highlight></codeline>
<codeline lineno="1599" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a29bc91c155577923abd8f19aa050058b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a29bc91c155577923abd8f19aa050058b" kindref="member">kNumberDoubleFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>,</highlight></codeline>
<codeline lineno="1600" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ab7805b1908fd181afc8d70fe07b17e18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ab7805b1908fd181afc8d70fe07b17e18" kindref="member">kNumberAnyFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>,</highlight></codeline>
<codeline lineno="1601" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a5d26a84f26833eafd0028c0102a388a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a5d26a84f26833eafd0028c0102a388a9" kindref="member">kConstStringFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref>,</highlight></codeline>
<codeline lineno="1602" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a10c83f7f191dce81bb0273adc0d838de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a10c83f7f191dce81bb0273adc0d838de" kindref="member">kCopyStringFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref>,</highlight></codeline>
<codeline lineno="1603" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aca24fa09485fa10b17071509a985ff01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aca24fa09485fa10b17071509a985ff01" kindref="member">kShortStringFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484ae58a76d504c6a67566aebfa4a6bd2e55" kindref="member">kInlineStrFlag</ref>,</highlight></codeline>
<codeline lineno="1604" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aba5811d4baeb56dc793a6510fe28748c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484aba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>,</highlight></codeline>
<codeline lineno="1605" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af7d99965ba807c718b482a9a7fb28b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484af7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>,</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607" refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a793e0bc40e0abe1ed8bcb3e6fbba65c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a793e0bc40e0abe1ed8bcb3e6fbba65c2" kindref="member">kTypeMask</ref><sp/>=<sp/>0xFF<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitwise-and<sp/>with<sp/>mask<sp/>of<sp/>0xFF<sp/>can<sp/>be<sp/>optimized<sp/>by<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610" refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" kindref="member">kDefaultArrayCapacity</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="1611" refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" kindref="member">kDefaultObjectCapacity</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613" refid="struct_generic_value_1_1_string" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref><sp/>{</highlight></codeline>
<codeline lineno="1614" refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/><ref refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1615" refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1616" refid="struct_generic_value_1_1_string_1a3f1da673591f850e425184f2d8495d66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_string_1a3f1da673591f850e425184f2d8495d66" kindref="member">hashcode</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>detail:<sp/>ShortString<sp/>can<sp/>represent<sp/>zero-terminated<sp/>strings<sp/>up<sp/>to<sp/>MaxSize<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(excluding<sp/>the<sp/>terminating<sp/>zero)<sp/>and<sp/>store<sp/>a<sp/>value<sp/>to<sp/>determine<sp/>the<sp/>length<sp/>of<sp/>the<sp/>contained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>in<sp/>the<sp/>last<sp/>character<sp/>str[LenPos]<sp/>by<sp/>storing<sp/>&quot;MaxSize<sp/>-<sp/>length&quot;<sp/>there.<sp/>If<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>store<sp/>has<sp/>the<sp/>maximal<sp/>length<sp/>of<sp/>MaxSize<sp/>then<sp/>str[LenPos]<sp/>will<sp/>be<sp/>0<sp/>and<sp/>therefore<sp/>act<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>string<sp/>terminator<sp/>as<sp/>well.<sp/>For<sp/>getting<sp/>the<sp/>string<sp/>length<sp/>back<sp/>from<sp/>that<sp/>value<sp/>just<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;MaxSize<sp/>-<sp/>str[LenPos]&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>to<sp/>store<sp/>11-chars<sp/>strings<sp/>in<sp/>32-bit<sp/>mode<sp/>and<sp/>15-chars<sp/>strings<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>(for<sp/>`UTF8`-encoded<sp/>strings).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627" refid="struct_generic_value_1_1_short_string" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_short_string" kindref="compound">ShortString</ref><sp/>{</highlight></codeline>
<codeline lineno="1628" refid="struct_generic_value_1_1_short_string_1ad39d3dd8e26fd1e3fecd80a795d9b2d4a991735d2e27155ccabe1c657653044ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>MaxChars<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Ch),<sp/>MaxSize<sp/>=<sp/>MaxChars<sp/>-<sp/>1,<sp/>LenPos<sp/>=<sp/>MaxSize<sp/>};</highlight></codeline>
<codeline lineno="1629" refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ch<sp/>str[MaxChars];</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631" refid="struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7" kindref="member">Usable</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="glew_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MaxSize<sp/>&gt;=<sp/>len);<sp/>}</highlight></codeline>
<codeline lineno="1632" refid="struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2" kindref="member">SetLength</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="glew_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/>{<sp/>str[LenPos]<sp/>=<sp/>(Ch)(MaxSize<sp/>-<sp/><sp/>len);<sp/>}</highlight></codeline>
<codeline lineno="1633" refid="struct_generic_value_1_1_short_string_1a65bea5171312b2243a1ec70ec6fa93cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_short_string_1a65bea5171312b2243a1ec70ec6fa93cd" kindref="member">GetLength</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)(MaxSize<sp/>-<sp/><sp/>str[LenPos]);<sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>most<sp/>as<sp/>many<sp/>bytes<sp/>as<sp/>&quot;String&quot;<sp/>above<sp/>=&gt;<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>proper<sp/>binary<sp/>layout,<sp/>retrieval<sp/>of<sp/>different<sp/>integer<sp/>types<sp/>do<sp/>not<sp/>need<sp/>conversions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637" refid="union_generic_value_1_1_number" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_number" kindref="compound">Number</ref><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_ENDIAN<sp/>==<sp/>RAPIDJSON_LITTLEENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639" refid="struct_generic_value_1_1_number_1_1_i" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_number_1_1_i" kindref="compound">I</ref><sp/>{</highlight></codeline>
<codeline lineno="1640" refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1641" refid="struct_generic_value_1_1_number_1_1_i_1aefc064997f30c9c0b2bdce187d1d4cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>padding[4];</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}i;</highlight></codeline>
<codeline lineno="1643" refid="struct_generic_value_1_1_number_1_1_u" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_number_1_1_u" kindref="compound">U</ref><sp/>{</highlight></codeline>
<codeline lineno="1644" refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="1645" refid="struct_generic_value_1_1_number_1_1_u_1a9341f65c1645f24fd001a1ebf58d3c5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>padding2[4];</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}u;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_number_1_1_i" kindref="compound">I</ref><sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>padding[4];</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}i;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_number_1_1_u" kindref="compound">U</ref><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>padding2[4];</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}u;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657" refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/><ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref>;</highlight></codeline>
<codeline lineno="1658" refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref>;</highlight></codeline>
<codeline lineno="1659" refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662" refid="struct_generic_value_1_1_object" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_object" kindref="compound">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="1663" refid="struct_generic_value_1_1_object_1ab51b8366577cb12f0280e4a6d7dab926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Member*<sp/><ref refid="struct_generic_value_1_1_object_1ab51b8366577cb12f0280e4a6d7dab926" kindref="member">members</ref>;</highlight></codeline>
<codeline lineno="1664" refid="struct_generic_value_1_1_object_1a10da3d9035961100ed11f955a4afd2b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_object_1a10da3d9035961100ed11f955a4afd2b6" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1665" refid="struct_generic_value_1_1_object_1ab22a81c7ac57baf0d4ea343dfd6d8b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_object_1ab22a81c7ac57baf0d4ea343dfd6d8b33" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668" refid="struct_generic_value_1_1_array" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_array" kindref="compound">Array</ref><sp/>{</highlight></codeline>
<codeline lineno="1669" refid="struct_generic_value_1_1_array_1a0af8e50f37486f042ab19fd871d11d4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="struct_generic_value_1_1_array_1a0af8e50f37486f042ab19fd871d11d4f" kindref="member">elements</ref>;</highlight></codeline>
<codeline lineno="1670" refid="struct_generic_value_1_1_array_1a60f69b3b57b86c20c123c1b080e34bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_array_1a60f69b3b57b86c20c123c1b080e34bcc" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1671" refid="struct_generic_value_1_1_array_1a2f5dfb089ee750e9405d5adeda4df894" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_array_1a2f5dfb089ee750e9405d5adeda4df894" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674" refid="union_generic_value_1_1_data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref><sp/>{</highlight></codeline>
<codeline lineno="1675" refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref><sp/><ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1676" refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_short_string" kindref="compound">ShortString</ref><sp/><ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>;</highlight></codeline>
<codeline lineno="1677" refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_generic_value_1_1_number" kindref="compound">Number</ref><sp/><ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="1678" refid="union_generic_value_1_1_data_1a15c6847aa3272560aaff5e7ed4320a7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object" kindref="compound">Object</ref><sp/><ref refid="union_generic_value_1_1_data_1a15c6847aa3272560aaff5e7ed4320a7f" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="1679" refid="union_generic_value_1_1_data_1a1935b99b33ec9deff9f6360f8fa7b812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_array" kindref="compound">Array</ref><sp/><ref refid="union_generic_value_1_1_data_1a1935b99b33ec9deff9f6360f8fa7b812" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>this<sp/>value<sp/>as<sp/>array<sp/>with<sp/>initial<sp/>data,<sp/>without<sp/>calling<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683" refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" kindref="member">SetArrayRaw</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="glew_8h_1a0aa8cf39c79d294b1d9f4daef5020bec" kindref="member">values</ref>,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>kArrayFlag;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.elements<sp/>=<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*)allocator.Malloc(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(data_.a.elements,<sp/>values,<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.elements<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.a.size<sp/>=<sp/>data_.a.capacity<sp/>=<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695" refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" kindref="member">SetObjectRaw</ref>(Member*<sp/>members,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>kObjectFlag;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.o.members<sp/>=<sp/>(Member*)allocator.Malloc(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Member));</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(data_.o.members,<sp/>members,<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Member));</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.o.members<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.o.size<sp/>=<sp/>data_.o.capacity<sp/>=<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707" refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(StringRefType<sp/>s)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>kConstStringFlag;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.s.str<sp/>=<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.s.length<sp/>=<sp/>s.length;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714" refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" kindref="member">SetStringRaw</ref>(StringRefType<sp/>s,<sp/>Allocator&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ch*<sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ShortString::Usable(s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>kShortStringFlag;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.ss.SetLength(s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>data_.ss.str;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>kCopyStringFlag;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.s.length<sp/>=<sp/>s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>(Ch<sp/>*)allocator.Malloc((s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref><sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Ch));</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.s.str<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(str,<sp/>s,<sp/>s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Ch));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731" refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>rhs.<ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref>;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.<ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref><sp/>=<sp/>kNullFlag;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1738" refid="class_generic_value_1a5ff908402687e14f5f14552ec58113a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a5ff908402687e14f5f14552ec58113a4" kindref="member">StringEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsString());</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(rhs.IsString());</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len1<sp/>=<sp/>GetStringLength();</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len2<sp/>=<sp/>rhs.GetStringLength();</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len1<sp/>!=<sp/>len2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str1<sp/>=<sp/>GetString();</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str2<sp/>=<sp/>rhs.GetString();</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str1<sp/>==<sp/>str2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>fast<sp/>path<sp/>for<sp/>constant<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::memcmp(str1,<sp/>str2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Ch)<sp/>*<sp/>len1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753" refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="1754" refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref>;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758" refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref>;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="comment">//<sp/>GenericDocument<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"></codeline>
<codeline lineno="1771"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>MemoryPoolAllocator&lt;&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator<sp/>=<sp/>CrtAllocator&gt;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,<sp/>Allocator&gt;<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1774" refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1775" refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1776" refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Allocator<sp/><ref refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" kindref="member">AllocatorType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"></codeline>
<codeline lineno="1785" refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" kindref="member">GenericDocument</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/><ref refid="glew_8h_1a8d78e2e8a676abd547a596dd84811285" kindref="member">type</ref>,<sp/>Allocator*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stackCapacity<sp/>=<sp/>kDefaultStackCapacity,<sp/>StackAllocator*<sp/>stackAllocator<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,<sp/>Allocator&gt;(type),<sp/><sp/>allocator_(allocator),<sp/>ownAllocator_(0),<sp/>stack_(stackAllocator,<sp/>stackCapacity),<sp/>parseResult_()</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allocator_)</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_<sp/>=<sp/>allocator_<sp/>=<sp/><ref refid="rapidjson_8h_1ab9e102fa2f1a0ae4914d4dac21f690a2" kindref="member">RAPIDJSON_NEW</ref>(Allocator());</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"></codeline>
<codeline lineno="1798" refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" kindref="member">GenericDocument</ref>(Allocator*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stackCapacity<sp/>=<sp/>kDefaultStackCapacity,<sp/>StackAllocator*<sp/>stackAllocator<sp/>=<sp/>0)<sp/>:<sp/></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_(allocator),<sp/>ownAllocator_(0),<sp/>stack_(stackAllocator,<sp/>stackCapacity),<sp/>parseResult_()</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allocator_)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_<sp/>=<sp/>allocator_<sp/>=<sp/><ref refid="rapidjson_8h_1ab9e102fa2f1a0ae4914d4dac21f690a2" kindref="member">RAPIDJSON_NEW</ref>(Allocator());</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ValueType(std::forward&lt;ValueType&gt;(rhs)),<sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>cast<sp/>to<sp/>avoid<sp/>prohibited<sp/>move<sp/>from<sp/>Document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_(rhs.allocator_),</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_(rhs.ownAllocator_),</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_(<ref refid="namespacestd_1a37ba44826afa04fddf20fd70c45ac3b4" kindref="member">std::move</ref>(rhs.stack_)),</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseResult_(rhs.parseResult_)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.allocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.ownAllocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.parseResult_<sp/>=<sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref>();</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820" refid="class_generic_document_1aa9f980909298a4de32f66526484820bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1aa9f980909298a4de32f66526484820bf" kindref="member">~GenericDocument</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy();</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>operator=(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>cast<sp/>to<sp/>ValueType<sp/>is<sp/>necessary<sp/>here,<sp/>because<sp/>otherwise<sp/>it<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attempt<sp/>to<sp/>call<sp/>GenericValue&apos;s<sp/>templated<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType::operator=(std::forward&lt;ValueType&gt;(rhs));</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calling<sp/>the<sp/>destructor<sp/>here<sp/>would<sp/>prematurely<sp/>call<sp/>stack_&apos;s<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_<sp/>=<sp/>rhs.allocator_;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_<sp/>=<sp/>rhs.ownAllocator_;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_<sp/>=<sp/><ref refid="namespacestd_1a37ba44826afa04fddf20fd70c45ac3b4" kindref="member">std::move</ref>(rhs.stack_);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseResult_<sp/>=<sp/>rhs.parseResult_;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.allocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.ownAllocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.parseResult_<sp/>=<sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref>();</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"></codeline>
<codeline lineno="1854" refid="class_generic_document_1a6290e1290fad74177625af5938c0c58f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a6290e1290fad74177625af5938c0c58f" kindref="member">Swap</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">ValueType::Swap</ref>(rhs);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_.Swap(rhs.stack_);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(allocator_,<sp/>rhs.allocator_);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(ownAllocator_,<sp/>rhs.ownAllocator_);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(parseResult_,<sp/>rhs.parseResult_);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"></codeline>
<codeline lineno="1875" refid="class_generic_document_1a0d63efcc43758ac3aed77e868233369d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a0d63efcc43758ac3aed77e868233369d" kindref="member">swap</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>b)<sp/>RAPIDJSON_NOEXCEPT<sp/>{<sp/><ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Swap(b);<sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"></codeline>
<codeline lineno="1881"></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="1888" refid="class_generic_document_1afe94c0abc83a20f2d7dc1ba7677e6238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1afe94c0abc83a20f2d7dc1ba7677e6238" kindref="member">ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;SourceEncoding, Encoding, StackAllocator&gt;</ref><sp/>reader(</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_.HasAllocator()<sp/>?<sp/>&amp;stack_.GetAllocator()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref><sp/>scope(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseResult_<sp/>=<sp/>reader.template<sp/>Parse&lt;parseFlags&gt;(is,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseResult_)<sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(stack_.GetSize()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType));<sp/></highlight><highlight class="comment">//<sp/>Got<sp/>one<sp/>and<sp/>only<sp/>one<sp/>root<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType::operator=(*stack_.template<sp/>Pop&lt;ValueType&gt;(1));</highlight><highlight class="comment">//<sp/>Move<sp/>value<sp/>from<sp/>stack<sp/>to<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="1907" refid="class_generic_document_1a6e154066c6f5024b91aaab25e03700e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a6e154066c6f5024b91aaab25e03700e3" kindref="member">ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;parseFlags,<sp/>Encoding,<sp/>InputStream&gt;(is);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="1917" refid="class_generic_document_1abe07ededbe9aaceb0058e3d254892b71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1abe07ededbe9aaceb0058e3d254892b71" kindref="member">ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;kParseDefaultFlags,<sp/>Encoding,<sp/>InputStream&gt;(is);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"></codeline>
<codeline lineno="1924"></codeline>
<codeline lineno="1926"></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="1931" refid="class_generic_document_1a301f8f297a5a0da4b6be5459ad766f75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a301f8f297a5a0da4b6be5459ad766f75" kindref="member">ParseInsitu</ref>(Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;Encoding&gt;</ref><sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>(str);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;parseFlags<sp/>|<sp/>kParseInsituFlag&gt;(<ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"></codeline>
<codeline lineno="1940" refid="class_generic_document_1a81922881357539d5482d31aea14b5664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a81922881357539d5482d31aea14b5664" kindref="member">ParseInsitu</ref>(Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseInsitu&lt;kParseDefaultFlags&gt;(str);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"></codeline>
<codeline lineno="1947"></codeline>
<codeline lineno="1949"></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding&gt;</highlight></codeline>
<codeline lineno="1954" refid="class_generic_document_1aebd4e7fddd80c1e1174837aee6d2159b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1aebd4e7fddd80c1e1174837aee6d2159b" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(!(parseFlags<sp/>&amp;<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>));</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;SourceEncoding&gt;</ref><sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>(str);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;parseFlags,<sp/>SourceEncoding&gt;(<ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="1965" refid="class_generic_document_1a5e377f840009b5cee6757be29525ce0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a5e377f840009b5cee6757be29525ce0b" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"></codeline>
<codeline lineno="1972" refid="class_generic_document_1a49ae6de6fd0bc820d9864a106c10b4da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a49ae6de6fd0bc820d9864a106c10b4da" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1976"></codeline>
<codeline lineno="1979"></codeline>
<codeline lineno="1981" refid="class_generic_document_1afe0c87d9fc13a78597360e0646479419" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1afe0c87d9fc13a78597360e0646479419" kindref="member">HasParseError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parseResult_.IsError();<sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984" refid="class_generic_document_1aab4771355aa3c6e5368da3ae36f38cc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref><sp/><ref refid="class_generic_document_1aab4771355aa3c6e5368da3ae36f38cc1" kindref="member">GetParseError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parseResult_.Code();<sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987" refid="class_generic_document_1a2db6ad11d157342f725470fb898b6712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a2db6ad11d157342f725470fb898b6712" kindref="member">GetErrorOffset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parseResult_.Offset();<sp/>}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"></codeline>
<codeline lineno="1992" refid="class_generic_document_1aa4609d6b19f86aec1a6b96edf2c27686" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Allocator&amp;<sp/><ref refid="class_generic_document_1aa4609d6b19f86aec1a6b96edf2c27686" kindref="member">GetAllocator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(allocator_);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*allocator_;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998" refid="class_generic_document_1aa99f03016f4907332fcf70aadb645194" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1aa99f03016f4907332fcf70aadb645194" kindref="member">GetStackCapacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack_.GetCapacity();<sp/>}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>stack<sp/>on<sp/>any<sp/>exit<sp/>from<sp/>ParseStream,<sp/>e.g.<sp/>due<sp/>to<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002" refid="struct_generic_document_1_1_clear_stack_on_exit" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref><sp/>{</highlight></codeline>
<codeline lineno="2003" refid="struct_generic_document_1_1_clear_stack_on_exit_1a99ba88d8b8ae15ccf5c979fff80c713a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a99ba88d8b8ae15ccf5c979fff80c713a" kindref="member">ClearStackOnExit</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>d)<sp/>:<sp/>d_(d)<sp/>{}</highlight></codeline>
<codeline lineno="2004" refid="struct_generic_document_1_1_clear_stack_on_exit_1aa51248f341ec130a29e4f8c3705c9312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1aa51248f341ec130a29e4f8c3705c9312" kindref="member">~ClearStackOnExit</ref>()<sp/>{<sp/>d_.ClearStack();<sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>&amp;);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>&amp;);</highlight></codeline>
<codeline lineno="2008" refid="struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3" kindref="member">d_</ref>;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callers<sp/>of<sp/>the<sp/>following<sp/>private<sp/>Handler<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012" refid="class_generic_document_1a22b985b0f7f78ef254a566655ee0550f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_reader" kindref="compound">GenericReader</ref>;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013" refid="class_generic_document_1a899449e1a645b5e377af059fb61113d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>deep<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>Handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016" refid="class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2" kindref="member">Null</ref>()<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2017" refid="class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(b);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2018" refid="class_generic_document_1a8cc986266becaa268474c607489745c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a8cc986266becaa268474c607489745c7" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2019" refid="class_generic_document_1a530dd899a04a00ba74f52507b488d2c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a530dd899a04a00ba74f52507b488d2c1" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2020" refid="class_generic_document_1a934b1b7a7ed89917615a5410db77a942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a934b1b7a7ed89917615a5410db77a942" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2021" refid="class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2022" refid="class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(d);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024" refid="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(str,<sp/>length,<sp/>GetAllocator());</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(str,<sp/>length);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032" refid="class_generic_document_1abb1417fde52cc34cb340e3b50a3295da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1abb1417fde52cc34cb340e3b50a3295da" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2034" refid="class_generic_document_1a600d0950baabbcab11197cacb1459c7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a600d0950baabbcab11197cacb1459c7a" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref>(str,<sp/>length,<sp/>copy);<sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036" refid="class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)<sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_generic_member" kindref="compound">ValueType::Member</ref>*<sp/>members<sp/>=<sp/>stack_.template<sp/>Pop&lt;typename<sp/>ValueType::Member&gt;(memberCount);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_.template<sp/>Top&lt;ValueType&gt;()-&gt;<ref refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" kindref="member">SetObjectRaw</ref>(members,<sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)memberCount,<sp/>GetAllocator());</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042" refid="class_generic_document_1ae12c513c61745ae731a47b1ca33db063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ae12c513c61745ae731a47b1ca33db063" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2044" refid="class_generic_document_1a14097c833bed1a9c7be064ea619c887f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a14097c833bed1a9c7be064ea619c887f" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)<sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType*<sp/>elements<sp/>=<sp/>stack_.template<sp/>Pop&lt;ValueType&gt;(elementCount);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_.template<sp/>Top&lt;ValueType&gt;()-&gt;<ref refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" kindref="member">SetArrayRaw</ref>(elements,<sp/>elementCount,<sp/>GetAllocator());</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae" kindref="member">GenericDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056" refid="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" kindref="member">ClearStack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree)</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stack_.GetSize()<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>assumes<sp/>all<sp/>elements<sp/>in<sp/>stack<sp/>array<sp/>are<sp/>GenericValue<sp/>(Member<sp/>is<sp/>actually<sp/>2<sp/>GenericValue<sp/>objects)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stack_.template<sp/>Pop&lt;ValueType&gt;(1))-&gt;~<ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>();</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_.Clear();</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_.ShrinkToFit();</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065" refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" kindref="member">Destroy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>(ownAllocator_);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069" refid="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kDefaultStackCapacity<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="2070" refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Allocator*<sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>;</highlight></codeline>
<codeline lineno="2071" refid="class_generic_document_1ada153f6865201106b3a753861c870266" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Allocator*<sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>;</highlight></codeline>
<codeline lineno="2072" refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StackAllocator&gt;</ref><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>;</highlight></codeline>
<codeline lineno="2073" refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077" refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/><ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref>;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined<sp/>here<sp/>due<sp/>to<sp/>the<sp/>dependency<sp/>on<sp/>GenericDocument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083" refid="class_generic_value_1a5161c0c98ba9144c50a38acde28a5ede" refkind="member"><highlight class="normal"><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue&lt;Encoding,Allocator&gt;::GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/>Allocator&amp;<sp/>allocator)</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rhs.GetType())<sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>:</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>:<sp/>{<sp/></highlight><highlight class="comment">//<sp/>perform<sp/>deep<sp/>copy<sp/>via<sp/>SAX<sp/>Handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator&gt;</ref><sp/>d(&amp;allocator);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.Accept(d);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(*d.<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Pop&lt;GenericValue&gt;(1));</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>:</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref><sp/>==<sp/><ref refid="class_generic_value_1a18e5d55a4becf92f69cb5cd977c8d484a5d26a84f26833eafd0028c0102a388a9" kindref="member">kConstStringFlag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref><sp/>=<sp/>rhs.<ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref>;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref><sp/><sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs.GetString(),<sp/>rhs.GetStringLength()),<sp/>allocator);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>kNumberType,<sp/>kTrueType,<sp/>kFalseType,<sp/>kNullType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref><sp/>=<sp/>rhs.<ref refid="class_generic_value_1ad0f9ce0bc0d1714678a77a2295da420c" kindref="member">flags_</ref>;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref><sp/><sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>||<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_DOCUMENT_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/rapidjson/document.h"/>
  </compounddef>
</doxygen>
