<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_n_c_c_a_bin_mesh_8cpp" kind="file" language="C++">
    <compoundname>NCCABinMesh.cpp</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes refid="_n_c_c_a_bin_mesh_8h" local="yes">NCCABinMesh.h</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="4967">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="4968" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4975" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
      </node>
      <node id="4989">
        <label>Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="4987" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4990" relation="include">
        </childnode>
      </node>
      <node id="4993">
        <label>cstdint</label>
      </node>
      <node id="4976">
        <label>QGLContext</label>
      </node>
      <node id="4979">
        <label>Vec3.h</label>
        <link refid="_vec3_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
      </node>
      <node id="4970">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
      </node>
      <node id="4987">
        <label>string</label>
      </node>
      <node id="4963">
        <label>NCCABinMesh.cpp</label>
        <link refid="NCCABinMesh.cpp"/>
        <childnode refid="4964" relation="include">
        </childnode>
        <childnode refid="4965" relation="include">
        </childnode>
        <childnode refid="4966" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
      </node>
      <node id="4969">
        <label>stddef.h</label>
      </node>
      <node id="4986">
        <label>fstream</label>
      </node>
      <node id="4968">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="4969" relation="include">
        </childnode>
        <childnode refid="4970" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
      </node>
      <node id="4966">
        <label>NCCABinMesh.h</label>
        <link refid="_n_c_c_a_bin_mesh_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4977" relation="include">
        </childnode>
        <childnode refid="4978" relation="include">
        </childnode>
        <childnode refid="4985" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
        <childnode refid="4981" relation="include">
        </childnode>
        <childnode refid="4987" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
      </node>
      <node id="4973">
        <label>GL/glu.h</label>
      </node>
      <node id="4971">
        <label>limits.h</label>
      </node>
      <node id="4981">
        <label>Vec4.h</label>
        <link refid="_vec4_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
      </node>
      <node id="4983">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
      </node>
      <node id="4972">
        <label>wchar.h</label>
      </node>
      <node id="4990">
        <label>Colour.h</label>
        <link refid="_colour_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
      </node>
      <node id="4988">
        <label>Texture.h</label>
        <link refid="_texture_8h"/>
        <childnode refid="4989" relation="include">
        </childnode>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4987" relation="include">
        </childnode>
      </node>
      <node id="4992">
        <label>vector</label>
      </node>
      <node id="4980">
        <label>array</label>
      </node>
      <node id="4985">
        <label>RibExport.h</label>
        <link refid="_rib_export_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4986" relation="include">
        </childnode>
        <childnode refid="4987" relation="include">
        </childnode>
      </node>
      <node id="4975">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="4991">
        <label>NGLassert.h</label>
        <link refid="_n_g_lassert_8h"/>
      </node>
      <node id="4965">
        <label>iostream</label>
      </node>
      <node id="4974">
        <label>GL/gl.h</label>
      </node>
      <node id="4964">
        <label>cstring</label>
      </node>
      <node id="4982">
        <label>Vec2.h</label>
        <link refid="_vec2_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
      </node>
      <node id="4984">
        <label>memory</label>
      </node>
      <node id="4978">
        <label>BBox.h</label>
        <link refid="_b_box_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="4981" relation="include">
        </childnode>
        <childnode refid="4983" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
      </node>
      <node id="4977">
        <label>AbstractMesh.h</label>
        <link refid="_abstract_mesh_8h"/>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4978" relation="include">
        </childnode>
        <childnode refid="4985" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="4981" relation="include">
        </childnode>
        <childnode refid="4983" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4987" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>implementation files for NCCABinMesh class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Jon<sp/>Macey</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_c_c_a_bin_mesh_8h" kindref="compound">NCCABinMesh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classngl_1_1_n_c_c_a_bin_mesh_1a2e5874bc036178bb25267a7a80b594ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_n_c_c_a_bin_mesh_1a2e5874bc036178bb25267a7a80b594ee" kindref="member">NCCABinMesh::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_fname,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_calcBB)<sp/>noexcept</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>a<sp/>file<sp/>stream<sp/>for<sp/>ip<sp/>in<sp/>binary<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>std::fstream<sp/>file;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>file.open(_fname.c_str(),<ref refid="glew_8h_1a83ad0ee7f1e06b59c90271716e689080" kindref="member">std::ios::in</ref><sp/>|<sp/><ref refid="glew_8h_1a0ace813ee1f7020974174eb65d53ff0d" kindref="member">std::ios::binary</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>it<sp/>worked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.is_open())</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;problems<sp/>Opening<sp/>File<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_fname&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>read<sp/>in<sp/>the<sp/>header<sp/>and<sp/>see<sp/>if<sp/>the<sp/>file<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>header[9];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>file.read(header,8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>header[8]=0;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>strcmp<sp/>we<sp/>need<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>basically<sp/>I<sp/>used<sp/>the<sp/>magick<sp/>string<sp/>ngl::bin<sp/>(I<sp/>presume<sp/>unique<sp/>in<sp/>files!)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>test<sp/>against<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(header,</highlight><highlight class="stringliteral">&quot;ngl::bin&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>best<sp/>close<sp/>the<sp/>file<sp/>and<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;this<sp/>is<sp/>not<sp/>an<sp/>ngl::bin<sp/>file<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;<sp/>(&amp;m_nVerts),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_nNorm),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_nTex),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_nFaces),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>the<sp/>x,y,z<sp/>for<sp/>the<sp/>center<sp/>could<sp/>re-calc<sp/>but<sp/>why<sp/>bother</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_center.m_x),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_center.m_y),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_center.m_z),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>if<sp/>texture<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_texture),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_maxX),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_maxY),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_maxZ),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_minX),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_minY),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_minZ),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>how<sp/>our<sp/>data<sp/>is<sp/>packed<sp/>for<sp/>the<sp/>VBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<sp/><sp/>m_dataPackType),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref>));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<sp/><sp/>m_indexSize),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<sp/><sp/>m_bufferPackSize),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;size),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>some<sp/>memory<sp/>to<sp/>read<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::unique_ptr<sp/>&lt;Real&gt;vboMem(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>[size]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>read<sp/>into<sp/>this<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast&lt;char<sp/>*&gt;(vboMem.get()),size);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>need<sp/>the<sp/>index<sp/>arrays<sp/>so<sp/>first<sp/>find<sp/>how<sp/>big</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;size),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>re-size<sp/>our<sp/>std::vector<sp/>so<sp/>add<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>m_outIndices.resize(size);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>loop<sp/>and<sp/>copy<sp/>the<sp/>values<sp/>in<sp/>from<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>file.read(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;m_outIndices[i]),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>were<sp/>done<sp/>with<sp/>the<sp/>file<sp/>lets<sp/>close<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>now<sp/>allocate<sp/>this<sp/>as<sp/>a<sp/>vbo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a1b33d322b89d94ad4938461db0a0424a" kindref="member">glGenBuffers</ref>(1,<sp/>&amp;m_vboBuffers);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" kindref="member">glBindBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/>m_vboBuffers);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a9419a03f5c46e2758f884e9c56d92b6a" kindref="member">glBufferData</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/>static_cast&lt;GLsizeiptr&gt;<sp/>(m_indexSize*m_bufferPackSize*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref>)),<sp/>vboMem.get(),<sp/><ref refid="glew_8h_1ac1915ebc9c952b9e7140f4bcc78319a6" kindref="member">GL_DYNAMIC_DRAW</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>BBox<sp/>for<sp/>the<sp/>obj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_calcBB)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ext.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_b_box" kindref="compound">BBox</ref>(m_minX,m_maxX,m_minY,m_maxY,m_minZ,m_maxZ)<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>m_vbo=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classngl_1_1_n_c_c_a_bin_mesh_1a4f02741c8063827f80be061769ba1fe5" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_n_c_c_a_bin_mesh_1a1dc0f6e7f7508630cd10191fdd835a43" kindref="member">NCCABinMesh::NCCABinMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fname<sp/>)<sp/><sp/>noexcept:<ref refid="classngl_1_1_abstract_mesh" kindref="compound">AbstractMesh</ref>()</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>m_vbo=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>m_ext=0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>m_texture<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>load(_fname);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classngl_1_1_n_c_c_a_bin_mesh_1ae1884d8f1949b31f4d10752d518e4df1" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_n_c_c_a_bin_mesh_1a1dc0f6e7f7508630cd10191fdd835a43" kindref="member">NCCABinMesh::NCCABinMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fname,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_texName<sp/><sp/><sp/>)<sp/>noexcept:<ref refid="classngl_1_1_abstract_mesh" kindref="compound">AbstractMesh</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>m_vbo=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>m_ext=0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>load(_fname);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>loadTexture(_texName);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>m_texture<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classngl_1_1_n_c_c_a_bin_mesh_1a79e26e8148d2413548984c6d309f88cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_n_c_c_a_bin_mesh_1a79e26e8148d2413548984c6d309f88cf" kindref="member">NCCABinMesh::save</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fname)<sp/>noexcept</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aecd194e72054c0ba2a89f606368af14a" kindref="member">AbstractMesh::saveNCCABinaryMesh</ref>(_fname);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/></highlight><highlight class="comment">//end<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/NCCABinMesh.cpp"/>
  </compounddef>
</doxygen>
