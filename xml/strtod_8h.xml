<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="strtod_8h" kind="file" language="C++">
    <compoundname>strtod.h</compoundname>
    <includes refid="rapidjson_8h" local="yes">../rapidjson.h</includes>
    <includes refid="ieee754_8h" local="yes">ieee754.h</includes>
    <includes refid="biginteger_8h" local="yes">biginteger.h</includes>
    <includes refid="diyfp_8h" local="yes">diyfp.h</includes>
    <includes refid="pow10_8h" local="yes">pow10.h</includes>
    <includedby refid="reader_8h" local="yes">reader.h</includedby>
    <incdepgraph>
      <node id="6358">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
      </node>
      <node id="6354">
        <label>cassert</label>
      </node>
      <node id="6357">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
      </node>
      <node id="6359">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
      </node>
      <node id="6355">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
      </node>
      <node id="6352">
        <label>cstdlib</label>
      </node>
      <node id="6351">
        <label>../rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="6352" relation="include">
        </childnode>
        <childnode refid="6353" relation="include">
        </childnode>
        <childnode refid="6354" relation="include">
        </childnode>
        <childnode refid="6355" relation="include">
        </childnode>
        <childnode refid="6356" relation="include">
        </childnode>
      </node>
      <node id="6356">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
      </node>
      <node id="6360">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="6351" relation="include">
        </childnode>
      </node>
      <node id="6350">
        <label>strtod.h</label>
        <link refid="strtod.h"/>
        <childnode refid="6351" relation="include">
        </childnode>
        <childnode refid="6357" relation="include">
        </childnode>
        <childnode refid="6358" relation="include">
        </childnode>
        <childnode refid="6359" relation="include">
        </childnode>
        <childnode refid="6360" relation="include">
        </childnode>
      </node>
      <node id="6353">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6364">
        <label>ShaderLib.cpp</label>
        <link refid="_shader_lib_8cpp"/>
      </node>
      <node id="6362">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="6363" relation="include">
        </childnode>
      </node>
      <node id="6365">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
      </node>
      <node id="6363">
        <label>document.h</label>
        <link refid="document_8h"/>
        <childnode refid="6364" relation="include">
        </childnode>
        <childnode refid="6365" relation="include">
        </childnode>
      </node>
      <node id="6361">
        <label>strtod.h</label>
        <link refid="strtod.h"/>
        <childnode refid="6362" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceinternal">internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_STRTOD_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_STRTOD_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../rapidjson.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ieee754_8h" kindref="compound">ieee754.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="biginteger_8h" kindref="compound">biginteger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diyfp_8h" kindref="compound">diyfp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pow10_8h" kindref="compound">pow10.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d" kindref="member">FastPath</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>significand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp<sp/>&lt;<sp/>-308)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>significand<sp/>*<sp/><ref refid="namespaceinternal_1af01c41d045d596e2f8d1888cf6fbecb6" kindref="member">internal::Pow10</ref>(exp);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>significand<sp/>/<sp/><ref refid="namespaceinternal_1af01c41d045d596e2f8d1888cf6fbecb6" kindref="member">internal::Pow10</ref>(-exp);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespaceinternal_1a9e5fac4695310f09892fe52b1d24ab19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a9e5fac4695310f09892fe52b1d24ab19" kindref="member">StrtodNormalPrecision</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>-308)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>expSum<sp/>&lt;<sp/>-308,<sp/>making<sp/>Pow10(p)<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d" kindref="member">FastPath</ref>(d,<sp/>-308);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d" kindref="member">FastPath</ref>(d,<sp/>p<sp/>+<sp/>308);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d" kindref="member">FastPath</ref>(d,<sp/>p);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48" refid="namespaceinternal_1ace304441347098a4953ea99f50805da9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceinternal_1ace304441347098a4953ea99f50805da9" kindref="member">Min3</ref>(T<sp/><ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/>T<sp/><ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref>,<sp/>T<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref><sp/>=<sp/><ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>b)<sp/>m<sp/>=<sp/><ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>c)<sp/>m<sp/>=<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a11941354c1d09e70ec63bde35fc79d4f" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespaceinternal_1a190f9c286df64526a7e3550528ed6b02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a190f9c286df64526a7e3550528ed6b02" kindref="member">CheckWithinHalfULP</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a7b01aaccb6b1691185992154f99088cb" kindref="member">b</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_big_integer" kindref="compound">BigInteger</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dExp)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_double" kindref="compound">Double</ref><sp/>db(b);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>bInt<sp/>=<sp/>db.<ref refid="classinternal_1_1_double_1a96c5e0f06551e83565b5097950d30e32" kindref="member">IntegerSignificand</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bExp<sp/>=<sp/>db.<ref refid="classinternal_1_1_double_1a8e16ee31d521fb56f0b98be427a9d47e" kindref="member">IntegerExponent</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hExp<sp/>=<sp/>bExp<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dS_Exp2<sp/>=<sp/>0,<sp/>dS_Exp5<sp/>=<sp/>0,<sp/>bS_Exp2<sp/>=<sp/>0,<sp/>bS_Exp5<sp/>=<sp/>0,<sp/>hS_Exp2<sp/>=<sp/>0,<sp/>hS_Exp5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>for<sp/>decimal<sp/>exponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dExp<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS_Exp2<sp/>+=<sp/>dExp;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS_Exp5<sp/>+=<sp/>dExp;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bS_Exp2<sp/>-=<sp/>dExp;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bS_Exp5<sp/>-=<sp/>dExp;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hS_Exp2<sp/>-=<sp/>dExp;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hS_Exp5<sp/>-=<sp/>dExp;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>for<sp/>binary<sp/>exponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bExp<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bS_Exp2<sp/>+=<sp/>bExp;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS_Exp2<sp/>-=<sp/>bExp;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hS_Exp2<sp/>-=<sp/>bExp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>for<sp/>half<sp/>ulp<sp/>exponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hExp<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hS_Exp2<sp/>+=<sp/>hExp;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dS_Exp2<sp/>-=<sp/>hExp;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bS_Exp2<sp/>-=<sp/>hExp;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>common<sp/>power<sp/>of<sp/>two<sp/>factor<sp/>from<sp/>all<sp/>three<sp/>scaled<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>common_Exp2<sp/>=<sp/><ref refid="namespaceinternal_1ace304441347098a4953ea99f50805da9" kindref="member">Min3</ref>(dS_Exp2,<sp/>bS_Exp2,<sp/>hS_Exp2);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>dS_Exp2<sp/>-=<sp/>common_Exp2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>bS_Exp2<sp/>-=<sp/>common_Exp2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>hS_Exp2<sp/>-=<sp/>common_Exp2;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_big_integer" kindref="compound">BigInteger</ref><sp/>dS<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>dS.<ref refid="classinternal_1_1_big_integer_1a98a13f169c27d1acfa57054f37c61763" kindref="member">MultiplyPow5</ref>(static_cast&lt;unsigned&gt;(dS_Exp5))<sp/>&lt;&lt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dS_Exp2);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_big_integer" kindref="compound">BigInteger</ref><sp/>bS(bInt);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>bS.<ref refid="classinternal_1_1_big_integer_1a98a13f169c27d1acfa57054f37c61763" kindref="member">MultiplyPow5</ref>(static_cast&lt;unsigned&gt;(bS_Exp5))<sp/>&lt;&lt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bS_Exp2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_big_integer" kindref="compound">BigInteger</ref><sp/>hS(1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>hS.<ref refid="classinternal_1_1_big_integer_1a98a13f169c27d1acfa57054f37c61763" kindref="member">MultiplyPow5</ref>(static_cast&lt;unsigned&gt;(hS_Exp5))<sp/>&lt;&lt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hS_Exp2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_big_integer" kindref="compound">BigInteger</ref><sp/>delta(0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>dS.<ref refid="classinternal_1_1_big_integer_1a5741304ce36392adeef716e78b384b61" kindref="member">Difference</ref>(bS,<sp/>&amp;delta);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta.<ref refid="classinternal_1_1_big_integer_1afd8b15480df5003ee6b6e1b8ecbf5f45" kindref="member">Compare</ref>(hS);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespaceinternal_1a598b2d2f85130bff3c3942e4750b9185" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a598b2d2f85130bff3c3942e4750b9185" kindref="member">StrtodFast</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>fast<sp/>path<sp/>for<sp/>string-to-double<sp/>conversion<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>http://www.exploringbinary.com/fast-path-decimal-to-floating-point-conversion/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&gt;<sp/>22<sp/><sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>22<sp/>+<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>Path<sp/>Cases<sp/>In<sp/>Disguise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>*=<sp/><ref refid="namespaceinternal_1af01c41d045d596e2f8d1888cf6fbecb6" kindref="member">internal::Pow10</ref>(p<sp/>-<sp/>22);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>-22<sp/>&amp;&amp;<sp/>p<sp/>&lt;=<sp/>22<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>9007199254740991.0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>2^53<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result<sp/>=<sp/><ref refid="namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d" kindref="member">FastPath</ref>(d,<sp/>p);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>an<sp/>approximation<sp/>and<sp/>see<sp/>if<sp/>it<sp/>is<sp/>within<sp/>1/2<sp/>ULP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="namespaceinternal_1a8861eacf25d2024c832dfa611407d25a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a8861eacf25d2024c832dfa611407d25a" kindref="member">StrtodDiyFp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>decimals,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimalPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>significand<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^64<sp/>-<sp/>1<sp/>=<sp/>18446744073709551615,<sp/>1844674407370955161<sp/>=<sp/>0x1999999999999999<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(significand<sp/><sp/>&gt;<sp/><sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x19999999,<sp/>0x99999999)<sp/>||</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(significand<sp/>==<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x19999999,<sp/>0x99999999)<sp/>&amp;&amp;<sp/>decimals[i]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>significand<sp/>=<sp/>significand<sp/>*<sp/>10u<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(decimals[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>length<sp/>&amp;&amp;<sp/>decimals[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>Rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>significand++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>length<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kUlpShift<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kUlp<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>kUlpShift;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>(remaining<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>kUlp<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>(significand,<sp/>0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v.<ref refid="structinternal_1_1_diy_fp_1adae1948b1bb65d950cd3801a4a2bb7fd" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;=<sp/>-v.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dExp<sp/>=<sp/>(<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>)decimalPosition<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)i<sp/>+<sp/>exp;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actualExp;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref><sp/>cachedPower<sp/>=<sp/><ref refid="namespaceinternal_1a74b8503d044bf6c0a5e90c5bea3aba42" kindref="member">GetCachedPower10</ref>(dExp,<sp/>&amp;actualExp);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actualExp<sp/>!=<sp/>dExp)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref><sp/>kPow10[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xa0000000,<sp/>00000000),<sp/>-60),<sp/><sp/></highlight><highlight class="comment">//<sp/>10^1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xc8000000,<sp/>00000000),<sp/>-57),<sp/><sp/></highlight><highlight class="comment">//<sp/>10^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xfa000000,<sp/>00000000),<sp/>-54),<sp/><sp/></highlight><highlight class="comment">//<sp/>10^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x9c400000,<sp/>00000000),<sp/>-50),<sp/><sp/></highlight><highlight class="comment">//<sp/>10^4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xc3500000,<sp/>00000000),<sp/>-47),<sp/><sp/></highlight><highlight class="comment">//<sp/>10^5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xf4240000,<sp/>00000000),<sp/>-44),<sp/><sp/></highlight><highlight class="comment">//<sp/>10^6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref>(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x98968000,<sp/>00000000),<sp/>-40)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>10^7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>adjustment<sp/>=<sp/>dExp<sp/>-<sp/>actualExp<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(adjustment<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>adjustment<sp/>&lt;<sp/>7);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>*<sp/>kPow10[adjustment];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>+<sp/>static_cast&lt;unsigned&gt;(adjustment)&gt;<sp/>19u)<sp/></highlight><highlight class="comment">//<sp/>has<sp/>more<sp/>digits<sp/>than<sp/>decimal<sp/>digits<sp/>in<sp/>64-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>kUlp<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>*<sp/>cachedPower;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>kUlp<sp/>+<sp/>(error<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldExp<sp/>=<sp/>v.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v.<ref refid="structinternal_1_1_diy_fp_1adae1948b1bb65d950cd3801a4a2bb7fd" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;=<sp/>oldExp<sp/>-<sp/>v.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>effectiveSignificandSize<sp/>=<sp/><ref refid="classinternal_1_1_double_1a980c26d006068b23406805e9b0e02588" kindref="member">Double::EffectiveSignificandSize</ref>(64<sp/>+<sp/>v.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>precisionSize<sp/>=<sp/>64<sp/>-<sp/>effectiveSignificandSize;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precisionSize<sp/>+<sp/>kUlpShift<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>scaleExp<sp/>=<sp/>(precisionSize<sp/>+<sp/>kUlpShift)<sp/>-<sp/>63;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="structinternal_1_1_diy_fp_1a09b9217a86e8a2e6aa8d2d48fc351008" kindref="member">f</ref><sp/>&gt;&gt;=<sp/>scaleExp;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref><sp/>+=<sp/>scaleExp;<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>(error<sp/>&gt;&gt;<sp/>scaleExp)<sp/>+<sp/>1<sp/>+<sp/>static_cast&lt;int&gt;(kUlp);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precisionSize<sp/>-=<sp/>scaleExp;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_diy_fp" kindref="compound">DiyFp</ref><sp/>rounded(v.<ref refid="structinternal_1_1_diy_fp_1a09b9217a86e8a2e6aa8d2d48fc351008" kindref="member">f</ref><sp/>&gt;&gt;<sp/>precisionSize,<sp/>v.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref><sp/>+<sp/>static_cast&lt;int&gt;(precisionSize));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>precisionBits<sp/>=<sp/>(v.<ref refid="structinternal_1_1_diy_fp_1a09b9217a86e8a2e6aa8d2d48fc351008" kindref="member">f</ref><sp/>&amp;<sp/>((<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(1)<sp/>&lt;&lt;<sp/>precisionSize)<sp/>-<sp/>1))<sp/>*<sp/>kUlp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>halfWay<sp/>=<sp/>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(1)<sp/>&lt;&lt;<sp/>(precisionSize<sp/>-<sp/>1))<sp/>*<sp/>kUlp;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precisionBits<sp/>&gt;=<sp/>halfWay<sp/>+<sp/>static_cast&lt;unsigned&gt;(error))<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounded.<ref refid="structinternal_1_1_diy_fp_1a09b9217a86e8a2e6aa8d2d48fc351008" kindref="member">f</ref>++;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rounded.<ref refid="structinternal_1_1_diy_fp_1a09b9217a86e8a2e6aa8d2d48fc351008" kindref="member">f</ref><sp/>&amp;<sp/>(<ref refid="structinternal_1_1_diy_fp_1a43ea451ce20095b1ff53cccf132ca15f" kindref="member">DiyFp::kDpHiddenBit</ref><sp/>&lt;&lt;<sp/>1))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>rounding<sp/>overflows<sp/>mantissa<sp/>(issue<sp/>#340)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounded.<ref refid="structinternal_1_1_diy_fp_1a09b9217a86e8a2e6aa8d2d48fc351008" kindref="member">f</ref><sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounded.<ref refid="structinternal_1_1_diy_fp_1afa9db335eeb61c7f966d888d89b1e6f2" kindref="member">e</ref>++;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>rounded.<ref refid="structinternal_1_1_diy_fp_1a9bbdcfcf5d1b3a7b16a8f5f860d74038" kindref="member">ToDouble</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>halfWay<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(error)<sp/>&gt;=<sp/>precisionBits<sp/>||<sp/>precisionBits<sp/>&gt;=<sp/>halfWay<sp/>+<sp/>static_cast&lt;unsigned&gt;(error);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="namespaceinternal_1a21546973704caf6e4c8b0d4869a614a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a21546973704caf6e4c8b0d4869a614a6" kindref="member">StrtodBigInteger</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>approx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>decimals,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimalPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_big_integer" kindref="compound">BigInteger</ref><sp/>dInt(decimals,<sp/>length);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dExp<sp/>=<sp/>(<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>)decimalPosition<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)length<sp/>+<sp/>exp;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_double" kindref="compound">Double</ref><sp/><ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>(approx);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/><ref refid="namespaceinternal_1a190f9c286df64526a7e3550528ed6b02" kindref="member">CheckWithinHalfULP</ref>(a.<ref refid="classinternal_1_1_double_1af35ab8a9e1ee41b1fd8a97d5899cfa1d" kindref="member">Value</ref>(),<sp/>dInt,<sp/>dExp);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classinternal_1_1_double_1af35ab8a9e1ee41b1fd8a97d5899cfa1d" kindref="member">Value</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>half<sp/>ULP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>towards<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.<ref refid="classinternal_1_1_double_1a8c3f5cf8152af8588d32530238c35aad" kindref="member">Significand</ref>()<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classinternal_1_1_double_1a3da449454b6b7e7108ed1b9a00625b68" kindref="member">NextPositiveDouble</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classinternal_1_1_double_1af35ab8a9e1ee41b1fd8a97d5899cfa1d" kindref="member">Value</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>adjustment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classinternal_1_1_double_1a3da449454b6b7e7108ed1b9a00625b68" kindref="member">NextPositiveDouble</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="namespaceinternal_1a899ff5a0c5f9b203d720bb6f5631ed10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a899ff5a0c5f9b203d720bb6f5631ed10" kindref="member">StrtodFullPrecision</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa5367c14d90f462230c2611b81b41d23" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>decimals,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a921fa83f7755f0139c84ba1831417a2e" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimalPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(d<sp/>&gt;=<sp/>0.0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(length<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceinternal_1a598b2d2f85130bff3c3942e4750b9185" kindref="member">StrtodFast</ref>(d,<sp/>p,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a5fb5836a37f7607602a16ad733ed6357" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trim<sp/>leading<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*decimals<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length--;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimals++;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimalPosition--;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trim<sp/>trailing<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(decimals[length<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length--;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimalPosition--;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp++;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trim<sp/>right-most<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMaxDecimalDigit<sp/>=<sp/>780;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)length<sp/>&gt;<sp/>kMaxDecimalDigit)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>(length)<sp/>-<sp/>kMaxDecimalDigit);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimalPosition<sp/>-=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(delta);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>kMaxDecimalDigit;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>too<sp/>small,<sp/>underflow<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(length)<sp/>+<sp/>exp<sp/>&lt;<sp/>-324)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceinternal_1a8861eacf25d2024c832dfa611407d25a" kindref="member">StrtodDiyFp</ref>(decimals,<sp/>length,<sp/>decimalPosition,<sp/>exp,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>approximation<sp/>from<sp/>StrtodDiyFp<sp/>and<sp/>make<sp/>adjustment<sp/>with<sp/>BigInteger<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a21546973704caf6e4c8b0d4869a614a6" kindref="member">StrtodBigInteger</ref>(result,<sp/>decimals,<sp/>length,<sp/>decimalPosition,<sp/>exp);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_STRTOD_</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/rapidjson/internal/strtod.h"/>
  </compounddef>
</doxygen>
