<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_v_a_o_primitives_8cpp" kind="file" language="C++">
    <compoundname>VAOPrimitives.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdlib</includes>
    <includes refid="_v_a_o_primitives_8h" local="yes">VAOPrimitives.h</includes>
    <includes refid="_util_8h" local="yes">Util.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="_v_a_o_factory_8h" local="yes">VAOFactory.h</includes>
    <includes refid="_simple_v_a_o_8h" local="yes">SimpleVAO.h</includes>
    <incdepgraph>
      <node id="6795">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="6796" relation="include">
        </childnode>
        <childnode refid="6802" relation="include">
        </childnode>
        <childnode refid="6803" relation="include">
        </childnode>
        <childnode refid="6804" relation="include">
        </childnode>
      </node>
      <node id="6817">
        <label>functional</label>
      </node>
      <node id="6816">
        <label>VAOFactory.h</label>
        <link refid="_v_a_o_factory_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6807" relation="include">
        </childnode>
        <childnode refid="6810" relation="include">
        </childnode>
        <childnode refid="6809" relation="include">
        </childnode>
        <childnode refid="6817" relation="include">
        </childnode>
      </node>
      <node id="6804">
        <label>QGLContext</label>
      </node>
      <node id="6805">
        <label>Vec3.h</label>
        <link refid="_vec3_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6806" relation="include">
        </childnode>
      </node>
      <node id="6793">
        <label>VAOPrimitives.h</label>
        <link refid="_v_a_o_primitives_8h"/>
        <childnode refid="6794" relation="include">
        </childnode>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6805" relation="include">
        </childnode>
        <childnode refid="6807" relation="include">
        </childnode>
        <childnode refid="6808" relation="include">
        </childnode>
        <childnode refid="6809" relation="include">
        </childnode>
        <childnode refid="6810" relation="include">
        </childnode>
        <childnode refid="6811" relation="include">
        </childnode>
      </node>
      <node id="6791">
        <label>cmath</label>
      </node>
      <node id="6798">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="6799" relation="include">
        </childnode>
        <childnode refid="6800" relation="include">
        </childnode>
      </node>
      <node id="6809">
        <label>string</label>
      </node>
      <node id="6797">
        <label>stddef.h</label>
      </node>
      <node id="6790">
        <label>fstream</label>
      </node>
      <node id="6796">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="6797" relation="include">
        </childnode>
        <childnode refid="6798" relation="include">
        </childnode>
        <childnode refid="6801" relation="include">
        </childnode>
      </node>
      <node id="6801">
        <label>GL/glu.h</label>
      </node>
      <node id="6799">
        <label>limits.h</label>
      </node>
      <node id="6813">
        <label>Vec4.h</label>
        <link refid="_vec4_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6814" relation="include">
        </childnode>
        <childnode refid="6805" relation="include">
        </childnode>
        <childnode refid="6806" relation="include">
        </childnode>
      </node>
      <node id="6807">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
      </node>
      <node id="6800">
        <label>wchar.h</label>
      </node>
      <node id="6808">
        <label>vector</label>
      </node>
      <node id="6806">
        <label>array</label>
      </node>
      <node id="6789">
        <label>VAOPrimitives.cpp</label>
        <link refid="VAOPrimitives.cpp"/>
        <childnode refid="6790" relation="include">
        </childnode>
        <childnode refid="6791" relation="include">
        </childnode>
        <childnode refid="6792" relation="include">
        </childnode>
        <childnode refid="6793" relation="include">
        </childnode>
        <childnode refid="6812" relation="include">
        </childnode>
        <childnode refid="6815" relation="include">
        </childnode>
        <childnode refid="6816" relation="include">
        </childnode>
        <childnode refid="6818" relation="include">
        </childnode>
      </node>
      <node id="6803">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="6792">
        <label>cstdlib</label>
      </node>
      <node id="6815">
        <label>iostream</label>
      </node>
      <node id="6794">
        <label>Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6792" relation="include">
        </childnode>
      </node>
      <node id="6810">
        <label>unordered_map</label>
      </node>
      <node id="6818">
        <label>SimpleVAO.h</label>
        <link refid="_simple_v_a_o_8h"/>
        <childnode refid="6807" relation="include">
        </childnode>
      </node>
      <node id="6812">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6813" relation="include">
        </childnode>
        <childnode refid="6791" relation="include">
        </childnode>
        <childnode refid="6809" relation="include">
        </childnode>
      </node>
      <node id="6802">
        <label>GL/gl.h</label>
      </node>
      <node id="6814">
        <label>Vec2.h</label>
        <link refid="_vec2_8h"/>
        <childnode refid="6795" relation="include">
        </childnode>
        <childnode refid="6806" relation="include">
        </childnode>
      </node>
      <node id="6811">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>implementation files for VAOPrimitives class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Jon<sp/>Macey</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_v_a_o_primitives_8h" kindref="compound">VAOPrimitives.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_util_8h" kindref="compound">Util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_v_a_o_factory_8h" kindref="compound">VAOFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_v_a_o_8h" kindref="compound">SimpleVAO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classngl_1_1_v_a_o_primitives_1ae1e0ef82aeb224aa7f91e49685fab722" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_v_a_o_primitives_1ae1e0ef82aeb224aa7f91e49685fab722" kindref="member">VAOPrimitives::VAOPrimitives</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a281188edfc487d7072b40ca3871964f2" kindref="member">createDefaultVAOs</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classngl_1_1_v_a_o_primitives_1a1573d9242ade91af73110704631d2796" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a1573d9242ade91af73110704631d2796" kindref="member">VAOPrimitives::draw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>VertexArrayObjects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>VAO=<ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>.find(_name);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(VAO!=<ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>.end())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>shader<sp/>and<sp/>call<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>VAO-&gt;second-&gt;bind();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>VAO-&gt;second-&gt;draw();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>VAO-&gt;second-&gt;unbind();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>VAO<sp/>not<sp/>know<sp/>in<sp/>Primitive<sp/>list<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classngl_1_1_v_a_o_primitives_1ae4923937d5dfaace1de10d86e6303bd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a1573d9242ade91af73110704631d2796" kindref="member">VAOPrimitives::draw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref><sp/>_mode<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>VertexArrayObjects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vao=<ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>.find(_name);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vao!=<ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>.end())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>shader<sp/>and<sp/>call<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;second-&gt;bind();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;second-&gt;setMode(_mode);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;second-&gt;draw();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;second-&gt;unbind();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning<sp/>VAO<sp/>not<sp/>know<sp/>in<sp/>Primitive<sp/>list<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_name.c_str()&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classngl_1_1_v_a_o_primitives_1aec14416905218b50f93e43c8661d7d6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1aec14416905218b50f93e43c8661d7d6b" kindref="member">VAOPrimitives::createVAOFromHeader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>*_data,<sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_size<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o" kindref="compound">AbstractVAO</ref><sp/>*vao<sp/>=<sp/><ref refid="classngl_1_1_v_a_o_factory_1adee5532df7151fab8e8db0e9ebf94305" kindref="member">VAOFactory::createVAO</ref>(</highlight><highlight class="stringliteral">&quot;simpleVAO&quot;</highlight><highlight class="normal">,<ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>we<sp/>bind<sp/>it<sp/>so<sp/>it&apos;s<sp/>active<sp/>for<sp/>setting<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1a32a42493f94df2674c89a90cb25cfa2a" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>our<sp/>data<sp/>add<sp/>it<sp/>to<sp/>the<sp/>VAO,<sp/>we<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>VAO<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>much<sp/>(in<sp/>bytes)<sp/>data<sp/>we<sp/>are<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>element<sp/>of<sp/>data<sp/>(in<sp/>this<sp/>case<sp/>the<sp/>address<sp/>of<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aeeabb8d7a3be60a6814d1c44cb52f27a" kindref="member">setData</ref>(<sp/><ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data" kindref="compound">SimpleVAO::VertexData</ref>(_size*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>),_data[0]));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>have<sp/>packed<sp/>our<sp/>data<sp/>in<sp/>interleaved<sp/>format<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u,v,nx,ny,nz,x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>look<sp/>at<sp/>the<sp/>shader<sp/>we<sp/>have<sp/>the<sp/>following<sp/>attributes<sp/>being<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec3<sp/>inVert;<sp/>attribute<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec2<sp/>inUV;<sp/>attribute<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec3<sp/>inNormal;<sp/>attribute<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>vertexAttributePointer<sp/>so<sp/>the<sp/>correct<sp/>size<sp/>and<sp/>type<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>is<sp/>attribute<sp/>0<sp/>with<sp/>x,y,z(3)<sp/>parts<sp/>of<sp/>type<sp/>GL_FLOAT,<sp/>our<sp/>complete<sp/>packed<sp/>data<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sizeof(vertData)<sp/>and<sp/>the<sp/>offset<sp/>into<sp/>the<sp/>data<sp/>structure<sp/>for<sp/>the<sp/>first<sp/>x<sp/>component<sp/>is<sp/>5<sp/>(u,v,nx,ny,nz)..x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" kindref="member">setVertexAttributePointer</ref>(0,3,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),5);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uv<sp/>same<sp/>as<sp/>above<sp/>but<sp/>starts<sp/>at<sp/>0<sp/>and<sp/>is<sp/>attrib<sp/>1<sp/>and<sp/>only<sp/>u,v<sp/>so<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" kindref="member">setVertexAttributePointer</ref>(1,2,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>same<sp/>as<sp/>vertex<sp/>only<sp/>starts<sp/>at<sp/>position<sp/>2<sp/>(u,v)-&gt;<sp/>nx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" kindref="member">setVertexAttributePointer</ref>(2,3,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>set<sp/>the<sp/>vertex<sp/>attributes<sp/>we<sp/>tell<sp/>the<sp/>VAO<sp/>class<sp/>how<sp/>many<sp/>indices<sp/>to<sp/>draw<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>glDrawArrays<sp/>is<sp/>called,<sp/>in<sp/>this<sp/>case<sp/>we<sp/>use<sp/>buffSize<sp/>(but<sp/>if<sp/>we<sp/>wished<sp/>less<sp/>of<sp/>the<sp/>sphere<sp/>to<sp/>be<sp/>drawn<sp/>we<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specify<sp/>less<sp/>(in<sp/>steps<sp/>of<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case<sp/>each<sp/>Generic<sp/>Vertex<sp/>attribute<sp/>is<sp/>8<sp/>elements<sp/>so<sp/>we<sp/>use<sp/>_size<sp/>/<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1ac3bab1083764b87a06bf658e6b6727a8" kindref="member">setNumIndices</ref>(_size/8);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>we<sp/>have<sp/>finished<sp/>for<sp/>now<sp/>so<sp/>time<sp/>to<sp/>unbind<sp/>the<sp/>VAO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>[_name]=vao;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;_name&lt;&lt;&quot;<sp/>Num<sp/>Triangles<sp/>&quot;&lt;&lt;data.size()/3&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classngl_1_1_v_a_o_primitives_1a93edc7af7c82934c8a5bc739b7c61665" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a93edc7af7c82934c8a5bc739b7c61665" kindref="member">VAOPrimitives::createLineGrid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_width,<sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_steps<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>vert;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>claculate<sp/>the<sp/>step<sp/>size<sp/>for<sp/>each<sp/>grid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>wstep=_width/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_steps);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pre-calc<sp/>the<sp/>offset<sp/>for<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>ws2=_width/2.0f;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>v<sp/>as<sp/>our<sp/>value<sp/>to<sp/>change<sp/>each<sp/>vertex<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9" kindref="member">v1</ref>=-ws2;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>claculate<sp/>the<sp/>step<sp/>size<sp/>for<sp/>each<sp/>grid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dstep=_depth/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_steps);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pre-calc<sp/>the<sp/>offset<sp/>for<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>ds2=_depth/2.0f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>v<sp/>as<sp/>our<sp/>value<sp/>to<sp/>change<sp/>each<sp/>vertex<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a9a09a1837922b2b806f4589096a52049" kindref="member">v2</ref>=-ds2;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;=_steps;<sp/>++i)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>1<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=-ws2;<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=<ref refid="glew_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9" kindref="member">v1</ref>;<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=0.0;<sp/></highlight><highlight class="comment">//<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>2<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=ws2;<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=<ref refid="glew_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9" kindref="member">v1</ref>;<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>1<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a9a09a1837922b2b806f4589096a52049" kindref="member">v2</ref>;<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=ds2;<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>2<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a9a09a1837922b2b806f4589096a52049" kindref="member">v2</ref>;<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-ds2;<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>change<sp/>our<sp/>step<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v1+=wstep;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v2+=dstep;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1a532ed3612eae8eaed8a7a53ecd7a28f3" kindref="member">GL_LINES</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classngl_1_1_v_a_o_primitives_1aec029e212219801bd87056397be73bf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1aec029e212219801bd87056397be73bf8" kindref="member">VAOPrimitives::createSphere</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_radius,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_precision<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Sphere<sp/>code<sp/>based<sp/>on<sp/>a<sp/>function<sp/>Written<sp/>by<sp/>Paul<sp/>Bourke.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>http://astronomy.swin.edu.au/~pbourke/opengl/sphere/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>part<sp/>of<sp/>the<sp/>code<sp/>calculates<sp/>the<sp/>P,N,UV<sp/>of<sp/>the<sp/>sphere<sp/>for<sp/>tri_strips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>theta1<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>theta2<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>theta3<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disallow<sp/>a<sp/>negative<sp/>number<sp/>for<sp/>radius.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_radius<sp/>&lt;<sp/>0.0<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref><sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_radius<sp/>=<sp/>-_radius;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disallow<sp/>a<sp/>negative<sp/>number<sp/>for<sp/>_precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_precision<sp/>&lt;<sp/>4<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_precision<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>fill<sp/>in<sp/>a<sp/>vertData<sp/>structure<sp/>and<sp/>add<sp/>to<sp/>the<sp/>data<sp/>list<sp/>for<sp/>our<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_precision/2;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>theta1<sp/>=<sp/>i<sp/>*<sp/><ref refid="namespacengl_1a71531c7827f8862ebcae8ea2c6482959" kindref="member">TWO_PI</ref><sp/>/<sp/>_precision<sp/>-<sp/><ref refid="namespacengl_1a07f8f947f3862ef9b4bc5fe2f6475d6f" kindref="member">PI2</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>theta2<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/><ref refid="namespacengl_1a71531c7827f8862ebcae8ea2c6482959" kindref="member">TWO_PI</ref><sp/>/<sp/>_precision<sp/>-<sp/>PI2;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>_precision;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta3<sp/>=<sp/>j<sp/>*<sp/><ref refid="namespacengl_1a71531c7827f8862ebcae8ea2c6482959" kindref="member">TWO_PI</ref><sp/>/<sp/>_precision;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref><sp/>=<sp/>cosf(theta2)<sp/>*<sp/>cosf(theta3);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref><sp/>=<sp/>sinf(theta2);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref><sp/>=<sp/>cosf(theta2)<sp/>*<sp/>sinf(theta3);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>_radius<sp/>*<sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>_radius<sp/>*<sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>_radius<sp/>*<sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref><sp/><sp/>=<sp/>(j/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_precision));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref><sp/><sp/>=<sp/>2*(i+1)/static_cast&lt;Real&gt;(_precision);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref><sp/>=<sp/>cosf(theta1)<sp/>*<sp/>cosf(theta3);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref><sp/>=<sp/>sinf(theta1);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref><sp/>=<sp/>cosf(theta1)<sp/>*<sp/>sinf(theta3);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>_radius<sp/>*<sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>_radius<sp/>*<sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>_radius<sp/>*<sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref><sp/><sp/>=<sp/>(j/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_precision));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref><sp/><sp/>=<sp/>2*i/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_precision);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>inner<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//<sp/>end<sp/>outer<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1ad38e94a1120d6688fce6fc805a5b998d" kindref="member">GL_TRIANGLE_STRIP</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classngl_1_1_v_a_o_primitives_1a3333662d6d2f7f017e3d6cad45cb44c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a3333662d6d2f7f017e3d6cad45cb44c7" kindref="member">VAOPrimitives::createCapsule</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_height,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_precision<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>code<sp/>from<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://code.google.com/p/rgine/source/browse/trunk/RGine/opengl/src/RGLShapes.cpp</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref><sp/>=<sp/>_height<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>,<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>,<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>,<sp/>c1,<sp/>o;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>sb,<sp/>cb,<sp/>sb1,<sp/>cb1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>ang<sp/>=<sp/>(1.0f<sp/>/<sp/>_precision)<sp/>*<sp/>static_cast&lt;Real&gt;(M_PI);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2<sp/>*<sp/>_precision;<sp/>++i)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>_radius<sp/>*<sp/>cosf(ang<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c1=<sp/>_radius<sp/>*<sp/>cosf(ang<sp/>*<sp/>(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>_radius<sp/>*<sp/>sinf(ang<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>s1<sp/>=_radius<sp/>*<sp/>sinf(ang<sp/>*<sp/>(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//side<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>c1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/><ref refid="glew_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=c1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=<sp/>0.0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=<ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=<ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=<ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>-<ref refid="glew_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//side<sp/>bot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>c1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=<sp/>c1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=<ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>c1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/><ref refid="glew_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=c1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=<ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=_precision;<sp/>++j)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>_precision<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="glew_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>-<ref refid="glew_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//longitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>-sinf(ang<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>-sinf(ang<sp/>*<sp/>(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cosf(ang<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cosf(ang<sp/>*<sp/>(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//latitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>=<sp/>_radius<sp/>*<sp/>sinf(ang<sp/>*<sp/>j);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb1<sp/>=<sp/>_radius<sp/>*<sp/>sinf(ang<sp/>*<sp/>(j<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>_radius<sp/>*<sp/>cosf(ang<sp/>*<sp/>j);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb1<sp/>=<sp/>_radius<sp/>*<sp/>cosf(ang<sp/>*<sp/>(j<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>_precision<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>sb<sp/>*<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>cb<sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>sb<sp/>*<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>sb1<sp/>*<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>cb1<sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>sb1<sp/>*<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>sb1<sp/>*<sp/>c1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>cb1<sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>sb1<sp/>*<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>sb<sp/>*<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>cb<sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>sb<sp/>*<sp/><ref refid="glew_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>sb1<sp/>*<sp/>c1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>cb1<sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>sb1<sp/>*<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref><sp/>=<sp/>sb<sp/>*<sp/>c1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref><sp/>=<sp/>cb<sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref><sp/>=<sp/>sb<sp/>*<sp/><ref refid="glew_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">VAOPrimitives::createVAO</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;vertData&gt;<sp/>&amp;_data,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a5d5233918a454ad3975c620a69ac5f0b" kindref="member">GLenum</ref><sp/>_mode)<sp/>noexcept</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_v_a_o" kindref="compound">AbstractVAO</ref><sp/>*vao<sp/>=<sp/><ref refid="classngl_1_1_v_a_o_factory_1adee5532df7151fab8e8db0e9ebf94305" kindref="member">VAOFactory::createVAO</ref>(</highlight><highlight class="stringliteral">&quot;simpleVAO&quot;</highlight><highlight class="normal">,_mode);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>we<sp/>bind<sp/>it<sp/>so<sp/>it&apos;s<sp/>active<sp/>for<sp/>setting<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1a32a42493f94df2674c89a90cb25cfa2a" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>our<sp/>data<sp/>add<sp/>it<sp/>to<sp/>the<sp/>VAO,<sp/>we<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>VAO<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>much<sp/>(in<sp/>bytes)<sp/>data<sp/>we<sp/>are<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>element<sp/>of<sp/>data<sp/>(in<sp/>this<sp/>case<sp/>the<sp/>address<sp/>of<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aeeabb8d7a3be60a6814d1c44cb52f27a" kindref="member">setData</ref>(<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data" kindref="compound">SimpleVAO::VertexData</ref>(_data.size()*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),_data[0].u));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>have<sp/>packed<sp/>our<sp/>data<sp/>in<sp/>interleaved<sp/>format<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>u,v,nx,ny,nz,x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>look<sp/>at<sp/>the<sp/>shader<sp/>we<sp/>have<sp/>the<sp/>following<sp/>attributes<sp/>being<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec3<sp/>inVert;<sp/>attribute<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec2<sp/>inUV;<sp/>attribute<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec3<sp/>inNormal;<sp/>attribure<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>vertexAttributePointer<sp/>so<sp/>the<sp/>correct<sp/>size<sp/>and<sp/>type<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>is<sp/>attribute<sp/>0<sp/>with<sp/>x,y,z(3)<sp/>parts<sp/>of<sp/>type<sp/>GL_FLOAT,<sp/>our<sp/>complete<sp/>packed<sp/>data<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sizeof(vertData)<sp/>and<sp/>the<sp/>offset<sp/>into<sp/>the<sp/>data<sp/>structure<sp/>for<sp/>the<sp/>first<sp/>x<sp/>component<sp/>is<sp/>5<sp/>(u,v,nx,ny,nz)..x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" kindref="member">setVertexAttributePointer</ref>(0,3,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),5);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uv<sp/>same<sp/>as<sp/>above<sp/>but<sp/>starts<sp/>at<sp/>0<sp/>and<sp/>is<sp/>attrib<sp/>1<sp/>and<sp/>only<sp/>u,v<sp/>so<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" kindref="member">setVertexAttributePointer</ref>(1,2,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>same<sp/>as<sp/>vertex<sp/>only<sp/>starts<sp/>at<sp/>position<sp/>2<sp/>(u,v)-&gt;<sp/>nx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" kindref="member">setVertexAttributePointer</ref>(2,3,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref>),2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>set<sp/>the<sp/>vertex<sp/>attributes<sp/>we<sp/>tell<sp/>the<sp/>VAO<sp/>class<sp/>how<sp/>many<sp/>indices<sp/>to<sp/>draw<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>glDrawArrays<sp/>is<sp/>called,<sp/>in<sp/>this<sp/>case<sp/>we<sp/>use<sp/>buffSize<sp/>(but<sp/>if<sp/>we<sp/>wished<sp/>less<sp/>of<sp/>the<sp/>sphere<sp/>to<sp/>be<sp/>drawn<sp/>we<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specify<sp/>less<sp/>(in<sp/>steps<sp/>of<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1ac3bab1083764b87a06bf658e6b6727a8" kindref="member">setNumIndices</ref>(_data.size());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>we<sp/>have<sp/>finished<sp/>for<sp/>now<sp/>so<sp/>time<sp/>to<sp/>unbind<sp/>the<sp/>VAO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>vao-&gt;<ref refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>[_name]=vao;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;_name&lt;&lt;&quot;<sp/>Num<sp/>Triangles<sp/>&quot;&lt;&lt;_data.size()/3&lt;&lt;&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>Compute<sp/>lookup<sp/>table<sp/>of<sp/>cos<sp/>and<sp/>sin<sp/>values<sp/>forming<sp/>a<sp/>cirle</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>borrowed<sp/>from<sp/>free<sp/>glut<sp/>implimentation<sp/>of<sp/>primitive<sp/>drawing</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>Notes:</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>It<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>the<sp/>caller<sp/>to<sp/>free<sp/>these<sp/>tables</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>size<sp/>of<sp/>the<sp/>table<sp/>is<sp/>(n+1)<sp/>to<sp/>form<sp/>a<sp/>connected<sp/>loop</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>last<sp/>entry<sp/>is<sp/>exactly<sp/>the<sp/>same<sp/>as<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>sign<sp/>of<sp/>n<sp/>can<sp/>be<sp/>flipped<sp/>to<sp/>get<sp/>the<sp/>reverse<sp/>loop</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classngl_1_1_v_a_o_primitives_1abe6e3f8f71c274031c8b6e02d943b4af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1abe6e3f8f71c274031c8b6e02d943b4af" kindref="member">VAOPrimitives::fghCircleTable</ref>(std::unique_ptr&lt;<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>[]&gt;<sp/>&amp;io_sint,<sp/>std::unique_ptr&lt;<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>[]&gt;<sp/>&amp;io_cost,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>angle<sp/>between<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a6d7a98b0d979b9411a4344a98a7a6122" kindref="member">angle</ref><sp/>=<sp/>2*<ref refid="namespacengl_1ac74a8dda10c511eec4455e21a24d4eee" kindref="member">PI</ref>/(<sp/>(<sp/>_n<sp/>==<sp/>0<sp/>)<sp/>?<sp/>1<sp/>:<sp/>_n<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Table<sp/>size,<sp/>the<sp/>sign<sp/>of<sp/>n<sp/>flips<sp/>the<sp/>circle<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref><sp/>=<sp/>abs(_n);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>memory<sp/>for<sp/>n<sp/>samples,<sp/>plus<sp/>duplicate<sp/>of<sp/>first<sp/>entry<sp/>at<sp/>the<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>io_sint.reset(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>[size+1]);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>io_cost.reset(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>[size+1]);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>cos<sp/>and<sp/>sin<sp/>around<sp/>the<sp/>circle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>io_sint[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>io_cost[0]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i&lt;static_cast&lt;unsigned<sp/>int&gt;(<ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);<sp/>++i)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>io_sint[i]<sp/>=<sp/>sinf(angle*i);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>io_cost[i]<sp/>=<sp/>cosf(angle*i);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>sample<sp/>is<sp/>duplicate<sp/>of<sp/>the<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>io_sint[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>)]<sp/>=<sp/>io_sint[0];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>io_cost[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>)]<sp/>=<sp/>io_cost[0];</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classngl_1_1_v_a_o_primitives_1a85f675d14d72f093d4c7afa82155d697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a85f675d14d72f093d4c7afa82155d697" kindref="member">VAOPrimitives::createCylinder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_radius,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_height,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_slices,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_stacks<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>in<sp/>z<sp/>and<sp/>radius<sp/>as<sp/>stacks<sp/>are<sp/>drawn.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>z0,z1;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>zStep<sp/>=<sp/>_height<sp/>/<sp/>(<sp/>(<sp/>_stacks<sp/>&gt;<sp/>0<sp/>)<sp/>?<sp/>_stacks<sp/>:<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-computed<sp/>circle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;<sp/>sint;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;<sp/>cost;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1abe6e3f8f71c274031c8b6e02d943b4af" kindref="member">fghCircleTable</ref>(sint,cost,static_cast&lt;int&gt;(-_slices));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>the<sp/>stacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>z0<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>z1<sp/>=<sp/>zStep;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>co-ords<sp/>start<sp/>at<sp/>0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>du=1.0f/_stacks;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dv=1.0f/_slices;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cover<sp/>each<sp/>stack<sp/>with<sp/>a<sp/>quad<sp/>strip,<sp/>except<sp/>the<sp/>top<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>u=0.0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>=0.0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;=_stacks+1;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==_stacks)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z1<sp/>=<sp/>_height;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;=_slices-1;<sp/>++j)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=sint[j];</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=cost[j];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=sint[j]*_radius;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=cost[j]*_radius;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-z0/2.0f;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v+dv;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-z1/2.0f;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u+du;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=sint[j+1];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=cost[j+1];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=sint[j+1]*_radius;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=cost[j+1]*_radius;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-z0/2.0f;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u+du;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=sint[j+1];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=cost[j+1];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=sint[j+1]*_radius;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=cost[j+1]*_radius;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-z0/2.0f;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v+dv;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=sint[j];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=cost[j];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=sint[j]*_radius;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=cost[j]*_radius;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-z1/2.0f;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u+du;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v+dv;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=sint[j+1];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=cost[j+1];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=sint[j+1]*_radius;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=cost[j+1]*_radius;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=-z1/2.0f;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u+=du;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>v+=dv;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>u=0.0f;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>z0<sp/>=<sp/>z1;<sp/>z1<sp/>+=<sp/>zStep;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>VAO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="classngl_1_1_v_a_o_primitives_1a02aa220bc52e3e8b579e4b67bb8344af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a02aa220bc52e3e8b579e4b67bb8344af" kindref="member">VAOPrimitives::createCone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_base,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_height,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_slices,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_stacks<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>in<sp/>z<sp/>and<sp/>radius<sp/>as<sp/>stacks<sp/>are<sp/>drawn.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>z0,z1;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>r0,r1;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>zStep<sp/>=<sp/>_height<sp/>/<sp/>(<sp/>(<sp/>_stacks<sp/>&gt;<sp/>0<sp/>)<sp/>?<sp/>_stacks<sp/>:<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>rStep<sp/>=<sp/>_base<sp/>/<sp/>(<sp/>(<sp/>_stacks<sp/>&gt;<sp/>0<sp/>)<sp/>?<sp/>_stacks<sp/>:<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scaling<sp/>factors<sp/>for<sp/>vertex<sp/>normals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>cosn<sp/>=<sp/>(<sp/>_height<sp/>/<sp/>sqrtf<sp/>(<sp/>_height<sp/>*<sp/>_height<sp/>+<sp/>_base<sp/>*<sp/>_base<sp/>));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>sinn<sp/>=<sp/>(<sp/>_base<sp/><sp/><sp/>/<sp/>sqrtf<sp/>(<sp/>_height<sp/>*<sp/>_height<sp/>+<sp/>_base<sp/>*<sp/>_base<sp/>));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-computed<sp/>circle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;<sp/>sint;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;<sp/>cost;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1abe6e3f8f71c274031c8b6e02d943b4af" kindref="member">fghCircleTable</ref>(sint,cost,static_cast&lt;int&gt;(-_slices));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>z0<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>z1<sp/>=<sp/>zStep;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>r0<sp/>=<sp/>_base;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>r1<sp/>=<sp/>r0<sp/>-<sp/>rStep;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>co-ords<sp/>start<sp/>at<sp/>0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>du=1.0f/_stacks;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dv=1.0f/_slices;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cover<sp/>each<sp/>stack<sp/>with<sp/>a<sp/>quad<sp/>strip,<sp/>except<sp/>the<sp/>top<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>u=1.0f;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>=1.0f;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;_stacks;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;=_slices;<sp/>j++)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref><sp/>=<sp/>cost[j]*cosn;<sp/></highlight><highlight class="comment">//ctheta;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref><sp/>=<sp/>sint[j]<sp/>*<sp/>sinn<sp/>;</highlight><highlight class="comment">//-stheta;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref><sp/>=<sp/>sinn;</highlight><highlight class="comment">//<sp/>sphi;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=cost[j]*r0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=sint[j]*r0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=z0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>for<sp/>the<sp/>next<sp/>verts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v-dv;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=cost[j]*r1;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=sint[j]*r1;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=z1;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u-=du;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>v-=dv;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>u=1.0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>z0<sp/>=<sp/>z1;<sp/>z1<sp/>+=<sp/>zStep;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/>r1;<sp/>r1<sp/>-=<sp/>rStep;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>VAO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1ad38e94a1120d6688fce6fc805a5b998d" kindref="member">GL_TRIANGLE_STRIP</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="classngl_1_1_v_a_o_primitives_1a0803af36b2a375a3367d4521ab16a7fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a0803af36b2a375a3367d4521ab16a7fe" kindref="member">VAOPrimitives::createDisk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_radius,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_slices<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-computed<sp/>circle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;<sp/>sint;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;<sp/>cost;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1abe6e3f8f71c274031c8b6e02d943b4af" kindref="member">fghCircleTable</ref>(sint,cost,static_cast&lt;int&gt;(-_slices));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>were<sp/>using<sp/>a<sp/>triangle<sp/>fan<sp/>its<sp/><sp/>vert<sp/>at<sp/>the<sp/>centere<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>co-ords<sp/>start<sp/>at<sp/>0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>du=1.0f/_slices;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>u=0.0f;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>=0.0f;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>are<sp/>doing<sp/>a<sp/>tri<sp/>fan<sp/>this<sp/>is<sp/>the<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=0.0f;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=0.0f;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=-1.0f;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>v=1.0;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;=_slices;<sp/>++j)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normals<sp/>set<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=cost[j]*_radius;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=sint[j]*_radius;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>z<sp/>set<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>u+=du;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>VBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1a425f188c2bed5dc37bb2b5434388caa9" kindref="member">GL_TRIANGLE_FAN</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="classngl_1_1_v_a_o_primitives_1a94653d949fb7c0a665e112fd7330df24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a94653d949fb7c0a665e112fd7330df24" kindref="member">VAOPrimitives::createTorus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_minorRadius,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_majorRadius,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_nSides,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_nRings,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_flipTX<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><sp/>iradius<sp/>=<sp/>_minorRadius,<sp/>oradius<sp/>=<sp/>_majorRadius,<sp/>phi,<sp/>psi,<sp/>dpsi,<sp/>dphi;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>spsi,<sp/>cpsi,<sp/>sphi,<sp/>cphi<sp/>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_nSides<sp/>&lt;<sp/>1<sp/>)<sp/>{<sp/>_nSides<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_nRings<sp/>&lt;<sp/>1<sp/>)<sp/>{<sp/>_nRings<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>sides<sp/>and<sp/>rings<sp/>to<sp/>allow<sp/>for<sp/>one<sp/>more<sp/>point<sp/>than<sp/>surface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>_nSides<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>_nRings<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>use<sp/>vec3<sp/>/<sp/>2<sp/>for<sp/>these<sp/>at<sp/>some<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;vertex(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>[3<sp/>*<sp/>_nSides<sp/>*<sp/>_nRings]);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;normal(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>[3<sp/>*<sp/>_nSides<sp/>*<sp/>_nRings]);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Real<sp/>[]&gt;uv(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>[2*_nSides*_nRings*2]);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>dpsi<sp/>=<sp/><sp/>2.0f<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(M_PI)<sp/>/<sp/>(_nRings<sp/>-<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>dphi<sp/>=<sp/>-2.0f<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(M_PI)<sp/>/<sp/>(_nSides<sp/>-<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>psi<sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>uStep=1.0f/_nRings;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>vStep=1.0f/_nSides;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>tu=0.0f;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>tv=0.0f;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pre<sp/>compute<sp/>the<sp/>values<sp/>for<sp/>the<sp/>torus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;_nRings;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpsi<sp/>=<sp/>cosf<sp/>(<sp/>psi<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spsi<sp/>=<sp/>sinf<sp/>(<sp/>psi<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;_nSides;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref><sp/>=<sp/>3<sp/>*<sp/>(<sp/>j<sp/>*<sp/>_nSides<sp/>+<sp/>i<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cphi<sp/>=<sp/>cosf(<sp/>phi<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sphi<sp/>=<sp/>sinf(<sp/>phi<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>]<sp/>=<sp/>cpsi<sp/>*<sp/>(<sp/>oradius<sp/>+<sp/>cphi<sp/>*<sp/>iradius<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex[offset+1]<sp/>=<sp/>spsi<sp/>*<sp/>(<sp/>oradius<sp/>+<sp/>cphi<sp/>*<sp/>iradius<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex[offset+2]<sp/>=<sp/>sphi<sp/>*<sp/>iradius<sp/><sp/>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>]<sp/>=<sp/>cpsi<sp/>*<sp/>cphi<sp/>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal[offset+1]<sp/>=<sp/>spsi<sp/>*<sp/>cphi<sp/>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal[offset+2]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sphi<sp/>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_flipTX)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>]=tv;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[offset+1]=tu;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>]=tu;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[offset+1]=tv;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tu+=uStep;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>+=<sp/>dphi;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>_nSides<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tu=0.0f;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv+=vStep;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi<sp/>+=<sp/>dpsi;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>_nRings<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;_nSides-1;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;_nRings-1;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref><sp/>=<sp/>3<sp/>*<sp/>(<sp/>j<sp/>*<sp/>_nSides<sp/>+<sp/>i<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>n=normal[offset];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v=vertex[offset];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t=uv[offset];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=uv[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=uv[offset+1];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=normal[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=normal[offset+1];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=normal[offset+2];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=vertex[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=vertex[offset+1];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=vertex[offset+2];</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//V1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//n=normal+offset+3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v=vertex+offset+3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t=uv+offset+3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=uv[offset+3];</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=uv[offset+4];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=normal[offset+3];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=normal[offset+4];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=normal[offset+5];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=vertex[offset+3];</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=vertex[offset+4];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=vertex[offset+5];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//V2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//n=normal<sp/>+<sp/>offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v=vertex<sp/>+<sp/>offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t=uv+<sp/>offset+3*_nSides+3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=uv[(offset+3*_nSides+3)];</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=uv[(offset+3*_nSides+3)+1];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+1];</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+2];</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+1];</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+2];</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//V3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>n=normal+offset;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>v=vertex+offset;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>t=uv+offset;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=uv[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=uv[offset+1];</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=normal[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=normal[offset+1];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=normal[offset+2];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=vertex[<ref refid="glew_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=vertex[offset+1];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=vertex[offset+2];</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//V1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//n=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t=uv[(offset+3*_nSides+3)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=uv[(offset+3*_nSides+3)];</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=uv[(offset+3*_nSides+3)+1];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+1];</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=normal[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+2];</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)];</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+1];</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides<sp/>+<sp/>3)+2];</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//V3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>n=normal[<sp/>(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v=<sp/>vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t=<sp/>uv[(offset+3*_nSides)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=uv[(offset+3*_nSides)];</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=uv[(offset+3*_nSides)+1];</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=normal[<sp/>(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)];</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=normal[<sp/>(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)+1];</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=normal[<sp/>(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)+2];</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)+1];</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=vertex[(offset<sp/>+<sp/>3<sp/>*<sp/>_nSides)+2];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(d);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>_nRings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>_nSides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>create<sp/>the<sp/>VBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="classngl_1_1_v_a_o_primitives_1ab3742cc5bbc1fee5f7982410911a46b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1ab3742cc5bbc1fee5f7982410911a46b6" kindref="member">VAOPrimitives::createTrianglePlane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_width,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_depth,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_wP,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_dP,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref><sp/>&amp;_vN)<sp/>noexcept</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>VBO<sp/>size<sp/>basically<sp/>we<sp/>have<sp/>2<sp/>tris<sp/>per<sp/>quad<sp/>based<sp/>on<sp/>the<sp/>width<sp/>and<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>our<sp/>plane<sp/>is<sp/>centered<sp/>on<sp/>0.0<sp/>we<sp/>range<sp/>from<sp/>Width/2.0<sp/>and<sp/>Depth/2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>w2=_width/2.0f;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>d2=_depth/2.0f;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>steps<sp/>for<sp/>each<sp/>quad<sp/>/<sp/>tri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>wStep=_width/_wP;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dStep=_depth/_dP;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>co-ords<sp/>start<sp/>at<sp/>0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>du=0.9f/_wP;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dv=0.9f/_dP;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>u=0.0f;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>=0.0f;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>our<sp/>verts,<sp/>remember<sp/>vector<sp/>packs<sp/>contiguously<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;vertData&gt;<sp/><ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1vert_data" kindref="compound">vertData</ref><sp/>vert;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>d=-d2;<sp/>d&lt;d2;<sp/>d+=dStep)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>=-w2;<sp/><ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>&lt;w2;<sp/><ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>+=wStep)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tri<sp/>1</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>counter<sp/>clock<sp/>wise</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>\</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1____2</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>normals<sp/>are<sp/>always<sp/>the<sp/>same<sp/>so<sp/>set<sp/>them<sp/>for<sp/>d<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1afba8d3028732936ed454e6bf4b5f6d40" kindref="member">nx</ref>=_vN.m_x;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a4f787968eba90d2a3a94c626ae629145" kindref="member">ny</ref>=_vN.m_y;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a0dbdb12a34892ff7d19840cb6fd2d533" kindref="member">nz</ref>=_vN.m_z;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>is<sp/>always<sp/>0<sp/>as<sp/>in<sp/>a<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a60e3a8dff115f16e7161f92b49363223" kindref="member">y</ref>=0.0f;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>for<sp/>the<sp/>per<sp/>vert<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;<sp/>vert.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v+dv;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=d+dStep;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u+du;<sp/>vert.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v+dv;<sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>+wStep;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=d+dStep;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;<sp/>vert.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;<sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=d;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tri<sp/>2<sp/>w,0,d</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>counter<sp/>clock<sp/>wise</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>3_____2</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\<sp/><sp/>|</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\<sp/>|</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\|</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="858"><highlight class="comment"></highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u+du;<sp/>vert.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=v+dv;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>+wStep;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=d+dStep;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u+du;<sp/>vert.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;<sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>+wStep;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=d;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1a66a479fd32442efde47e28ec18022553" kindref="member">u</ref>=u;<sp/>vert.<ref refid="structngl_1_1vert_data_1a9d7572806540ceef281f8f6315ab5653" kindref="member">v</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;<sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ac1215152a4a9fecec3dfc1a909238846" kindref="member">x</ref>=<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>;<sp/><sp/><sp/>vert.<ref refid="structngl_1_1vert_data_1ab3d3f93c93c54321152830ebcd7affcc" kindref="member">z</ref>=d;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(vert);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u+=du;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>w<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>u=0.0f;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>v+=du;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>d<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>create<sp/>the<sp/>VBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_v_a_o_primitives_1a9ec8ee427ac69f5dec51792f7014d2af" kindref="member">createVAO</ref>(_name,data,<ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="classngl_1_1_v_a_o_primitives_1ae8172dc1f36de8ac170c8ae6ed30a183" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_v_a_o_primitives_1ae8172dc1f36de8ac170c8ae6ed30a183" kindref="member">VAOPrimitives::clear</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;clearing<sp/>VAOs\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>the<sp/>map<sp/>and<sp/>delete<sp/>the<sp/>VBO&apos;s<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>glDeleteBuffers<sp/>needs<sp/>a<sp/>const<sp/>GLUint<sp/>*<sp/>so<sp/>we<sp/>need<sp/>to<sp/>de-reference<sp/>the<sp/>map<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>:<sp/><ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLuint<sp/>address=v.second-&gt;getID();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glDeleteVertexArrays(1,&amp;address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.second-&gt;removeVAO();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>m_createdVAOs.erase(m_createdVAOs.begin(),m_createdVAOs.end());</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="classngl_1_1_v_a_o_primitives_1a798895728d999c90180e1461618dc525" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_abstract_v_a_o" kindref="compound">AbstractVAO</ref><sp/>*<sp/><ref refid="classngl_1_1_v_a_o_primitives_1a798895728d999c90180e1461618dc525" kindref="member">VAOPrimitives::getVAOFromName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_name)</highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>VertexArrayObjects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>VAO=<ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>.find(_name);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(VAO!=<ref refid="classngl_1_1_v_a_o_primitives_1a6b0bb15550e505f8b3f90b5cd8b288fc" kindref="member">m_createdVAOs</ref>.end())</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VAO-&gt;second;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/VAOPrimitives.cpp"/>
  </compounddef>
</doxygen>
