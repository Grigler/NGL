<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_shader_program" kind="class" language="C++" prot="public">
    <compoundname>ngl::ShaderProgram</compoundname>
    <includes refid="_shader_program_8h" local="no">ShaderProgram.h</includes>
    <innerclass refid="structngl_1_1_shader_program_1_1uniform_data" prot="private">ngl::ShaderProgram::uniformData</innerclass>
      <sectiondef kind="user-defined">
      <header>Set uniform argument values from the argument name</header>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ae32bd664f28750e3d2c9c7c7f9974671" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform1f</definition>
        <argsstring>(const char *_varname, float __v0) const  noexcept</argsstring>
        <name>setUniform1f</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>__v0</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a float </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="122" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="212" bodyend="215"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a213791d8094088fb4c40d265b7fe7694" compoundref="glew_8h" startline="1945">glUniform1f</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a8215de393b7d5a52953c632b49624b92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform1f</definition>
        <argsstring>(const std::string &amp;_varname, float _v0) const  noexcept</argsstring>
        <name>setRegisteredUniform1f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single float </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="129" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="218" bodyend="227"/>
        <references refid="glew_8h_1a213791d8094088fb4c40d265b7fe7694" compoundref="glew_8h" startline="1945">glUniform1f</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a2c1220bdb56086ca3fa6e0b97344fa20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform2f</definition>
        <argsstring>(const char *_varname, float _v0, float _v1) const  noexcept</argsstring>
        <name>setUniform2f</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a float2 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="137" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="229" bodyend="232"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a560652430f183407dbb3bec12eefed88" compoundref="glew_8h" startline="1949">glUniform2f</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ac3719bdfd595be06d7e99114cd3acd11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform2f</definition>
        <argsstring>(const std::string &amp;_varname, float _v0, float _v1) const  noexcept</argsstring>
        <name>setRegisteredUniform2f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single float </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="144" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="236" bodyend="245"/>
        <references refid="glew_8h_1a560652430f183407dbb3bec12eefed88" compoundref="glew_8h" startline="1949">glUniform2f</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a6ec93e6a1fcda810086c66aaea97aaba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform3f</definition>
        <argsstring>(const char *_varname, float _v0, float _v1, float _v2) const  noexcept</argsstring>
        <name>setUniform3f</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a float3 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="153" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="248" bodyend="251"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1ae24937a9308501abc9c9def17f4ad09f" compoundref="glew_8h" startline="1953">glUniform3f</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a8b56a061bb25feee44dd2e54af6f9049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform3f</definition>
        <argsstring>(const std::string &amp;_varname, float _v0, float _v1, float _v2) const  noexcept</argsstring>
        <name>setRegisteredUniform3f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single float </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="161" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="253" bodyend="262"/>
        <references refid="glew_8h_1ae24937a9308501abc9c9def17f4ad09f" compoundref="glew_8h" startline="1953">glUniform3f</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ae4d94a44a30420fc2f7fffc30dee240e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform4f</definition>
        <argsstring>(const char *_varname, float _v0, float _v1, float _v2, float _v3) const  noexcept</argsstring>
        <name>setUniform4f</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a float4 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="170" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="264" bodyend="268"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1acc7199596adb761de242faa1abd134c2" compoundref="glew_8h" startline="1957">glUniform4f</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a4dfe246ee7290678c431fd3ff353c0b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform4f</definition>
        <argsstring>(const std::string &amp;_varname, float _v0, float _v1, float _v2, float _v3) const  noexcept</argsstring>
        <name>setRegisteredUniform4f</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single float </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="179" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="270" bodyend="279"/>
        <references refid="glew_8h_1acc7199596adb761de242faa1abd134c2" compoundref="glew_8h" startline="1957">glUniform4f</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a2a05c0112b83557e8d7e4c0b7bad0644" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform1fv</definition>
        <argsstring>(const char *_varname, size_t _count, const float *_value) const  noexcept</argsstring>
        <name>setUniform1fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 1D float array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="186" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="282" bodyend="285"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a7b834ab4b0d141e408001f708e1395ff" compoundref="glew_8h" startline="1946">glUniform1fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1adcc1dd1f4a24fe39d698f00238458bd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform2fv</definition>
        <argsstring>(const char *_varname, size_t _count, const float *_value) const  noexcept</argsstring>
        <name>setUniform2fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 2D float array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new _value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="194" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="288" bodyend="291"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a8f68825b5857a0eab9387a49ba2cae3c" compoundref="glew_8h" startline="1950">glUniform2fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a69c4f9822e82cffc83d6d70c3235faa2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform3fv</definition>
        <argsstring>(const char *_varname, size_t _count, const float *_value) const  noexcept</argsstring>
        <name>setUniform3fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 3D float array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new _value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="202" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="294" bodyend="297"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a264e119325884947733141031ec9ff68" compoundref="glew_8h" startline="1954">glUniform3fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a83a129472b87b7605b7b8b6ab5bf151f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform4fv</definition>
        <argsstring>(const char *_varname, size_t _count, const float *_value) const  noexcept</argsstring>
        <name>setUniform4fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 4D float array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new _value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="210" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="300" bodyend="304"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a2f24b3425eec94391cbfbb638466c65b" compoundref="glew_8h" startline="1958">glUniform4fv</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set Program Integer Args</header>
      <description><para>sets &apos;_varname&apos; as an int</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ae714f5f7dfb6bc3df18aedb13de139e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform1i</definition>
        <argsstring>(const char *_varname, GLint _v0) const  noexcept</argsstring>
        <name>setUniform1i</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="218" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="308" bodyend="312"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1abf9380e68d38f458f86a54870846026e" compoundref="glew_8h" startline="1947">glUniform1i</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ae13897f454e2626c50cc9949038ff32c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform1i</definition>
        <argsstring>(const std::string &amp;_varname, int _v0) const  noexcept</argsstring>
        <name>setRegisteredUniform1i</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v0</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single int </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="225" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="315" bodyend="324"/>
        <references refid="glew_8h_1abf9380e68d38f458f86a54870846026e" compoundref="glew_8h" startline="1947">glUniform1i</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1aa7cc6bb8581693e2d6d002f7343f3a13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform2i</definition>
        <argsstring>(const std::string &amp;_varname, int _v0, int _v1) const  noexcept</argsstring>
        <name>setRegisteredUniform2i</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single int </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="233" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="327" bodyend="336"/>
        <references refid="glew_8h_1a7fc90045a636a795e582a2c1267948ca" compoundref="glew_8h" startline="1951">glUniform2i</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a23fd1d52e3e69ec89e75ab01330a9606" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform3i</definition>
        <argsstring>(const std::string &amp;_varname, int _v0, int _v1, int _v2) const  noexcept</argsstring>
        <name>setRegisteredUniform3i</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single int </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="241" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="340" bodyend="348"/>
        <references refid="glew_8h_1a110b969f3eb1fafb2d361ce505498fd9" compoundref="glew_8h" startline="1955">glUniform3i</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a684749e11d096828e405caa27ec6663b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniform4i</definition>
        <argsstring>(const std::string &amp;_varname, int _v0, int _v1, int _v2, int _v3) const  noexcept</argsstring>
        <name>setRegisteredUniform4i</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v2</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>sets the registered uniform to a single int </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="251" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="351" bodyend="360"/>
        <references refid="glew_8h_1a5db8cab9ed3836c5e3a32214882a3874" compoundref="glew_8h" startline="1959">glUniform4i</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1afbddc2598a60dc6fac1a9778f9840a4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform2i</definition>
        <argsstring>(const char *_varname, GLint _v0, GLint _v1) const  noexcept</argsstring>
        <name>setUniform2i</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a int2 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="259" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="362" bodyend="366"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a7fc90045a636a795e582a2c1267948ca" compoundref="glew_8h" startline="1951">glUniform2i</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ab01cec17edafccdee07a14bb5207c8dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform3i</definition>
        <argsstring>(const char *_varname, GLint _v0, GLint _v1, GLint _v2) const  noexcept</argsstring>
        <name>setUniform3i</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v2</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a int3 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="268" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="368" bodyend="372"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a110b969f3eb1fafb2d361ce505498fd9" compoundref="glew_8h" startline="1955">glUniform3i</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a8602a28bfcff1a5e31e2f14be8c744f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform4i</definition>
        <argsstring>(const char *_varname, GLint _v0, GLint _v1, GLint _v2, GLint _v3) const  noexcept</argsstring>
        <name>setUniform4i</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v0</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v1</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v2</declname>
        </param>
        <param>
          <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_v3</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a float4 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>-name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v0</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_v3</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="278" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="374" bodyend="378"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a5db8cab9ed3836c5e3a32214882a3874" compoundref="glew_8h" startline="1959">glUniform4i</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ac80c71f5cbafc3b5a616f91dc375d5d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform1iv</definition>
        <argsstring>(const char *_varname, size_t _count, const GLint *_value) const  noexcept</argsstring>
        <name>setUniform1iv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref> *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 1D int array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="286" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="380" bodyend="384"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a7c47f9ffec65859a57a432fb366b9d36" compoundref="glew_8h" startline="1948">glUniform1iv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a5d86387f962c46e00fe74353d1b62716" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform2iv</definition>
        <argsstring>(const char *_varname, size_t _count, const GLint *_value) const  noexcept</argsstring>
        <name>setUniform2iv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref> *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 2D int array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="294" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="386" bodyend="389"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1af6f6605dcba84d5d873fed44fbc96f96" compoundref="glew_8h" startline="1952">glUniform2iv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1acf25198d867f71f96da77e4d204faa11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform3iv</definition>
        <argsstring>(const char *_varname, size_t _count, const GLint *_value) const  noexcept</argsstring>
        <name>setUniform3iv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref> *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 3D int array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="302" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="391" bodyend="395"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a95762f7dc966f361c756f5e90a957731" compoundref="glew_8h" startline="1956">glUniform3iv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a705670374c505e0db96fa6d105142401" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniform4iv</definition>
        <argsstring>(const char *_varname, size_t _count, const GLint *_value) const  noexcept</argsstring>
        <name>setUniform4iv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref> *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 4D int array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new _value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="310" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="397" bodyend="400"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1aaf1ddfef4edd75bda5ff88270ea8b699" compoundref="glew_8h" startline="1960">glUniform4iv</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set Program Matrix Args</header>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a6a9ff5c74f90990db55f71aef76608a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix2fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix2fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 2D matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="324" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="404" bodyend="407"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1aa9ad56ab6b3ac0be4283a9adc9f964b3" compoundref="glew_8h" startline="1961">glUniformMatrix2fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a1e7bb1e988a805e0c3bc139721776310" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix3fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix3fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 3D matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="333" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="410" bodyend="414"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a847304805951481f5b241560bcff043e" compoundref="glew_8h" startline="1962">glUniformMatrix3fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a76d43c0d81ec057868f67b74cc963db9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniformMatrix3fv</definition>
        <argsstring>(const std::string &amp;_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setRegisteredUniformMatrix3fv</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 3D matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="341" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="418" bodyend="427"/>
        <references refid="glew_8h_1a847304805951481f5b241560bcff043e" compoundref="glew_8h" startline="1962">glUniformMatrix3fv</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1aedbb11de67734344ff99d99acdb47850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix4fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix4fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 4D matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="349" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="429" bodyend="432"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a1cd4c6b9e1fb6b4eb927ab0997de48ef" compoundref="glew_8h" startline="1963">glUniformMatrix4fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a779115eed82c36f92fae219eb0396320" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setRegisteredUniformMatrix4fv</definition>
        <argsstring>(const std::string &amp;_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setRegisteredUniformMatrix4fv</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 4D matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="358" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="436" bodyend="445"/>
        <references refid="glew_8h_1a1cd4c6b9e1fb6b4eb927ab0997de48ef" compoundref="glew_8h" startline="1963">glUniformMatrix4fv</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set Program Matrix Args (only available in OpenGL 2.1)</header>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a1b5fcd9922c1b5bf7c8791d9780c42f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix2x3fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix2x3fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 2x3 matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="372" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="451" bodyend="454"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a0470de2356279acbf2f7fa498e22bbb5" compoundref="glew_8h" startline="2044">glUniformMatrix2x3fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1af1b66af4776b0c810af001ba781df415" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix2x4fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix2x4fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 2x4 matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="381" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="457" bodyend="461"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1ad64ea1144827b327f152d40604d351dc" compoundref="glew_8h" startline="2045">glUniformMatrix2x4fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a71acb11f7fdfea8cb36ed9bd6ee620c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix3x2fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix3x2fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 3x2 matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="390" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="463" bodyend="467"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1ace7581fcfce316e70983c2483f1805a6" compoundref="glew_8h" startline="2046">glUniformMatrix3x2fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1aa1a6bb0be5282799b50b281aa5485ee2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix3x4fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix3x4fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 3x4 matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="399" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="470" bodyend="474"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a0d1bb5415599ba20add1d20451f44834" compoundref="glew_8h" startline="2047">glUniformMatrix3x4fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ad374f905f3237dac054fe10b84cee53d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix4x2fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix4x2fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 4x2 matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="408" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="476" bodyend="480"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1ac085d5750b97f1ab1867c354df86a830" compoundref="glew_8h" startline="2048">glUniformMatrix4x2fv</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a966c53c95ddbfad1e450093f66459a9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::setUniformMatrix4x3fv</definition>
        <argsstring>(const char *_varname, size_t _count, bool _transpose, const float *_value) const  noexcept</argsstring>
        <name>setUniformMatrix4x3fv</name>
        <param>
          <type>const char *</type>
          <declname>_varname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_transpose</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>sets &apos;_varname&apos; as a 4x3 matrix array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_varname</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- num elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transpose</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true will transpose the matrix values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value for the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="417" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="483" bodyend="487"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1acb1097a396aedb5da1f182bd7ed6d431" compoundref="glew_8h" startline="2049">glUniformMatrix4x3fv</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>get program arguments</header>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a07571e110d9aea4c2376eb6d26c2025e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::getUniformfv</definition>
        <argsstring>(const char *_name, float *o_values) const  noexcept</argsstring>
        <name>getUniformfv</name>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>o_values</declname>
        </param>
        <briefdescription>
<para>gets the current value of the specified uniform var </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o_values</parametername>
</parameternamelist>
<parameterdescription>
<para>- the output value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="428" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="490" bodyend="493"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a5c5ce6b43070d3280cc4bacc9b243313" compoundref="glew_8h" startline="1932">glGetUniformfv</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1aa16038db104994b6b31bc56082202b5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::getUniformiv</definition>
        <argsstring>(const char *_name, int *o_values) const  noexcept</argsstring>
        <name>getUniformiv</name>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>o_values</declname>
        </param>
        <briefdescription>
<para>gets the current value of the specified uniform var </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the uniform variable to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o_values</parametername>
</parameternamelist>
<parameterdescription>
<para>- the output value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="435" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="496" bodyend="499"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a3cc195ca15e0f1ce9bb05b9c912b4e60" compoundref="glew_8h" startline="1933">glGetUniformiv</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>vertex array functions.</header>
      <description><para>These functions simplify the binding of per-vertex data as a vertex array (or VBO). </para></description>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1a518bcf9a7d9c29e73549037affdce783" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::ShaderProgram::m_linked</definition>
        <argsstring></argsstring>
        <name>m_linked</name>
        <briefdescription>
<para>flag to indicate if the current Program has been linked </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="482" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="482" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1a8deb24c9b772a49bcbacdf952a85d5d5" compoundref="_shader_program_8cpp" startline="75" endline="85">bindAttribute</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a6ca57cf5b20bcfa53708de3de88fbfc5" compoundref="_shader_program_8cpp" startline="87" endline="99">bindFragDataLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" compoundref="_shader_program_8cpp" startline="102" endline="134">link</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1ac521ce74e069e193bc4b5abd471de8a1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> * &gt;</type>
        <definition>std::vector&lt;Shader *&gt; ngl::ShaderProgram::m_shaders</definition>
        <argsstring></argsstring>
        <name>m_shaders</name>
        <briefdescription>
<para>a list of the shader objects attached to the program </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="486" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="486" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1ab04eed16465b887de85092e3172d304a" compoundref="_shader_program_8cpp" startline="68" endline="72">attachShader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::ShaderProgram::m_programID</definition>
        <argsstring></argsstring>
        <name>m_programID</name>
        <briefdescription>
<para>the program id for this program object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="490" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="490" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1a2d2eadcfc48cc2e2ddb82aba70553a9f" compoundref="_shader_program_8cpp" startline="46" endline="50">~ShaderProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1adec315c2b48d5fa2917eeaed84e2eb80" compoundref="_shader_program_8cpp" startline="52" endline="58">use</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ab04eed16465b887de85092e3172d304a" compoundref="_shader_program_8cpp" startline="68" endline="72">attachShader</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a8deb24c9b772a49bcbacdf952a85d5d5" compoundref="_shader_program_8cpp" startline="75" endline="85">bindAttribute</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a6ca57cf5b20bcfa53708de3de88fbfc5" compoundref="_shader_program_8cpp" startline="87" endline="99">bindFragDataLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" compoundref="_shader_program_8cpp" startline="102" endline="134">link</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ad4af8ff430af3d8756ca8b63c797639c" compoundref="_shader_program_8cpp" startline="158" endline="176">printActiveUniforms</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ab890dd7475cc48223e1245cb41ea3a4c" compoundref="_shader_program_8cpp" startline="178" endline="208">printActiveAttributes</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a07571e110d9aea4c2376eb6d26c2025e" compoundref="_shader_program_8cpp" startline="490" endline="493">getUniformfv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1aa16038db104994b6b31bc56082202b5f" compoundref="_shader_program_8cpp" startline="496" endline="499">getUniformiv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a0516130d40a75674bb76bfd25cb5438f" compoundref="_shader_program_8cpp" startline="532" endline="535">getUniformBlockIndex</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a857ee599b65542841ccc8d4841c99336" compoundref="_shader_program_8cpp" startline="538" endline="580">autoRegisterUniforms</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1a5710d42a02d5d75380a04d4622925080" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::ShaderProgram::m_debugState</definition>
        <argsstring></argsstring>
        <name>m_debugState</name>
        <briefdescription>
<para>debug mode flag </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="494" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="494" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" compoundref="_shader_program_8cpp" startline="102" endline="134">link</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1a96ad28d961366848da321d378fe3a812" prot="private" static="no" mutable="no">
        <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>std::string ngl::ShaderProgram::m_programName</definition>
        <argsstring></argsstring>
        <name>m_programName</name>
        <briefdescription>
<para>text name of the current program used in lookup and debugging </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="498" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="498" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1a2d2eadcfc48cc2e2ddb82aba70553a9f" compoundref="_shader_program_8cpp" startline="46" endline="50">~ShaderProgram</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" compoundref="_shader_program_8cpp" startline="102" endline="134">link</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ae24343aee5eaf355a17a82ac66193fb5" compoundref="_shader_program_8cpp" startline="582" endline="713">printRegisteredUniforms</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1a1bb3c670f091c72604ba09f21ca8b329" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>, <ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, GLuint &gt; ngl::ShaderProgram::m_attribs</definition>
        <argsstring></argsstring>
        <name>m_attribs</name>
        <briefdescription>
<para>a list of attributes for this object, mapping name to ID number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="502" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="502" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1a8deb24c9b772a49bcbacdf952a85d5d5" compoundref="_shader_program_8cpp" startline="75" endline="85">bindAttribute</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a6ca57cf5b20bcfa53708de3de88fbfc5" compoundref="_shader_program_8cpp" startline="87" endline="99">bindFragDataLocation</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a63e57cd46a07aa26eeb262500eb07c01" compoundref="_shader_program_8cpp" startline="503" endline="514">enableAttribArray</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>, <ref refid="structngl_1_1_shader_program_1_1uniform_data" kindref="compound">uniformData</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, uniformData&gt; ngl::ShaderProgram::m_registeredUniforms</definition>
        <argsstring></argsstring>
        <name>m_registeredUniforms</name>
        <briefdescription>
<para>a list of uniforms for this object, mapping name to ID number must be added by the user using the registerUniform method </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="519" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="519" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1a8215de393b7d5a52953c632b49624b92" compoundref="_shader_program_8cpp" startline="218" endline="227">setRegisteredUniform1f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ac3719bdfd595be06d7e99114cd3acd11" compoundref="_shader_program_8cpp" startline="236" endline="245">setRegisteredUniform2f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a8b56a061bb25feee44dd2e54af6f9049" compoundref="_shader_program_8cpp" startline="253" endline="262">setRegisteredUniform3f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a4dfe246ee7290678c431fd3ff353c0b4" compoundref="_shader_program_8cpp" startline="270" endline="279">setRegisteredUniform4f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ae13897f454e2626c50cc9949038ff32c" compoundref="_shader_program_8cpp" startline="315" endline="324">setRegisteredUniform1i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1aa7cc6bb8581693e2d6d002f7343f3a13" compoundref="_shader_program_8cpp" startline="327" endline="336">setRegisteredUniform2i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a23fd1d52e3e69ec89e75ab01330a9606" compoundref="_shader_program_8cpp" startline="340" endline="348">setRegisteredUniform3i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a684749e11d096828e405caa27ec6663b" compoundref="_shader_program_8cpp" startline="351" endline="360">setRegisteredUniform4i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a76d43c0d81ec057868f67b74cc963db9" compoundref="_shader_program_8cpp" startline="418" endline="427">setRegisteredUniformMatrix3fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a779115eed82c36f92fae219eb0396320" compoundref="_shader_program_8cpp" startline="436" endline="445">setRegisteredUniformMatrix4fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a857ee599b65542841ccc8d4841c99336" compoundref="_shader_program_8cpp" startline="538" endline="580">autoRegisterUniforms</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ae24343aee5eaf355a17a82ac66193fb5" compoundref="_shader_program_8cpp" startline="582" endline="713">printRegisteredUniforms</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_shader_program_1afc6d9c8095b10abfd6ed1d82eeaa999f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ngl::ShaderProgram::m_active</definition>
        <argsstring></argsstring>
        <name>m_active</name>
        <briefdescription>
<para>indicate if this program is the current active program </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="523" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="523" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_program_1adec315c2b48d5fa2917eeaed84e2eb80" compoundref="_shader_program_8cpp" startline="52" endline="58">use</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ac5f5e6d34990ce86096315bade8fe3c0" compoundref="_shader_program_8cpp" startline="61" endline="65">unbind</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ad4af8ff430af3d8756ca8b63c797639c" compoundref="_shader_program_8cpp" startline="158" endline="176">printActiveUniforms</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a63e57cd46a07aa26eeb262500eb07c01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::enableAttribArray</definition>
        <argsstring>(const char *_name) const  noexcept</argsstring>
        <name>enableAttribArray</name>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>enables the specified varying array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name of the varying attr array to enable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="447" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="503" bodyend="514"/>
        <references refid="glew_8h_1a6e8ee482001ee8fb9b3d4851116779b4" compoundref="glew_8h" startline="1921">glEnableVertexAttribArray</references>
        <references refid="classngl_1_1_shader_program_1a1bb3c670f091c72604ba09f21ca8b329" compoundref="_shader_program_8h" startline="502">m_attribs</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a191cb3dffa4c8dd7261bfd1ab7dabeb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::disableAttribArray</definition>
        <argsstring>(const char *_name) const  noexcept</argsstring>
        <name>disableAttribArray</name>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>disables the specified varying array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name of the varying attr array to enable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="453" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="517" bodyend="521"/>
        <references refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" compoundref="_shader_program_8cpp" startline="138" endline="148">getUniformLocation</references>
        <references refid="glew_8h_1a0903ee19d8321a1e456bebb54a65ee2a" compoundref="glew_8h" startline="1919">glDisableVertexAttribArray</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a857ee599b65542841ccc8d4841c99336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::autoRegisterUniforms</definition>
        <argsstring>() noexcept</argsstring>
        <name>autoRegisterUniforms</name>
        <briefdescription>
<para>scan the shader source and find any uniforms and register them </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="458" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="538" bodyend="580"/>
        <references refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</references>
        <references refid="glew_8h_1aeb14db2a9d0c7a5aaddec813bbdbfa22" compoundref="glew_8h" startline="1801">GL_ACTIVE_UNIFORMS</references>
        <references refid="glew_8h_1a72086daeeb80e5eb5788f42a4eea050e" compoundref="glew_8h" startline="313">GL_ZERO</references>
        <references refid="glew_8h_1aeedce93e9b95768add155ef45c79244a" compoundref="glew_8h" startline="1923">glGetActiveUniform</references>
        <references refid="glew_8h_1a511181ed70d9d4cf7463a0ffe39f836d" compoundref="glew_8h" startline="1927">glGetProgramiv</references>
        <references refid="glew_8h_1a10106e4be90a66213839645cf12770f9" compoundref="glew_8h" startline="1931">glGetUniformLocation</references>
        <references refid="structngl_1_1_shader_program_1_1uniform_data_1aa8846c4d63ef5b76f3730c2965301c79" compoundref="_shader_program_8h" startline="510">ngl::ShaderProgram::uniformData::loc</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
        <references refid="structngl_1_1_shader_program_1_1uniform_data_1a872845a59da26d5b0dcdc8a7ea2211bf" compoundref="_shader_program_8h" startline="511">ngl::ShaderProgram::uniformData::name</references>
        <references refid="structngl_1_1_shader_program_1_1uniform_data_1a661e7cbf0ab6062d0d2bf5f6066a8943" compoundref="_shader_program_8h" startline="512">ngl::ShaderProgram::uniformData::type</references>
        <referencedby refid="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" compoundref="_shader_program_8cpp" startline="102" endline="134">link</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ae24343aee5eaf355a17a82ac66193fb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::printRegisteredUniforms</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>printRegisteredUniforms</name>
        <briefdescription>
<para>debug print the registered uniforms </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="462" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="582" bodyend="713"/>
        <references refid="glew_8h_1a43c7205c5f4dc7a535bd32817766e272" compoundref="glew_8h" startline="1782">GL_BOOL</references>
        <references refid="glew_8h_1a40a09ccdfe230775cf871b10f4361183" compoundref="glew_8h" startline="1783">GL_BOOL_VEC2</references>
        <references refid="glew_8h_1a0c51fbe743a6c9da5d2f7ac4306b66df" compoundref="glew_8h" startline="1784">GL_BOOL_VEC3</references>
        <references refid="glew_8h_1a1985184535af747c30a8a12481e2ffd9" compoundref="glew_8h" startline="1785">GL_BOOL_VEC4</references>
        <references refid="glew_8h_1a168baa99f276efe13286cb5c8f339735" compoundref="glew_8h" startline="646">GL_DOUBLE</references>
        <references refid="glew_8h_1aea0016b5408b545db3ce7f1ab2ee3d0d" compoundref="glew_8h" startline="4715">GL_DOUBLE_MAT2</references>
        <references refid="glew_8h_1a00a4cb3667d844ccdd572844e216e3dc" compoundref="glew_8h" startline="4718">GL_DOUBLE_MAT2x3</references>
        <references refid="glew_8h_1a28e30eb0dce33edba2bcdf188821d0a7" compoundref="glew_8h" startline="4719">GL_DOUBLE_MAT2x4</references>
        <references refid="glew_8h_1a53b5d4f6dd72882b5aee275db3895f1a" compoundref="glew_8h" startline="4716">GL_DOUBLE_MAT3</references>
        <references refid="glew_8h_1a3f4fb19fb08686b7f4b0122718166a75" compoundref="glew_8h" startline="4720">GL_DOUBLE_MAT3x2</references>
        <references refid="glew_8h_1ac8dd75b229d3723fe63c4ced5703746f" compoundref="glew_8h" startline="4721">GL_DOUBLE_MAT3x4</references>
        <references refid="glew_8h_1ad6355b21bd0a79efef85f711e66f5e61" compoundref="glew_8h" startline="4717">GL_DOUBLE_MAT4</references>
        <references refid="glew_8h_1a098d1542b777df9372dff0aa37a28cb6" compoundref="glew_8h" startline="4722">GL_DOUBLE_MAT4x2</references>
        <references refid="glew_8h_1a9d611eb66917c70520353c975772cbbc" compoundref="glew_8h" startline="4723">GL_DOUBLE_MAT4x3</references>
        <references refid="glew_8h_1a412458927d3eb02cda5888633bfd84f4" compoundref="glew_8h" startline="4724">GL_DOUBLE_VEC2</references>
        <references refid="glew_8h_1a2464f42d1aa132525ea73970c39ad1b6" compoundref="glew_8h" startline="4725">GL_DOUBLE_VEC3</references>
        <references refid="glew_8h_1a33b68a8a87d58fab083f7e9d517a7bc7" compoundref="glew_8h" startline="4726">GL_DOUBLE_VEC4</references>
        <references refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" compoundref="glew_8h" startline="642">GL_FLOAT</references>
        <references refid="glew_8h_1ab66c332d55f70b7fe36640d49235a7d7" compoundref="glew_8h" startline="1786">GL_FLOAT_MAT2</references>
        <references refid="glew_8h_1a3117745c4bac9c9d9a6b84229a4f553f" compoundref="glew_8h" startline="2018">GL_FLOAT_MAT2x3</references>
        <references refid="glew_8h_1aba62d0bf6d4cf702d57410e8cb000185" compoundref="glew_8h" startline="2019">GL_FLOAT_MAT2x4</references>
        <references refid="glew_8h_1a61fcf58656eb22c75d2353e091458e0f" compoundref="glew_8h" startline="1787">GL_FLOAT_MAT3</references>
        <references refid="glew_8h_1ab5022a1a24299368b061b3f4b1cac950" compoundref="glew_8h" startline="2020">GL_FLOAT_MAT3x2</references>
        <references refid="glew_8h_1a0940ecca4dc2ffdcf71cfd54e40180ec" compoundref="glew_8h" startline="2021">GL_FLOAT_MAT3x4</references>
        <references refid="glew_8h_1af2f9eda8aec4c169cf1800b61ead61fb" compoundref="glew_8h" startline="1788">GL_FLOAT_MAT4</references>
        <references refid="glew_8h_1a73de4bfbe1d597cd11fb3d60ed830c31" compoundref="glew_8h" startline="2022">GL_FLOAT_MAT4x2</references>
        <references refid="glew_8h_1afa821271f6254cd1623a1311e608df17" compoundref="glew_8h" startline="2023">GL_FLOAT_MAT4x3</references>
        <references refid="glew_8h_1ae32c545990d8412e8a8246632df99824" compoundref="glew_8h" startline="1776">GL_FLOAT_VEC2</references>
        <references refid="glew_8h_1a3bd312b25bbe841d5231ad69c4a0541a" compoundref="glew_8h" startline="1777">GL_FLOAT_VEC3</references>
        <references refid="glew_8h_1a696cfaceb3256bf19e990e46702fe527" compoundref="glew_8h" startline="1778">GL_FLOAT_VEC4</references>
        <references refid="glew_8h_1afaca39e948bd04293fcefbfbbedfb690" compoundref="glew_8h" startline="6156">GL_IMAGE_1D</references>
        <references refid="glew_8h_1a2b97de733ff35400bbd6c48b481f53a2" compoundref="glew_8h" startline="6162">GL_IMAGE_1D_ARRAY</references>
        <references refid="glew_8h_1a9e56295ed80d2c92957857ce48dc79ab" compoundref="glew_8h" startline="6157">GL_IMAGE_2D</references>
        <references refid="glew_8h_1a2f3d98d39802bfaa7068eb1a45a1ca81" compoundref="glew_8h" startline="6163">GL_IMAGE_2D_ARRAY</references>
        <references refid="glew_8h_1a3362ff1997f1b5c9865389babf4df571" compoundref="glew_8h" startline="6165">GL_IMAGE_2D_MULTISAMPLE</references>
        <references refid="glew_8h_1af69862c8c7c5fd629f83c5b58b522cbb" compoundref="glew_8h" startline="6166">GL_IMAGE_2D_MULTISAMPLE_ARRAY</references>
        <references refid="glew_8h_1a0303a66febf99509752dee3312361aa0" compoundref="glew_8h" startline="6159">GL_IMAGE_2D_RECT</references>
        <references refid="glew_8h_1a4028acb562ce2d278ea49d4b1b3ab5d4" compoundref="glew_8h" startline="6158">GL_IMAGE_3D</references>
        <references refid="glew_8h_1a3d128307638a2c264a4e1051ff3c4698" compoundref="glew_8h" startline="6161">GL_IMAGE_BUFFER</references>
        <references refid="glew_8h_1a2ad6ae0634513302fb8b3bbd9ca592ea" compoundref="glew_8h" startline="6160">GL_IMAGE_CUBE</references>
        <references refid="glew_8h_1a165997187828b3a8a0db9d49d568406b" compoundref="glew_8h" startline="640">GL_INT</references>
        <references refid="glew_8h_1abe8795c2f4295916262426b164448242" compoundref="glew_8h" startline="6167">GL_INT_IMAGE_1D</references>
        <references refid="glew_8h_1a6cab5df0e6e90a1bed6d01bf7c5a8ed3" compoundref="glew_8h" startline="6173">GL_INT_IMAGE_1D_ARRAY</references>
        <references refid="glew_8h_1ae3baba5adff7cf3146bb50748d81bc79" compoundref="glew_8h" startline="6168">GL_INT_IMAGE_2D</references>
        <references refid="glew_8h_1a165b085b6b98b09c44e73241fa5d12d8" compoundref="glew_8h" startline="6174">GL_INT_IMAGE_2D_ARRAY</references>
        <references refid="glew_8h_1a1783d003f39c0383a6c4ce962b0a2bab" compoundref="glew_8h" startline="6176">GL_INT_IMAGE_2D_MULTISAMPLE</references>
        <references refid="glew_8h_1a0a1b24f27df61b571afe40df5afad5e4" compoundref="glew_8h" startline="6177">GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY</references>
        <references refid="glew_8h_1aafefbf0cfdb69e021fdd71785311901a" compoundref="glew_8h" startline="6170">GL_INT_IMAGE_2D_RECT</references>
        <references refid="glew_8h_1a980801f735b61bb47d2a389a47c4435a" compoundref="glew_8h" startline="6169">GL_INT_IMAGE_3D</references>
        <references refid="glew_8h_1aa6abf983392627c47729df2492d2b196" compoundref="glew_8h" startline="6172">GL_INT_IMAGE_BUFFER</references>
        <references refid="glew_8h_1a6bfdaecfe5c4da64f8b8fa8926938380" compoundref="glew_8h" startline="6171">GL_INT_IMAGE_CUBE</references>
        <references refid="glew_8h_1a931bf275b8b13f18eed4a7bc534c2ef7" compoundref="glew_8h" startline="2149">GL_INT_SAMPLER_1D</references>
        <references refid="glew_8h_1a853a008b96c295bb9a8a1badffd0b80e" compoundref="glew_8h" startline="2153">GL_INT_SAMPLER_1D_ARRAY</references>
        <references refid="glew_8h_1a43bc4184cf923a57ed4c78746fa97334" compoundref="glew_8h" startline="2150">GL_INT_SAMPLER_2D</references>
        <references refid="glew_8h_1ac26498867290996a56d1f1d317433433" compoundref="glew_8h" startline="2154">GL_INT_SAMPLER_2D_ARRAY</references>
        <references refid="glew_8h_1a1f0bf36b94c6885b03c689e10a23cb7f" compoundref="glew_8h" startline="7033">GL_INT_SAMPLER_2D_MULTISAMPLE</references>
        <references refid="glew_8h_1a67b9db3c40a6fba410434542c41e904f" compoundref="glew_8h" startline="7036">GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY</references>
        <references refid="glew_8h_1a1dde71e060e88ab71e7a592f26006b71" compoundref="glew_8h" startline="2299">GL_INT_SAMPLER_2D_RECT</references>
        <references refid="glew_8h_1a279e4070fee3984c3e193a9e74b704c5" compoundref="glew_8h" startline="2151">GL_INT_SAMPLER_3D</references>
        <references refid="glew_8h_1ab314daeefdbc32ef33762c754c532b29" compoundref="glew_8h" startline="2300">GL_INT_SAMPLER_BUFFER</references>
        <references refid="glew_8h_1a33fd971141c7ba576be327f1594c47ab" compoundref="glew_8h" startline="2152">GL_INT_SAMPLER_CUBE</references>
        <references refid="glew_8h_1a2e72a47b144427174af2d6d87a7ab073" compoundref="glew_8h" startline="1779">GL_INT_VEC2</references>
        <references refid="glew_8h_1a08b6c6a8259ac4ad9ad5d8e7c3d13bb1" compoundref="glew_8h" startline="1780">GL_INT_VEC3</references>
        <references refid="glew_8h_1ae3fd6dab6e2260ce7fa4cdccbcfba0fb" compoundref="glew_8h" startline="1781">GL_INT_VEC4</references>
        <references refid="glew_8h_1a2d29ae66c897d44f3da8b8384a097d04" compoundref="glew_8h" startline="1789">GL_SAMPLER_1D</references>
        <references refid="glew_8h_1a774df4b8e458270d95643c303d8dda3d" compoundref="glew_8h" startline="2141">GL_SAMPLER_1D_ARRAY</references>
        <references refid="glew_8h_1abb0b24207b85bbb191c0ae23b631527c" compoundref="glew_8h" startline="2143">GL_SAMPLER_1D_ARRAY_SHADOW</references>
        <references refid="glew_8h_1a457fd2d13b374061ad772e310fb7d04a" compoundref="glew_8h" startline="1793">GL_SAMPLER_1D_SHADOW</references>
        <references refid="glew_8h_1a166645e482b60d35b1d31c2f6f378238" compoundref="glew_8h" startline="1790">GL_SAMPLER_2D</references>
        <references refid="glew_8h_1ae9856a2d0adae9fcca74e8b490931f9c" compoundref="glew_8h" startline="2142">GL_SAMPLER_2D_ARRAY</references>
        <references refid="glew_8h_1acef740a709be806ff1e37d31a395a817" compoundref="glew_8h" startline="2144">GL_SAMPLER_2D_ARRAY_SHADOW</references>
        <references refid="glew_8h_1aacfbc3aea7e91e5a273183375c4d56b6" compoundref="glew_8h" startline="7032">GL_SAMPLER_2D_MULTISAMPLE</references>
        <references refid="glew_8h_1a53e6a61d3181c95751561ec7ee99c3e7" compoundref="glew_8h" startline="7035">GL_SAMPLER_2D_MULTISAMPLE_ARRAY</references>
        <references refid="glew_8h_1a62cbe4c8fa833203759310f80998c7bd" compoundref="glew_8h" startline="2291">GL_SAMPLER_2D_RECT</references>
        <references refid="glew_8h_1a60e8076f94e887855748fb2a889cb775" compoundref="glew_8h" startline="2292">GL_SAMPLER_2D_RECT_SHADOW</references>
        <references refid="glew_8h_1ae021158f10f94bab8f7d9349f90891e5" compoundref="glew_8h" startline="1794">GL_SAMPLER_2D_SHADOW</references>
        <references refid="glew_8h_1acbaf67c05cdb5290f748c28ca878e537" compoundref="glew_8h" startline="1791">GL_SAMPLER_3D</references>
        <references refid="glew_8h_1af420b8c4b319a8b8f09348568ecb0ccf" compoundref="glew_8h" startline="2298">GL_SAMPLER_BUFFER</references>
        <references refid="glew_8h_1aefd2fef024ff66a2823dfdc1639fb6ad" compoundref="glew_8h" startline="1792">GL_SAMPLER_CUBE</references>
        <references refid="glew_8h_1a2465b24179ce0f7d88e35662534b191e" compoundref="glew_8h" startline="2145">GL_SAMPLER_CUBE_SHADOW</references>
        <references refid="glew_8h_1a69b1c02ba0bd93c643c6d82e0c16eb99" compoundref="glew_8h" startline="641">GL_UNSIGNED_INT</references>
        <references refid="glew_8h_1ab154f5cb66da9fe268da849ebdd369ed" compoundref="glew_8h" startline="6076">GL_UNSIGNED_INT_ATOMIC_COUNTER</references>
        <references refid="glew_8h_1a36160176f992f4a034972665b6972b4c" compoundref="glew_8h" startline="6178">GL_UNSIGNED_INT_IMAGE_1D</references>
        <references refid="glew_8h_1a0b0e96de8497e2642a4c17089fc9d2cb" compoundref="glew_8h" startline="6184">GL_UNSIGNED_INT_IMAGE_1D_ARRAY</references>
        <references refid="glew_8h_1aa552d37690d63c36a68800fc10ba7753" compoundref="glew_8h" startline="6179">GL_UNSIGNED_INT_IMAGE_2D</references>
        <references refid="glew_8h_1abf3e359cb11434c2bf56f96d222ed974" compoundref="glew_8h" startline="6185">GL_UNSIGNED_INT_IMAGE_2D_ARRAY</references>
        <references refid="glew_8h_1a8c3478824c2bbcf0c4bc4c8c4a9fabc2" compoundref="glew_8h" startline="6187">GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE</references>
        <references refid="glew_8h_1a0a476132b4c358df252b81774e6d8e6d" compoundref="glew_8h" startline="6188">GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY</references>
        <references refid="glew_8h_1a45c13c2871db233985caa0195a3e6b16" compoundref="glew_8h" startline="6181">GL_UNSIGNED_INT_IMAGE_2D_RECT</references>
        <references refid="glew_8h_1ac79cba1d76760df869611c2a0d636f3b" compoundref="glew_8h" startline="6180">GL_UNSIGNED_INT_IMAGE_3D</references>
        <references refid="glew_8h_1a2912a1702473fb91072e1fa79e4e35a7" compoundref="glew_8h" startline="6183">GL_UNSIGNED_INT_IMAGE_BUFFER</references>
        <references refid="glew_8h_1a1304bceea389c2f260af9397ffe08bf7" compoundref="glew_8h" startline="6182">GL_UNSIGNED_INT_IMAGE_CUBE</references>
        <references refid="glew_8h_1a9e3d3929fd37a2a572e302d65b48ec4e" compoundref="glew_8h" startline="2155">GL_UNSIGNED_INT_SAMPLER_1D</references>
        <references refid="glew_8h_1ab57a5ac8d03db2f07c901066fb5fa4c0" compoundref="glew_8h" startline="2159">GL_UNSIGNED_INT_SAMPLER_1D_ARRAY</references>
        <references refid="glew_8h_1a050f32c3c00a72f1d5f6a47eed21c180" compoundref="glew_8h" startline="2156">GL_UNSIGNED_INT_SAMPLER_2D</references>
        <references refid="glew_8h_1a4e33cecaa235cad3ca1c58ee91d41a1d" compoundref="glew_8h" startline="2160">GL_UNSIGNED_INT_SAMPLER_2D_ARRAY</references>
        <references refid="glew_8h_1a4bd37ea6be85ae1eca157b99fb979e3e" compoundref="glew_8h" startline="7034">GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE</references>
        <references refid="glew_8h_1a9277206d81452ff03df08e0086049524" compoundref="glew_8h" startline="7037">GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY</references>
        <references refid="glew_8h_1a7924924eb519b5446681fc474d7d7e7c" compoundref="glew_8h" startline="2301">GL_UNSIGNED_INT_SAMPLER_2D_RECT</references>
        <references refid="glew_8h_1a7ad578693daa376d11660b858ae91c04" compoundref="glew_8h" startline="2157">GL_UNSIGNED_INT_SAMPLER_3D</references>
        <references refid="glew_8h_1a3492730d2e8b27520d2ab78b121edb30" compoundref="glew_8h" startline="2302">GL_UNSIGNED_INT_SAMPLER_BUFFER</references>
        <references refid="glew_8h_1ae5787afa2218e85510ec38122b7118e1" compoundref="glew_8h" startline="2158">GL_UNSIGNED_INT_SAMPLER_CUBE</references>
        <references refid="glew_8h_1a9b1ac6b798f3fc864b98c7e2e091b9c8" compoundref="glew_8h" startline="2146">GL_UNSIGNED_INT_VEC2</references>
        <references refid="glew_8h_1a301ef516233a3aa73acc03d547e01cfa" compoundref="glew_8h" startline="2147">GL_UNSIGNED_INT_VEC3</references>
        <references refid="glew_8h_1a5462fdf4744e7ede2cc779e03ddd34bb" compoundref="glew_8h" startline="2148">GL_UNSIGNED_INT_VEC4</references>
        <references refid="classngl_1_1_shader_program_1a96ad28d961366848da321d378fe3a812" compoundref="_shader_program_8h" startline="498">m_programName</references>
        <references refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" compoundref="_shader_program_8h" startline="519">m_registeredUniforms</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ac4da8d2fa2045573fcced7b6d7a17419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::bindFragDataLocation</definition>
        <argsstring>(GLuint _colourNumber, const char *_name) noexcept</argsstring>
        <name>bindFragDataLocation</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>_colourNumber</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>bind the fragment shader output </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_colourNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The color number to bind the user-defined varying out variable to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the output variable to bind </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="469" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="525" bodyend="530"/>
        <references refid="glew_8h_1a536b449e1e7b4d3d7f1399b9e7c9ae7f" compoundref="glew_8h" startline="2224">glBindFragDataLocation</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a0516130d40a75674bb76bfd25cb5438f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ShaderProgram::getUniformBlockIndex</definition>
        <argsstring>(const std::string &amp;_uniformBlockName) const  noexcept</argsstring>
        <name>getUniformBlockIndex</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_uniformBlockName</declname>
        </param>
        <briefdescription>
<para>get the index of a uniform bloc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_uniformBlockName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the uniform block to get the id for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the id of the block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="476" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="532" bodyend="535"/>
        <references refid="glew_8h_1ab043ad84746ad17972a074f6482fc3f2" compoundref="glew_8h" startline="7414">glGetUniformBlockIndex</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_shader_program_1af1a7c15d0b01a033bc663ea36fd9a3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShaderProgram::ShaderProgram</definition>
        <argsstring>(std::string _name) noexcept</argsstring>
        <name>ShaderProgram</name>
        <param>
          <type><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>create an OpenGL shader program it is initially empty and just has a name for id </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Program Object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="45" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="28" bodyend="45"/>
        <references refid="glew_8h_1acf9d728f2b2be42fbc2fe6dada8bcd2b" compoundref="glew_8h" startline="1914">glCreateProgram</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a2d2eadcfc48cc2e2ddb82aba70553a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ShaderProgram::~ShaderProgram</definition>
        <argsstring>()</argsstring>
        <name>~ShaderProgram</name>
        <briefdescription>
<para>dtor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="49" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="46" bodyend="50"/>
        <references refid="glew_8h_1a94c0e17529ebff9ddffdf7715b2341cc" compoundref="glew_8h" startline="1916">glDeleteProgram</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="classngl_1_1_shader_program_1a96ad28d961366848da321d378fe3a812" compoundref="_shader_program_8h" startline="498">m_programName</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1adec315c2b48d5fa2917eeaed84e2eb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::use</definition>
        <argsstring>() noexcept</argsstring>
        <name>use</name>
        <briefdescription>
<para>use this <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> object as the current Active shader once this is set it is active until unbind us called </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="54" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="52" bodyend="58"/>
        <references refid="glew_8h_1ad8e40c882d63c4671dea2ca2dfcf3046" compoundref="glew_8h" startline="1964">glUseProgram</references>
        <references refid="classngl_1_1_shader_program_1afc6d9c8095b10abfd6ed1d82eeaa999f" compoundref="_shader_program_8h" startline="523">m_active</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <referencedby refid="classngl_1_1_shader_lib_1a408e9f2b3aeaba766646ef144404100f" compoundref="_shader_lib_8cpp" startline="632" endline="636">ngl::ShaderLib::useNullProgram</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ac5f5e6d34990ce86096315bade8fe3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::unbind</definition>
        <argsstring>() noexcept</argsstring>
        <name>unbind</name>
        <briefdescription>
<para>method to unbind the current Program Object this will set the shader to be the <ref refid="glew_8h_1ad8e40c882d63c4671dea2ca2dfcf3046" kindref="member">glUseProgram(0)</ref> default value </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if we don&apos;t use this we will lose the m_active state values and we will not be able to check the current active state etc so use this once shader is finished. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="61" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="61" bodyend="65"/>
        <references refid="glew_8h_1ad8e40c882d63c4671dea2ca2dfcf3046" compoundref="glew_8h" startline="1964">glUseProgram</references>
        <references refid="classngl_1_1_shader_program_1afc6d9c8095b10abfd6ed1d82eeaa999f" compoundref="_shader_program_8h" startline="523">m_active</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ab04eed16465b887de85092e3172d304a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::attachShader</definition>
        <argsstring>(Shader *_shader) noexcept</argsstring>
        <name>attachShader</name>
        <param>
          <type><ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> *</type>
          <declname>_shader</declname>
        </param>
        <briefdescription>
<para>attach a shader to the ProgramObject </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> object to attach </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>we can attach many shaders to the ProgramObject. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="67" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="68" bodyend="72"/>
        <references refid="glew_8h_1a0cb06d612b3358bfaadbbefd7c51f1cc" compoundref="glew_8h" startline="1910">glAttachShader</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="classngl_1_1_shader_program_1ac521ce74e069e193bc4b5abd471de8a1" compoundref="_shader_program_8h" startline="486">m_shaders</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a8deb24c9b772a49bcbacdf952a85d5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::bindAttribute</definition>
        <argsstring>(GLuint index, const std::string &amp;_attribName) noexcept</argsstring>
        <name>bindAttribute</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_attribName</declname>
        </param>
        <briefdescription>
<para>bind an attribute in the Program object to _index using attribname </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index number we wish to bind to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_attribName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the attribute we wish to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="73" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="75" bodyend="85"/>
        <references refid="glew_8h_1ab6c36d9a152a7d98a26a20176afc2db8" compoundref="glew_8h" startline="1911">glBindAttribLocation</references>
        <references refid="classngl_1_1_shader_program_1a1bb3c670f091c72604ba09f21ca8b329" compoundref="_shader_program_8h" startline="502">m_attribs</references>
        <references refid="classngl_1_1_shader_program_1a518bcf9a7d9c29e73549037affdce783" compoundref="_shader_program_8h" startline="482">m_linked</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="namespacengl_1a06e0f3c96f3599a4bb7dd2dcfe8b869f" compoundref="_util_8cpp" startline="101" endline="130">ngl::NGLCheckGLError</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a6ca57cf5b20bcfa53708de3de88fbfc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::bindFragDataLocation</definition>
        <argsstring>(GLuint index, const std::string &amp;_attribName) noexcept</argsstring>
        <name>bindFragDataLocation</name>
        <param>
          <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_attribName</declname>
        </param>
        <briefdescription>
<para>bind fragment output location in the Program object to _index using attribname </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index number we wish to bind to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_attribName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the attribute we wish to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="79" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="87" bodyend="99"/>
        <references refid="glew_8h_1a536b449e1e7b4d3d7f1399b9e7c9ae7f" compoundref="glew_8h" startline="2224">glBindFragDataLocation</references>
        <references refid="classngl_1_1_shader_program_1a1bb3c670f091c72604ba09f21ca8b329" compoundref="_shader_program_8h" startline="502">m_attribs</references>
        <references refid="classngl_1_1_shader_program_1a518bcf9a7d9c29e73549037affdce783" compoundref="_shader_program_8h" startline="482">m_linked</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="namespacengl_1a06e0f3c96f3599a4bb7dd2dcfe8b869f" compoundref="_util_8cpp" startline="101" endline="130">ngl::NGLCheckGLError</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::link</definition>
        <argsstring>() noexcept</argsstring>
        <name>link</name>
        <briefdescription>
<para>link our program object with the attatched shaders if shader are not attached the program will report the linker errors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="86" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="102" bodyend="134"/>
        <references refid="classngl_1_1_shader_program_1a857ee599b65542841ccc8d4841c99336" compoundref="_shader_program_8cpp" startline="538" endline="580">autoRegisterUniforms</references>
        <references refid="glew_8h_1abca6d43f43fae31f49dcb883b2f301f6" compoundref="glew_8h" startline="314">GL_FALSE</references>
        <references refid="glew_8h_1ae77c1e831fd164e9ac6c1a9cdb697ce5" compoundref="glew_8h" startline="1799">GL_INFO_LOG_LENGTH</references>
        <references refid="glew_8h_1ae644ef6b281c9378fa49d9b1ccefaf31" compoundref="glew_8h" startline="1797">GL_LINK_STATUS</references>
        <references refid="glew_8h_1ad0eeab6a26c94a0b78c04aac628e5ab5" compoundref="glew_8h" startline="1926">glGetProgramInfoLog</references>
        <references refid="glew_8h_1a511181ed70d9d4cf7463a0ffe39f836d" compoundref="glew_8h" startline="1927">glGetProgramiv</references>
        <references refid="glew_8h_1ad241352c6eee6e79f09942ef0771db47" compoundref="glew_8h" startline="1940">glLinkProgram</references>
        <references refid="glew_8h_1ad8e40c882d63c4671dea2ca2dfcf3046" compoundref="glew_8h" startline="1964">glUseProgram</references>
        <references refid="classngl_1_1_shader_program_1a5710d42a02d5d75380a04d4622925080" compoundref="_shader_program_8h" startline="494">m_debugState</references>
        <references refid="classngl_1_1_shader_program_1a518bcf9a7d9c29e73549037affdce783" compoundref="_shader_program_8h" startline="482">m_linked</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="classngl_1_1_shader_program_1a96ad28d961366848da321d378fe3a812" compoundref="_shader_program_8h" startline="498">m_programName</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ad3e579a4717a5954405fe20c9ef0d0b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::ShaderProgram::getID</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getID</name>
        <briefdescription>
<para>get the ProgramID for the Program </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="90" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
        <definition>GLint ShaderProgram::getUniformLocation</definition>
        <argsstring>(const char *_name) const  noexcept</argsstring>
        <name>getUniformLocation</name>
        <param>
          <type>const char *</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>returns the ID of the uniform attribute called &apos;name&apos;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the uniform variable id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="96" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="138" bodyend="148"/>
        <references refid="glew_8h_1a10106e4be90a66213839645cf12770f9" compoundref="glew_8h" startline="1931">glGetUniformLocation</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <references refid="classngl_1_1_shader_program_1a96ad28d961366848da321d378fe3a812" compoundref="_shader_program_8h" startline="498">m_programName</references>
        <referencedby refid="classngl_1_1_shader_program_1ae32bd664f28750e3d2c9c7c7f9974671" compoundref="_shader_program_8cpp" startline="212" endline="215">setUniform1f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a2c1220bdb56086ca3fa6e0b97344fa20" compoundref="_shader_program_8cpp" startline="229" endline="232">setUniform2f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a6ec93e6a1fcda810086c66aaea97aaba" compoundref="_shader_program_8cpp" startline="248" endline="251">setUniform3f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ae4d94a44a30420fc2f7fffc30dee240e" compoundref="_shader_program_8cpp" startline="264" endline="268">setUniform4f</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a2a05c0112b83557e8d7e4c0b7bad0644" compoundref="_shader_program_8cpp" startline="282" endline="285">setUniform1fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1adcc1dd1f4a24fe39d698f00238458bd4" compoundref="_shader_program_8cpp" startline="288" endline="291">setUniform2fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a69c4f9822e82cffc83d6d70c3235faa2" compoundref="_shader_program_8cpp" startline="294" endline="297">setUniform3fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a83a129472b87b7605b7b8b6ab5bf151f" compoundref="_shader_program_8cpp" startline="300" endline="304">setUniform4fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ae714f5f7dfb6bc3df18aedb13de139e8" compoundref="_shader_program_8cpp" startline="308" endline="312">setUniform1i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1afbddc2598a60dc6fac1a9778f9840a4c" compoundref="_shader_program_8cpp" startline="362" endline="366">setUniform2i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ab01cec17edafccdee07a14bb5207c8dc" compoundref="_shader_program_8cpp" startline="368" endline="372">setUniform3i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a8602a28bfcff1a5e31e2f14be8c744f3" compoundref="_shader_program_8cpp" startline="374" endline="378">setUniform4i</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ac80c71f5cbafc3b5a616f91dc375d5d1" compoundref="_shader_program_8cpp" startline="380" endline="384">setUniform1iv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a5d86387f962c46e00fe74353d1b62716" compoundref="_shader_program_8cpp" startline="386" endline="389">setUniform2iv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1acf25198d867f71f96da77e4d204faa11" compoundref="_shader_program_8cpp" startline="391" endline="395">setUniform3iv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a705670374c505e0db96fa6d105142401" compoundref="_shader_program_8cpp" startline="397" endline="400">setUniform4iv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a6a9ff5c74f90990db55f71aef76608a7" compoundref="_shader_program_8cpp" startline="404" endline="407">setUniformMatrix2fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a1e7bb1e988a805e0c3bc139721776310" compoundref="_shader_program_8cpp" startline="410" endline="414">setUniformMatrix3fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1aedbb11de67734344ff99d99acdb47850" compoundref="_shader_program_8cpp" startline="429" endline="432">setUniformMatrix4fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a1b5fcd9922c1b5bf7c8791d9780c42f1" compoundref="_shader_program_8cpp" startline="451" endline="454">setUniformMatrix2x3fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1af1b66af4776b0c810af001ba781df415" compoundref="_shader_program_8cpp" startline="457" endline="461">setUniformMatrix2x4fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a71acb11f7fdfea8cb36ed9bd6ee620c9" compoundref="_shader_program_8cpp" startline="463" endline="467">setUniformMatrix3x2fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1aa1a6bb0be5282799b50b281aa5485ee2" compoundref="_shader_program_8cpp" startline="470" endline="474">setUniformMatrix3x4fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1ad374f905f3237dac054fe10b84cee53d" compoundref="_shader_program_8cpp" startline="476" endline="480">setUniformMatrix4x2fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a966c53c95ddbfad1e450093f66459a9e" compoundref="_shader_program_8cpp" startline="483" endline="487">setUniformMatrix4x3fv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a07571e110d9aea4c2376eb6d26c2025e" compoundref="_shader_program_8cpp" startline="490" endline="493">getUniformfv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1aa16038db104994b6b31bc56082202b5f" compoundref="_shader_program_8cpp" startline="496" endline="499">getUniformiv</referencedby>
        <referencedby refid="classngl_1_1_shader_program_1a191cb3dffa4c8dd7261bfd1ab7dabeb4" compoundref="_shader_program_8cpp" startline="517" endline="521">disableAttribArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ad4af8ff430af3d8756ca8b63c797639c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::printActiveUniforms</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>printActiveUniforms</name>
        <briefdescription>
<para>lists the available uniforms for the shader (this was a pain because the compiler quietly gets rid of unused uniforms). method written by Richard Southern. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="102" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="158" bodyend="176"/>
        <references refid="glew_8h_1aeb14db2a9d0c7a5aaddec813bbdbfa22" compoundref="glew_8h" startline="1801">GL_ACTIVE_UNIFORMS</references>
        <references refid="glew_8h_1a956cdec28f3a16460befcb2a2a209ce9" compoundref="glew_8h" startline="7411">glGetActiveUniformName</references>
        <references refid="glew_8h_1a511181ed70d9d4cf7463a0ffe39f836d" compoundref="glew_8h" startline="1927">glGetProgramiv</references>
        <references refid="classngl_1_1_shader_program_1afc6d9c8095b10abfd6ed1d82eeaa999f" compoundref="_shader_program_8h" startline="523">m_active</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <referencedby refid="classngl_1_1_shader_program_1a23a21d6cbb984aaaaf8cd7735796eaa5" compoundref="_shader_program_8cpp" startline="150" endline="155">printProperties</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1ab890dd7475cc48223e1245cb41ea3a4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::printActiveAttributes</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>printActiveAttributes</name>
        <briefdescription>
<para>lists the available Attributes for the shader (this was a pain because the compiler quietly gets rid of unused uniforms). method written by Richard Southern. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="107" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="178" bodyend="208"/>
        <references refid="glew_8h_1aa7c727896f0964d71eacb6ccb57ad328" compoundref="glew_8h" startline="1804">GL_ACTIVE_ATTRIBUTES</references>
        <references refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" compoundref="glew_8h" startline="642">GL_FLOAT</references>
        <references refid="glew_8h_1ab66c332d55f70b7fe36640d49235a7d7" compoundref="glew_8h" startline="1786">GL_FLOAT_MAT2</references>
        <references refid="glew_8h_1a3117745c4bac9c9d9a6b84229a4f553f" compoundref="glew_8h" startline="2018">GL_FLOAT_MAT2x3</references>
        <references refid="glew_8h_1aba62d0bf6d4cf702d57410e8cb000185" compoundref="glew_8h" startline="2019">GL_FLOAT_MAT2x4</references>
        <references refid="glew_8h_1a61fcf58656eb22c75d2353e091458e0f" compoundref="glew_8h" startline="1787">GL_FLOAT_MAT3</references>
        <references refid="glew_8h_1ab5022a1a24299368b061b3f4b1cac950" compoundref="glew_8h" startline="2020">GL_FLOAT_MAT3x2</references>
        <references refid="glew_8h_1a0940ecca4dc2ffdcf71cfd54e40180ec" compoundref="glew_8h" startline="2021">GL_FLOAT_MAT3x4</references>
        <references refid="glew_8h_1af2f9eda8aec4c169cf1800b61ead61fb" compoundref="glew_8h" startline="1788">GL_FLOAT_MAT4</references>
        <references refid="glew_8h_1a73de4bfbe1d597cd11fb3d60ed830c31" compoundref="glew_8h" startline="2022">GL_FLOAT_MAT4x2</references>
        <references refid="glew_8h_1afa821271f6254cd1623a1311e608df17" compoundref="glew_8h" startline="2023">GL_FLOAT_MAT4x3</references>
        <references refid="glew_8h_1ae32c545990d8412e8a8246632df99824" compoundref="glew_8h" startline="1776">GL_FLOAT_VEC2</references>
        <references refid="glew_8h_1a3bd312b25bbe841d5231ad69c4a0541a" compoundref="glew_8h" startline="1777">GL_FLOAT_VEC3</references>
        <references refid="glew_8h_1a696cfaceb3256bf19e990e46702fe527" compoundref="glew_8h" startline="1778">GL_FLOAT_VEC4</references>
        <references refid="glew_8h_1a200b607da88b3a3c8e7d08d62f3aa3a4" compoundref="glew_8h" startline="1922">glGetActiveAttrib</references>
        <references refid="glew_8h_1a511181ed70d9d4cf7463a0ffe39f836d" compoundref="glew_8h" startline="1927">glGetProgramiv</references>
        <references refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" compoundref="_shader_program_8h" startline="490">m_programID</references>
        <referencedby refid="classngl_1_1_shader_program_1a23a21d6cbb984aaaaf8cd7735796eaa5" compoundref="_shader_program_8cpp" startline="150" endline="155">printProperties</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_shader_program_1a23a21d6cbb984aaaaf8cd7735796eaa5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ShaderProgram::printProperties</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>printProperties</name>
        <briefdescription>
<para>calls the printActiveUniforms followed by Attribs method written by Richard Southern. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="112" column="1" bodyfile="/Users/jmacey/NGL/src/ShaderProgram.cpp" bodystart="150" bodyend="155"/>
        <references refid="classngl_1_1_shader_program_1ab890dd7475cc48223e1245cb41ea3a4c" compoundref="_shader_program_8cpp" startline="178" endline="208">printActiveAttributes</references>
        <references refid="classngl_1_1_shader_program_1ad4af8ff430af3d8756ca8b63c797639c" compoundref="_shader_program_8cpp" startline="158" endline="176">printActiveUniforms</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1877">
        <label>ngl::ShaderProgram</label>
        <link refid="classngl_1_1_shader_program"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" line="38" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/ShaderProgram.h" bodystart="37" bodyend="526"/>
    <listofallmembers>
      <member refid="classngl_1_1_shader_program_1ab04eed16465b887de85092e3172d304a" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>attachShader</name></member>
      <member refid="classngl_1_1_shader_program_1a857ee599b65542841ccc8d4841c99336" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>autoRegisterUniforms</name></member>
      <member refid="classngl_1_1_shader_program_1a8deb24c9b772a49bcbacdf952a85d5d5" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>bindAttribute</name></member>
      <member refid="classngl_1_1_shader_program_1a6ca57cf5b20bcfa53708de3de88fbfc5" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>bindFragDataLocation</name></member>
      <member refid="classngl_1_1_shader_program_1ac4da8d2fa2045573fcced7b6d7a17419" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>bindFragDataLocation</name></member>
      <member refid="classngl_1_1_shader_program_1a191cb3dffa4c8dd7261bfd1ab7dabeb4" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>disableAttribArray</name></member>
      <member refid="classngl_1_1_shader_program_1a63e57cd46a07aa26eeb262500eb07c01" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>enableAttribArray</name></member>
      <member refid="classngl_1_1_shader_program_1ad3e579a4717a5954405fe20c9ef0d0b2" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>getID</name></member>
      <member refid="classngl_1_1_shader_program_1a0516130d40a75674bb76bfd25cb5438f" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>getUniformBlockIndex</name></member>
      <member refid="classngl_1_1_shader_program_1a07571e110d9aea4c2376eb6d26c2025e" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>getUniformfv</name></member>
      <member refid="classngl_1_1_shader_program_1aa16038db104994b6b31bc56082202b5f" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>getUniformiv</name></member>
      <member refid="classngl_1_1_shader_program_1adefaa6db3fd85363d9d3c075e777eede" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>getUniformLocation</name></member>
      <member refid="classngl_1_1_shader_program_1a294eb41f85fd01677ca0e3e252c7ac41" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>link</name></member>
      <member refid="classngl_1_1_shader_program_1afc6d9c8095b10abfd6ed1d82eeaa999f" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_active</name></member>
      <member refid="classngl_1_1_shader_program_1a1bb3c670f091c72604ba09f21ca8b329" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_attribs</name></member>
      <member refid="classngl_1_1_shader_program_1a5710d42a02d5d75380a04d4622925080" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_debugState</name></member>
      <member refid="classngl_1_1_shader_program_1a518bcf9a7d9c29e73549037affdce783" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_linked</name></member>
      <member refid="classngl_1_1_shader_program_1a7fa65d2b9c6a4285abd6aa98769342cb" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_programID</name></member>
      <member refid="classngl_1_1_shader_program_1a96ad28d961366848da321d378fe3a812" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_programName</name></member>
      <member refid="classngl_1_1_shader_program_1a5f732f0a5940f3664004e689cfc93ff2" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_registeredUniforms</name></member>
      <member refid="classngl_1_1_shader_program_1ac521ce74e069e193bc4b5abd471de8a1" prot="private" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>m_shaders</name></member>
      <member refid="classngl_1_1_shader_program_1ab890dd7475cc48223e1245cb41ea3a4c" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>printActiveAttributes</name></member>
      <member refid="classngl_1_1_shader_program_1ad4af8ff430af3d8756ca8b63c797639c" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>printActiveUniforms</name></member>
      <member refid="classngl_1_1_shader_program_1a23a21d6cbb984aaaaf8cd7735796eaa5" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>printProperties</name></member>
      <member refid="classngl_1_1_shader_program_1ae24343aee5eaf355a17a82ac66193fb5" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>printRegisteredUniforms</name></member>
      <member refid="classngl_1_1_shader_program_1a8215de393b7d5a52953c632b49624b92" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform1f</name></member>
      <member refid="classngl_1_1_shader_program_1ae13897f454e2626c50cc9949038ff32c" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform1i</name></member>
      <member refid="classngl_1_1_shader_program_1ac3719bdfd595be06d7e99114cd3acd11" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform2f</name></member>
      <member refid="classngl_1_1_shader_program_1aa7cc6bb8581693e2d6d002f7343f3a13" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform2i</name></member>
      <member refid="classngl_1_1_shader_program_1a8b56a061bb25feee44dd2e54af6f9049" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform3f</name></member>
      <member refid="classngl_1_1_shader_program_1a23fd1d52e3e69ec89e75ab01330a9606" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform3i</name></member>
      <member refid="classngl_1_1_shader_program_1a4dfe246ee7290678c431fd3ff353c0b4" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform4f</name></member>
      <member refid="classngl_1_1_shader_program_1a684749e11d096828e405caa27ec6663b" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniform4i</name></member>
      <member refid="classngl_1_1_shader_program_1a76d43c0d81ec057868f67b74cc963db9" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniformMatrix3fv</name></member>
      <member refid="classngl_1_1_shader_program_1a779115eed82c36f92fae219eb0396320" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setRegisteredUniformMatrix4fv</name></member>
      <member refid="classngl_1_1_shader_program_1ae32bd664f28750e3d2c9c7c7f9974671" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform1f</name></member>
      <member refid="classngl_1_1_shader_program_1a2a05c0112b83557e8d7e4c0b7bad0644" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform1fv</name></member>
      <member refid="classngl_1_1_shader_program_1ae714f5f7dfb6bc3df18aedb13de139e8" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform1i</name></member>
      <member refid="classngl_1_1_shader_program_1ac80c71f5cbafc3b5a616f91dc375d5d1" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform1iv</name></member>
      <member refid="classngl_1_1_shader_program_1a2c1220bdb56086ca3fa6e0b97344fa20" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform2f</name></member>
      <member refid="classngl_1_1_shader_program_1adcc1dd1f4a24fe39d698f00238458bd4" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform2fv</name></member>
      <member refid="classngl_1_1_shader_program_1afbddc2598a60dc6fac1a9778f9840a4c" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform2i</name></member>
      <member refid="classngl_1_1_shader_program_1a5d86387f962c46e00fe74353d1b62716" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform2iv</name></member>
      <member refid="classngl_1_1_shader_program_1a6ec93e6a1fcda810086c66aaea97aaba" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform3f</name></member>
      <member refid="classngl_1_1_shader_program_1a69c4f9822e82cffc83d6d70c3235faa2" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform3fv</name></member>
      <member refid="classngl_1_1_shader_program_1ab01cec17edafccdee07a14bb5207c8dc" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform3i</name></member>
      <member refid="classngl_1_1_shader_program_1acf25198d867f71f96da77e4d204faa11" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform3iv</name></member>
      <member refid="classngl_1_1_shader_program_1ae4d94a44a30420fc2f7fffc30dee240e" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform4f</name></member>
      <member refid="classngl_1_1_shader_program_1a83a129472b87b7605b7b8b6ab5bf151f" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform4fv</name></member>
      <member refid="classngl_1_1_shader_program_1a8602a28bfcff1a5e31e2f14be8c744f3" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform4i</name></member>
      <member refid="classngl_1_1_shader_program_1a705670374c505e0db96fa6d105142401" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniform4iv</name></member>
      <member refid="classngl_1_1_shader_program_1a6a9ff5c74f90990db55f71aef76608a7" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix2fv</name></member>
      <member refid="classngl_1_1_shader_program_1a1b5fcd9922c1b5bf7c8791d9780c42f1" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix2x3fv</name></member>
      <member refid="classngl_1_1_shader_program_1af1b66af4776b0c810af001ba781df415" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix2x4fv</name></member>
      <member refid="classngl_1_1_shader_program_1a1e7bb1e988a805e0c3bc139721776310" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix3fv</name></member>
      <member refid="classngl_1_1_shader_program_1a71acb11f7fdfea8cb36ed9bd6ee620c9" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix3x2fv</name></member>
      <member refid="classngl_1_1_shader_program_1aa1a6bb0be5282799b50b281aa5485ee2" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix3x4fv</name></member>
      <member refid="classngl_1_1_shader_program_1aedbb11de67734344ff99d99acdb47850" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix4fv</name></member>
      <member refid="classngl_1_1_shader_program_1ad374f905f3237dac054fe10b84cee53d" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix4x2fv</name></member>
      <member refid="classngl_1_1_shader_program_1a966c53c95ddbfad1e450093f66459a9e" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>setUniformMatrix4x3fv</name></member>
      <member refid="classngl_1_1_shader_program_1af1a7c15d0b01a033bc663ea36fd9a3f2" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="classngl_1_1_shader_program_1ac5f5e6d34990ce86096315bade8fe3c0" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>unbind</name></member>
      <member refid="classngl_1_1_shader_program_1adec315c2b48d5fa2917eeaed84e2eb80" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>use</name></member>
      <member refid="classngl_1_1_shader_program_1a2d2eadcfc48cc2e2ddb82aba70553a9f" prot="public" virt="non-virtual"><scope>ngl::ShaderProgram</scope><name>~ShaderProgram</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
