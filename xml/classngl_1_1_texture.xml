<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_texture" kind="class" language="C++" prot="public">
    <compoundname>ngl::Texture</compoundname>
    <includes refid="_texture_8h" local="no">Texture.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngl_1_1_texture_1a0f8a924f829478654f805af32bd9ef83" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_image" kindref="compound">Image</ref></type>
        <definition>Image ngl::Texture::m_image</definition>
        <argsstring></argsstring>
        <name>m_image</name>
        <briefdescription>
<para>the actual image data loaded packed in r,g,b,a format in contiguous memory stored in a smart_pointer for safety </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="109" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">loadImage</referencedby>
        <referencedby refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" compoundref="_texture_8cpp" startline="64" endline="78">setTextureGL</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_texture_1a8c85f369649ea5792c922594cd912123" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>the size of the image in the X direction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="113" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">loadImage</referencedby>
        <referencedby refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" compoundref="_texture_8cpp" startline="64" endline="78">setTextureGL</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_texture_1a624c159216279b1db88c73cc71d5183a" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>the size of the image in the Y direction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="117" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="117" bodyend="-1"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">loadImage</referencedby>
        <referencedby refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" compoundref="_texture_8cpp" startline="64" endline="78">setTextureGL</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_texture_1a3a067cb0d43340e2ce1ab0392e0e5da4" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::m_channels</definition>
        <argsstring></argsstring>
        <name>m_channels</name>
        <initializer>=3</initializer>
        <briefdescription>
<para>A pointer to the start of the image data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="121" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">loadImage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_texture_1a902d0cdc9e613738e08fd371db6fb721" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
        <definition>GLint ngl::Texture::m_multiTextureID</definition>
        <argsstring></argsstring>
        <name>m_multiTextureID</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>the MultiTexture ID for the current texture Object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="125" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="125" bodyend="-1"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">loadImage</referencedby>
        <referencedby refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" compoundref="_texture_8cpp" startline="64" endline="78">setTextureGL</referencedby>
        <referencedby refid="classngl_1_1_texture_1a0d9d1711050ab53d7459e97775c04b21" compoundref="_texture_8cpp" startline="81" endline="84">setMultiTexture</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_texture_1a5c1587cfef9513c7fb584a9974956578" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::m_format</definition>
        <argsstring></argsstring>
        <name>m_format</name>
        <initializer>=<ref refid="glew_8h_1a69f1c49996aca30177171c7b086cfb34" kindref="member">GL_RGB</ref></initializer>
        <briefdescription>
<para>the image format (i.e rgb or rgba) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="129" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="129" bodyend="-1"/>
        <referencedby refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" compoundref="_texture_8cpp" startline="30" endline="38">Texture</referencedby>
        <referencedby refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" compoundref="_texture_8cpp" startline="41" endline="53">loadImage</referencedby>
        <referencedby refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" compoundref="_texture_8cpp" startline="64" endline="78">setTextureGL</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_texture_1aa35fd7359388946cf3bf7e21643e4ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Texture::Texture</definition>
        <argsstring>()=default</argsstring>
        <name>Texture</name>
        <briefdescription>
<para>Constructor using no parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a9d45a6241a57e52b6a737409965e6e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Texture::~Texture</definition>
        <argsstring>()=default</argsstring>
        <name>~Texture</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1abfbf24e2889307bb207a7c2551a1b28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Texture::Texture</definition>
        <argsstring>(const Texture &amp;)=delete</argsstring>
        <name>Texture</name>
        <param>
          <type>const <ref refid="classngl_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
        </param>
        <briefdescription>
<para>make not copyable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a46f7948b92615c9174487b19d783dc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
        <definition>Texture&amp; ngl::Texture::operator=</definition>
        <argsstring>(const Texture &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classngl_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::Texture::Texture</definition>
        <argsstring>(const std::string &amp;_fname)</argsstring>
        <name>Texture</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_fname</declname>
        </param>
        <briefdescription>
<para>Constructor passing the file to load. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;_fName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="63" column="1" bodyfile="/Users/jmacey/NGL/src/Texture.cpp" bodystart="30" bodyend="38"/>
        <references refid="classngl_1_1_image_1af3c776f7d6aa7b5bba33e2f6a27bfdb7" compoundref="_image_8h" startline="95" endline="95">ngl::Image::channels</references>
        <references refid="classngl_1_1_image_1ac36018566ec1a8afcd3d55d617b2282e" compoundref="_image_8h" startline="90" endline="90">ngl::Image::format</references>
        <references refid="classngl_1_1_image_1ad8ce0c58b9f3f2a6cd5ef90f439527f9" compoundref="_image_8h" startline="85" endline="85">ngl::Image::height</references>
        <references refid="classngl_1_1_image_1a836b99787c51a05162e6f313cd5ef2c2">ngl::Image::load</references>
        <references refid="classngl_1_1_texture_1a3a067cb0d43340e2ce1ab0392e0e5da4" compoundref="_texture_8h" startline="121">m_channels</references>
        <references refid="classngl_1_1_texture_1a5c1587cfef9513c7fb584a9974956578" compoundref="_texture_8h" startline="129">m_format</references>
        <references refid="classngl_1_1_texture_1a624c159216279b1db88c73cc71d5183a" compoundref="_texture_8h" startline="117">m_height</references>
        <references refid="classngl_1_1_texture_1a0f8a924f829478654f805af32bd9ef83" compoundref="_texture_8h" startline="109">m_image</references>
        <references refid="classngl_1_1_texture_1a902d0cdc9e613738e08fd371db6fb721" compoundref="_texture_8h" startline="125">m_multiTextureID</references>
        <references refid="classngl_1_1_texture_1a8c85f369649ea5792c922594cd912123" compoundref="_texture_8h" startline="113">m_width</references>
        <references refid="classngl_1_1_image_1afd54496e8ae21e8df0d79e1d2aee0b07" compoundref="_image_8h" startline="80" endline="80">ngl::Image::width</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngl::Texture::loadImage</definition>
        <argsstring>(const std::string &amp;_fname)</argsstring>
        <name>loadImage</name>
        <param>
          <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref> &amp;</type>
          <declname>_fname</declname>
        </param>
        <briefdescription>
<para>method to load the image file into the texture class </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_fName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file to load imageMagick will determine if it can load the file </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success else false if load fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="70" column="1" bodyfile="/Users/jmacey/NGL/src/Texture.cpp" bodystart="41" bodyend="53"/>
        <references refid="classngl_1_1_image_1af3c776f7d6aa7b5bba33e2f6a27bfdb7" compoundref="_image_8h" startline="95" endline="95">ngl::Image::channels</references>
        <references refid="classngl_1_1_image_1ac36018566ec1a8afcd3d55d617b2282e" compoundref="_image_8h" startline="90" endline="90">ngl::Image::format</references>
        <references refid="classngl_1_1_image_1ad8ce0c58b9f3f2a6cd5ef90f439527f9" compoundref="_image_8h" startline="85" endline="85">ngl::Image::height</references>
        <references refid="classngl_1_1_image_1a836b99787c51a05162e6f313cd5ef2c2">ngl::Image::load</references>
        <references refid="classngl_1_1_texture_1a3a067cb0d43340e2ce1ab0392e0e5da4" compoundref="_texture_8h" startline="121">m_channels</references>
        <references refid="classngl_1_1_texture_1a5c1587cfef9513c7fb584a9974956578" compoundref="_texture_8h" startline="129">m_format</references>
        <references refid="classngl_1_1_texture_1a624c159216279b1db88c73cc71d5183a" compoundref="_texture_8h" startline="117">m_height</references>
        <references refid="classngl_1_1_texture_1a0f8a924f829478654f805af32bd9ef83" compoundref="_texture_8h" startline="109">m_image</references>
        <references refid="classngl_1_1_texture_1a902d0cdc9e613738e08fd371db6fb721" compoundref="_texture_8h" startline="125">m_multiTextureID</references>
        <references refid="classngl_1_1_texture_1a8c85f369649ea5792c922594cd912123" compoundref="_texture_8h" startline="113">m_width</references>
        <references refid="classngl_1_1_image_1afd54496e8ae21e8df0d79e1d2aee0b07" compoundref="_image_8h" startline="80" endline="80">ngl::Image::width</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1aafcb80bc46e6f0ab0bdbc301471067e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* ngl::Texture::getPixels</definition>
        <argsstring>() const </argsstring>
        <name>getPixels</name>
        <briefdescription>
<para>method to access the pixel data pointer </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>reference to the pixel data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="75" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::setTextureGL</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>setTextureGL</name>
        <briefdescription>
<para>set the image as an OpenGL texture object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the texture object id</para></simplesect>
<simplesect kind="note"><para>this is really inflexible at the moment needs to be made more generic and give more control over the OpenGL texture types etc Could actually be worth creating a texture manager class at some stage along the lines of the <ref refid="classngl_1_1_shader" kindref="compound">Shader</ref> manager class, or even a generic manager framework which we could then add items to </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="80" column="1" bodyfile="/Users/jmacey/NGL/src/Texture.cpp" bodystart="64" bodyend="78"/>
        <references refid="classngl_1_1_image_1ac59efd33040751c18b3389fbaea988bc" compoundref="_image_8h" startline="64" endline="64">ngl::Image::getPixels</references>
        <references refid="glew_8h_1a4e682f218130b98b27a1e33fa7325080" compoundref="glew_8h" startline="718">GL_LINEAR</references>
        <references refid="glew_8h_1a16cc91096144fc7048b45e2add14915b" compoundref="glew_8h" startline="1292">GL_TEXTURE0</references>
        <references refid="glew_8h_1ad4de17abefa73fa2ef53379f73b734be" compoundref="glew_8h" startline="10194">GL_TEXTURE_2D</references>
        <references refid="glew_8h_1acb47a41b5963d44826f44b7370bccc26" compoundref="glew_8h" startline="723">GL_TEXTURE_MAG_FILTER</references>
        <references refid="glew_8h_1a173a2b2453322dd8d613df6cf2e72480" compoundref="glew_8h" startline="724">GL_TEXTURE_MIN_FILTER</references>
        <references refid="glew_8h_1a80a33c79f69417372d65d2a65ca36d49" compoundref="glew_8h" startline="637">GL_UNSIGNED_BYTE</references>
        <references refid="glew_8h_1af15266b67de988f5ddf442bbbdd1b3fc" compoundref="glew_8h" startline="1427">glActiveTexture</references>
        <references refid="glew_8h_1a940f58f3728713267a58e2d09ff602b2">glBindTexture</references>
        <references refid="glew_8h_1af24c49639dd0c5748c08354cb9fda28c" compoundref="glew_8h" startline="4579">glGenerateMipmap</references>
        <references refid="glew_8h_1a99e77ebf136a8c511226cf705049a305">glGenTextures</references>
        <references refid="glew_8h_1ae0c4b34c030bad60c4e2b94cd0a6d804">glTexImage2D</references>
        <references refid="glew_8h_1ac8dbabff536e520bc700960dadd8d787">glTexParameteri</references>
        <references refid="classngl_1_1_texture_1a5c1587cfef9513c7fb584a9974956578" compoundref="_texture_8h" startline="129">m_format</references>
        <references refid="classngl_1_1_texture_1a624c159216279b1db88c73cc71d5183a" compoundref="_texture_8h" startline="117">m_height</references>
        <references refid="classngl_1_1_texture_1a0f8a924f829478654f805af32bd9ef83" compoundref="_texture_8h" startline="109">m_image</references>
        <references refid="classngl_1_1_texture_1a902d0cdc9e613738e08fd371db6fb721" compoundref="_texture_8h" startline="125">m_multiTextureID</references>
        <references refid="classngl_1_1_texture_1a8c85f369649ea5792c922594cd912123" compoundref="_texture_8h" startline="113">m_width</references>
        <referencedby refid="classngl_1_1_abstract_mesh_1a2f0e3afb860b5c7bb6b99b96c016fef5" compoundref="_abstract_mesh_8cpp" startline="80" endline="87">ngl::AbstractMesh::loadTexture</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a0d9d1711050ab53d7459e97775c04b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::Texture::setMultiTexture</definition>
        <argsstring>(const GLint _id) noexcept</argsstring>
        <name>setMultiTexture</name>
        <param>
          <type>const <ref refid="glew_8h_1acebcc1c5663f14ebde1d16831e5fed94" kindref="member">GLint</ref></type>
          <declname>_id</declname>
        </param>
        <briefdescription>
<para>set the texture object to be different texture in multitexture </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the texture id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="85" column="1" bodyfile="/Users/jmacey/NGL/src/Texture.cpp" bodystart="81" bodyend="84"/>
        <references refid="classngl_1_1_texture_1a902d0cdc9e613738e08fd371db6fb721" compoundref="_texture_8h" startline="125">m_multiTextureID</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a5abf82c6b0268b17cd093c8dffafb53c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::getWidth</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getWidth</name>
        <briefdescription>
<para>Get the width of the texture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>width of the texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="90" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1aefed3fb0289778dc7273dd60ec0f864b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::getHeight</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getHeight</name>
        <briefdescription>
<para>Get the height of the texture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>height of the texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="95" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1a7f6b3bb08d70f1a6a460cadd87f96199" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::Texture::getFormat</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>getFormat</name>
        <briefdescription>
<para>Get the pixel format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>pixel format of the texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="100" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_texture_1afc11b12eab35fc93a66af2789be33227" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classngl_1_1_image" kindref="compound">Image</ref> &amp;</type>
        <definition>const Image&amp; ngl::Texture::getImage</definition>
        <argsstring>() const </argsstring>
        <name>getImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="102" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="102" bodyend="102"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>simple texture object using QImage to load and convert to OpenGL texturing, needs loads of work for multi texture support etc as well as different texture types </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jonathan Macey </para></simplesect>
<simplesect kind="version"><para>2.0 </para></simplesect>
<simplesect kind="date"><para>18/3/10 Added multi texture support </para></simplesect>
<xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>make it more flexible for different types of texture operations </para><para>write save method at some stage as well this could grab info from framebuffer and replace the frame writer class </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <collaborationgraph>
      <node id="1978">
        <label>ngl::Image</label>
        <link refid="classngl_1_1_image"/>
      </node>
      <node id="1977">
        <label>ngl::Texture</label>
        <link refid="classngl_1_1_texture"/>
        <childnode refid="1978" relation="usage">
          <edgelabel>#m_image</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/Texture.h" line="43" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/Texture.h" bodystart="42" bodyend="131"/>
    <listofallmembers>
      <member refid="classngl_1_1_texture_1a7f6b3bb08d70f1a6a460cadd87f96199" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>getFormat</name></member>
      <member refid="classngl_1_1_texture_1aefed3fb0289778dc7273dd60ec0f864b" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>getHeight</name></member>
      <member refid="classngl_1_1_texture_1afc11b12eab35fc93a66af2789be33227" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>getImage</name></member>
      <member refid="classngl_1_1_texture_1aafcb80bc46e6f0ab0bdbc301471067e4" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>getPixels</name></member>
      <member refid="classngl_1_1_texture_1a5abf82c6b0268b17cd093c8dffafb53c" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>getWidth</name></member>
      <member refid="classngl_1_1_texture_1a44493d8713bb7745f53ceb4fe7212fdb" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>loadImage</name></member>
      <member refid="classngl_1_1_texture_1a3a067cb0d43340e2ce1ab0392e0e5da4" prot="protected" virt="non-virtual"><scope>ngl::Texture</scope><name>m_channels</name></member>
      <member refid="classngl_1_1_texture_1a5c1587cfef9513c7fb584a9974956578" prot="protected" virt="non-virtual"><scope>ngl::Texture</scope><name>m_format</name></member>
      <member refid="classngl_1_1_texture_1a624c159216279b1db88c73cc71d5183a" prot="protected" virt="non-virtual"><scope>ngl::Texture</scope><name>m_height</name></member>
      <member refid="classngl_1_1_texture_1a0f8a924f829478654f805af32bd9ef83" prot="protected" virt="non-virtual"><scope>ngl::Texture</scope><name>m_image</name></member>
      <member refid="classngl_1_1_texture_1a902d0cdc9e613738e08fd371db6fb721" prot="protected" virt="non-virtual"><scope>ngl::Texture</scope><name>m_multiTextureID</name></member>
      <member refid="classngl_1_1_texture_1a8c85f369649ea5792c922594cd912123" prot="protected" virt="non-virtual"><scope>ngl::Texture</scope><name>m_width</name></member>
      <member refid="classngl_1_1_texture_1a46f7948b92615c9174487b19d783dc16" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>operator=</name></member>
      <member refid="classngl_1_1_texture_1a0d9d1711050ab53d7459e97775c04b21" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>setMultiTexture</name></member>
      <member refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>setTextureGL</name></member>
      <member refid="classngl_1_1_texture_1aa35fd7359388946cf3bf7e21643e4ccb" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>Texture</name></member>
      <member refid="classngl_1_1_texture_1abfbf24e2889307bb207a7c2551a1b28d" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>Texture</name></member>
      <member refid="classngl_1_1_texture_1aaca41736aee3f521ab72b29096459d0a" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>Texture</name></member>
      <member refid="classngl_1_1_texture_1a9d45a6241a57e52b6a737409965e6e1b" prot="public" virt="non-virtual"><scope>ngl::Texture</scope><name>~Texture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
