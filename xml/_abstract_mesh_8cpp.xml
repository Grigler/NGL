<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_abstract_mesh_8cpp" kind="file" language="C++">
    <compoundname>AbstractMesh.cpp</compoundname>
    <includes refid="_abstract_mesh_8h" local="yes">AbstractMesh.h</includes>
    <includes refid="_util_8h" local="yes">Util.h</includes>
    <includes local="no">list</includes>
    <includes refid="_n_g_l_stream_8h" local="yes">NGLStream.h</includes>
    <includes refid="_v_a_o_factory_8h" local="yes">VAOFactory.h</includes>
    <includes refid="_simple_v_a_o_8h" local="yes">SimpleVAO.h</includes>
    <incdepgraph>
      <node id="3696">
        <label>list</label>
      </node>
      <node id="3668">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="3669" relation="include">
        </childnode>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3676" relation="include">
        </childnode>
        <childnode refid="3677" relation="include">
        </childnode>
      </node>
      <node id="3701">
        <label>functional</label>
      </node>
      <node id="3699">
        <label>VAOFactory.h</label>
        <link refid="_v_a_o_factory_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3683" relation="include">
        </childnode>
        <childnode refid="3700" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
      </node>
      <node id="3689">
        <label>Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3687" relation="include">
        </childnode>
        <childnode refid="3684" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3690" relation="include">
        </childnode>
      </node>
      <node id="3693">
        <label>cstdint</label>
      </node>
      <node id="3677">
        <label>QGLContext</label>
      </node>
      <node id="3679">
        <label>Vec3.h</label>
        <link refid="_vec3_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
      </node>
      <node id="3695">
        <label>cmath</label>
      </node>
      <node id="3671">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="3672" relation="include">
        </childnode>
        <childnode refid="3673" relation="include">
        </childnode>
      </node>
      <node id="3687">
        <label>string</label>
      </node>
      <node id="3670">
        <label>stddef.h</label>
      </node>
      <node id="3686">
        <label>fstream</label>
      </node>
      <node id="3669">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="3670" relation="include">
        </childnode>
        <childnode refid="3671" relation="include">
        </childnode>
        <childnode refid="3674" relation="include">
        </childnode>
      </node>
      <node id="3674">
        <label>GL/glu.h</label>
      </node>
      <node id="3672">
        <label>limits.h</label>
      </node>
      <node id="3681">
        <label>Vec4.h</label>
        <link refid="_vec4_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
      </node>
      <node id="3683">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3673">
        <label>wchar.h</label>
      </node>
      <node id="3690">
        <label>Colour.h</label>
        <link refid="_colour_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3688">
        <label>Texture.h</label>
        <link refid="_texture_8h"/>
        <childnode refid="3689" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
      </node>
      <node id="3692">
        <label>vector</label>
      </node>
      <node id="3680">
        <label>array</label>
      </node>
      <node id="3685">
        <label>RibExport.h</label>
        <link refid="_rib_export_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3686" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
      </node>
      <node id="3676">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="3691">
        <label>NGLassert.h</label>
        <link refid="_n_g_lassert_8h"/>
      </node>
      <node id="3698">
        <label>iostream</label>
      </node>
      <node id="3700">
        <label>unordered_map</label>
      </node>
      <node id="3702">
        <label>SimpleVAO.h</label>
        <link refid="_simple_v_a_o_8h"/>
        <childnode refid="3683" relation="include">
        </childnode>
      </node>
      <node id="3697">
        <label>NGLStream.h</label>
        <link refid="_n_g_l_stream_8h"/>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3694">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3695" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
      </node>
      <node id="3675">
        <label>GL/gl.h</label>
      </node>
      <node id="3682">
        <label>Vec2.h</label>
        <link refid="_vec2_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
      </node>
      <node id="3666">
        <label>AbstractMesh.cpp</label>
        <link refid="AbstractMesh.cpp"/>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3694" relation="include">
        </childnode>
        <childnode refid="3696" relation="include">
        </childnode>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3702" relation="include">
        </childnode>
      </node>
      <node id="3684">
        <label>memory</label>
      </node>
      <node id="3678">
        <label>BBox.h</label>
        <link refid="_b_box_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3683" relation="include">
        </childnode>
        <childnode refid="3684" relation="include">
        </childnode>
      </node>
      <node id="3667">
        <label>AbstractMesh.h</label>
        <link refid="_abstract_mesh_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3685" relation="include">
        </childnode>
        <childnode refid="3688" relation="include">
        </childnode>
        <childnode refid="3691" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3683" relation="include">
        </childnode>
        <childnode refid="3692" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
        <childnode refid="3693" relation="include">
        </childnode>
        <childnode refid="3684" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structngl_1_1_vert_data" prot="public">ngl::VertData</innerclass>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>a series of classes used to define an abstract 3D mesh of Faces, Vertex Normals and TexCords </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Jon<sp/>Macey</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_mesh_8h" kindref="compound">AbstractMesh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_util_8h" kindref="compound">Util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_g_l_stream_8h" kindref="compound">NGLStream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_v_a_o_factory_8h" kindref="compound">VAOFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_v_a_o_8h" kindref="compound">SimpleVAO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classngl_1_1_abstract_mesh_1aeb837456dbbf0051cac81797a90b149e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1aeb837456dbbf0051cac81797a90b149e" kindref="member">AbstractMesh::drawBBox</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a87d423496aaeefcbf960da1d74b9636d" kindref="member">m_ext</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classngl_1_1_abstract_mesh_1a3d08025470bb7939b209a2c2d63cc3d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1a3d08025470bb7939b209a2c2d63cc3d8" kindref="member">AbstractMesh::scale</ref>(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_sx,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_sy,<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>_sz<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>=0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>lambda<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>:<sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>*=_sx;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y*=_sy;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z*=_sz;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>+=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>/=<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a8cbb6c3661cdcc06436db68dd76fa585" kindref="member">calcDimensions</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classngl_1_1_abstract_mesh_1aa500b8c1affa589eee0da6d2f8431b39" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1aa500b8c1affa589eee0da6d2f8431b39" kindref="member">AbstractMesh::~AbstractMesh</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1ae8cb9140141d33e2534690874c58c031" kindref="member">m_loaded</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>.erase(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>.begin(),<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>.end());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>.erase(<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>.begin(),<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>.end());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>.erase(<ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>.begin(),<ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>.end());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>.erase(<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>.begin(),<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>.end());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1adc01b9c9267485da1fdf3613dc8c9ceb" kindref="member">m_indices</ref>.erase(<ref refid="classngl_1_1_abstract_mesh_1adc01b9c9267485da1fdf3613dc8c9ceb" kindref="member">m_indices</ref>.begin(),<ref refid="classngl_1_1_abstract_mesh_1adc01b9c9267485da1fdf3613dc8c9ceb" kindref="member">m_indices</ref>.end());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1ae8b4d4fa40a706e2d5a630876f65a8f4" kindref="member">m_outIndices</ref>.erase(<ref refid="classngl_1_1_abstract_mesh_1ae8b4d4fa40a706e2d5a630876f65a8f4" kindref="member">m_outIndices</ref>.begin(),<ref refid="classngl_1_1_abstract_mesh_1ae8b4d4fa40a706e2d5a630876f65a8f4" kindref="member">m_outIndices</ref>.end());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1ab39e5c5c849285d6b17cd735dab4d65d" kindref="member">m_vbo</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a55652a3f087bb13267a5481b6ff1fe19" kindref="member">glDeleteBuffers</ref>(1,&amp;<ref refid="classngl_1_1_abstract_mesh_1af099b62f47c9b9e764f21ddec8522e91" kindref="member">m_vboBuffers</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classngl_1_1_abstract_mesh_1a2f0e3afb860b5c7bb6b99b96c016fef5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1a2f0e3afb860b5c7bb6b99b96c016fef5" kindref="member">AbstractMesh::loadTexture</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fName<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>in<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_texture" kindref="compound">Texture</ref><sp/><sp/>*<ref refid="glew_8h_1ade5636ea600ca40c1f2c8cd08c1dcd3e" kindref="member">t</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_texture" kindref="compound">Texture</ref>(_fName);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1ae7d52c8f9cc7cd566967f81198588919" kindref="member">m_textureID</ref>=t-&gt;<ref refid="classngl_1_1_texture_1a5be4a26f970a417950ad4b7f0cf87c5d" kindref="member">setTextureGL</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ade5636ea600ca40c1f2c8cd08c1dcd3e" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a56eb30bdaec31e32772833199fd54f22" kindref="member">m_texture</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classngl_1_1_abstract_mesh_1a279b4c298c26705ebbaddb5120144ba1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1a279b4c298c26705ebbaddb5120144ba1" kindref="member">AbstractMesh::writeToRibSubdiv</ref>(<ref refid="classngl_1_1_rib_export" kindref="compound">RibExport</ref>&amp;<sp/>_ribFile<sp/>)</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>std::list&lt;<sp/>int<sp/>&gt;<sp/>lVertLink;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>std::list&lt;<sp/>int<sp/>&gt;::iterator<sp/>vertLinkItr;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>vVerts;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::iterator<sp/>vertsItr;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>rib<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_ribFile.isOpen()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>_ribFile.comment(<sp/></highlight><highlight class="stringliteral">&quot;OBJ<sp/>AbstractMeshect&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>printing<sp/>the<sp/>SubdivisionPolygons<sp/>tag<sp/>to<sp/>the<sp/>rib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SubdivisionMesh<sp/>\&quot;catmull-clark\&quot;<sp/>[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>all<sp/>the<sp/>Polygons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I&lt;<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>;<sp/>++I)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>count<sp/>of<sp/>vertices<sp/>for<sp/>the<sp/>current<sp/>polygon<sp/>to<sp/>the<sp/>rib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/><ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[I].m_numVerts<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>building<sp/>the<sp/>vertids<sp/>and<sp/>parameterlist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[I].m_numVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>verts<sp/>vector<sp/>size<sp/>and<sp/>testing<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iVecSize<sp/>=<sp/>vVerts.size();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTest<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1afa228d201857b67afdee8292f4cb08a8" kindref="member">counter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>the<sp/>expanding<sp/>vector<sp/>checking<sp/>whether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>vertice<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>iVecSize;<sp/>j<sp/>=<sp/>j<sp/>+<sp/>3)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>vertice<sp/>if<sp/>found<sp/>in<sp/>the<sp/>vector,<sp/>set<sp/>the<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>and<sp/>exit<sp/>the<sp/>loop.<sp/>Else<sp/>keep<sp/>going.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/><ref refid="_types_8h_1a04b3daeb8f076608db8eb09234c8d29f" kindref="member">FCompare</ref>(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_x<sp/>,vVerts[j])<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="_types_8h_1a04b3daeb8f076608db8eb09234c8d29f" kindref="member">FCompare</ref>(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_y,vVerts[j<sp/>+<sp/>1])<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="_types_8h_1a04b3daeb8f076608db8eb09234c8d29f" kindref="member">FCompare</ref>(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_y,vVerts[j<sp/>+<sp/>2])<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bTest<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>vertice<sp/>to<sp/>the<sp/>vector<sp/>if<sp/>it<sp/>is<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bTest<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vVerts.push_back(<sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[I].m_vert[i]].m_x<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vVerts.push_back(<sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[I].m_vert[i]].m_y<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vVerts.push_back(<sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[I].m_vert[i]].m_z<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lVertLink.push_back(<sp/>counter<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lVertLink.push_back(<sp/>counter<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//<sp/>end<sp/>outer<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//<sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>vertids<sp/>to<sp/>the<sp/>rib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>std::list&lt;<sp/>int<sp/>&gt;::iterator<sp/>vertLinkEnd=lVertLink.end();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vertLinkItr<sp/>=<sp/>lVertLink.begin();<sp/>vertLinkItr<sp/>!=<sp/>vertLinkEnd;<sp/>++vertLinkItr)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/>*vertLinkItr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>[\&quot;interpolateboundary\&quot;]<sp/>[0<sp/>0]<sp/>[]<sp/>[]<sp/>\&quot;P\&quot;<sp/>[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>parameterlist<sp/>to<sp/>the<sp/>rib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::iterator<sp/>vVertEnd=vVerts.end();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vertsItr<sp/>=<sp/>vVerts.begin();<sp/>vertsItr<sp/>!=<sp/>vVertEnd;<sp/>++vertsItr)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/>*vertsItr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>new<sp/>lines<sp/>to<sp/>the<sp/>rib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>_ribFile.getStream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classngl_1_1_abstract_mesh_1af509c12d1dda2d1ad25841a4362edb5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1af509c12d1dda2d1ad25841a4362edb5f" kindref="member">AbstractMesh::isTriangular</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref><sp/>:<sp/><ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="glew_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref>.m_numVerts<sp/>&gt;3)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>simple<sp/>structure<sp/>to<sp/>hold<sp/>our<sp/>vertex<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>had<sp/>to<sp/>move<sp/>this<sp/>outside<sp/>the<sp/>method<sp/>as<sp/>g++<sp/>complains<sp/>about<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>problem<sp/>tho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structngl_1_1_vert_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structngl_1_1_vert_data" kindref="compound">VertData</ref></highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203" refid="structngl_1_1_vert_data_1a1d7face66c785a131f14a2f7a0a01218" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1a1d7face66c785a131f14a2f7a0a01218" kindref="member">u</ref>;<sp/></highlight><highlight class="comment">//<sp/>tex<sp/>cords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="structngl_1_1_vert_data_1a4fd4a95037c1eb7056fbb0412672cd2d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1a4fd4a95037c1eb7056fbb0412672cd2d" kindref="member">v</ref>;<sp/></highlight><highlight class="comment">//<sp/>tex<sp/>cords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structngl_1_1_vert_data_1ae3b5846610df9f8c1bf5244a3879f7fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1ae3b5846610df9f8c1bf5244a3879f7fe" kindref="member">nx</ref>;<sp/></highlight><highlight class="comment">//<sp/>normal<sp/>from<sp/>obj<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="structngl_1_1_vert_data_1ad4afb7472fe8797266ec29964cde0b6f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1ad4afb7472fe8797266ec29964cde0b6f" kindref="member">ny</ref>;</highlight></codeline>
<codeline lineno="207" refid="structngl_1_1_vert_data_1ae4735ab5ef64463bd3f2338fe1446abd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1ae4735ab5ef64463bd3f2338fe1446abd" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="208" refid="structngl_1_1_vert_data_1aed6fc63566ddbfce8bbd666b2c803dfc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1aed6fc63566ddbfce8bbd666b2c803dfc" kindref="member">x</ref>;<sp/></highlight><highlight class="comment">//<sp/>position<sp/>from<sp/>obj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structngl_1_1_vert_data_1af28b10411e756a2e184fd3556f959a06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1af28b10411e756a2e184fd3556f959a06" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="210" refid="structngl_1_1_vert_data_1ac33030b30e49d058297bd4eaec0c1625" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref><sp/><ref refid="structngl_1_1_vert_data_1ac33030b30e49d058297bd4eaec0c1625" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classngl_1_1_abstract_mesh_1a034b7c92a071e1ee7030abafd375d182" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1a034b7c92a071e1ee7030abafd375d182" kindref="member">AbstractMesh::createVAO</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>already<sp/>created<sp/>a<sp/>VBO<sp/>just<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a5109b0163236502482095620a5db728f" kindref="member">m_vao</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;VAO<sp/>exist<sp/>so<sp/>returning\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>else<sp/>allocate<sp/>space<sp/>as<sp/>build<sp/>our<sp/>VAO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a4885d5167a332db76bfd4aa1f462928a" kindref="member">m_dataPackType</ref>=0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af509c12d1dda2d1ad25841a4362edb5f" kindref="member">isTriangular</ref>())</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a4885d5167a332db76bfd4aa1f462928a" kindref="member">m_dataPackType</ref>=<ref refid="glew_8h_1a6079e7a02a59adad65eb953d9482b1ed" kindref="member">GL_TRIANGLES</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Doing<sp/>Tri<sp/>Data&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>is<sp/>mixed<sp/>of<sp/>&gt;<sp/>quad<sp/>so<sp/>exit<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a4885d5167a332db76bfd4aa1f462928a" kindref="member">m_dataPackType</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Can<sp/>only<sp/>create<sp/>VBO<sp/>from<sp/>all<sp/>Triangle<sp/>or<sp/>ALL<sp/>Quad<sp/>data<sp/>at<sp/>present&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>are<sp/>going<sp/>to<sp/>process<sp/>and<sp/>pack<sp/>the<sp/>mesh<sp/>into<sp/>an<sp/>ngl::VertexArrayObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;VertData&gt;<sp/>vboMesh;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="structngl_1_1_vert_data" kindref="compound">VertData</ref><sp/>d;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>for<sp/>each<sp/>of<sp/>the<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="classngl_1_1_abstract_mesh_1aa4e5c1cdc67001f14499bb0da40f6cd0" kindref="member">m_nFaces</ref>;++i)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>for<sp/>each<sp/>triangle<sp/>in<sp/>the<sp/>face<sp/>(remember<sp/>we<sp/>ensured<sp/>tri<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;3;++j)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pack<sp/>in<sp/>the<sp/>vertex<sp/>data<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1aed6fc63566ddbfce8bbd666b2c803dfc" kindref="member">x</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_vert[j]].m_x;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1af28b10411e756a2e184fd3556f959a06" kindref="member">y</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_vert[j]].m_y;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ac33030b30e49d058297bd4eaec0c1625" kindref="member">z</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_vert[j]].m_z;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>if<sp/>we<sp/>have<sp/>norms<sp/>of<sp/>tex<sp/>(possibly<sp/>could<sp/>not)<sp/>pack<sp/>them<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a8536f44940c41d833ce1360e00e925d2" kindref="member">m_nNorm</ref><sp/>&gt;0<sp/>&amp;&amp;<sp/><ref refid="classngl_1_1_abstract_mesh_1a2f47063be79b1f065cadc30e35cf0a17" kindref="member">m_nTex</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae3b5846610df9f8c1bf5244a3879f7fe" kindref="member">nx</ref>=<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_norm[j]].m_x;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ad4afb7472fe8797266ec29964cde0b6f" kindref="member">ny</ref>=<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_norm[j]].m_y;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae4735ab5ef64463bd3f2338fe1446abd" kindref="member">nz</ref>=<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_norm[j]].m_z;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a1d7face66c785a131f14a2f7a0a01218" kindref="member">u</ref>=<ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_tex[j]].m_x;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a4fd4a95037c1eb7056fbb0412672cd2d" kindref="member">v</ref>=<ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_tex[j]].m_y;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>if<sp/>neither<sp/>are<sp/>present<sp/>(only<sp/>verts<sp/>like<sp/>Zbrush<sp/>models)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a8536f44940c41d833ce1360e00e925d2" kindref="member">m_nNorm</ref><sp/>==0<sp/>&amp;&amp;<sp/><ref refid="classngl_1_1_abstract_mesh_1a2f47063be79b1f065cadc30e35cf0a17" kindref="member">m_nTex</ref>==0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae3b5846610df9f8c1bf5244a3879f7fe" kindref="member">nx</ref>=0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ad4afb7472fe8797266ec29964cde0b6f" kindref="member">ny</ref>=0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae4735ab5ef64463bd3f2338fe1446abd" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a1d7face66c785a131f14a2f7a0a01218" kindref="member">u</ref>=0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a4fd4a95037c1eb7056fbb0412672cd2d" kindref="member">v</ref>=0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>we&apos;ve<sp/>got<sp/>norms<sp/>but<sp/>not<sp/>tex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a8536f44940c41d833ce1360e00e925d2" kindref="member">m_nNorm</ref><sp/>&gt;0<sp/>&amp;&amp;<sp/><ref refid="classngl_1_1_abstract_mesh_1a2f47063be79b1f065cadc30e35cf0a17" kindref="member">m_nTex</ref>==0)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae3b5846610df9f8c1bf5244a3879f7fe" kindref="member">nx</ref>=<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_norm[j]].m_x;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ad4afb7472fe8797266ec29964cde0b6f" kindref="member">ny</ref>=<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_norm[j]].m_y;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae4735ab5ef64463bd3f2338fe1446abd" kindref="member">nz</ref>=<ref refid="classngl_1_1_abstract_mesh_1a3987536cc8d7cccbe31429d1b4e14024" kindref="member">m_norm</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_norm[j]].m_z;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a1d7face66c785a131f14a2f7a0a01218" kindref="member">u</ref>=0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a4fd4a95037c1eb7056fbb0412672cd2d" kindref="member">v</ref>=0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>we&apos;ve<sp/>got<sp/>tex<sp/>but<sp/>not<sp/>norm<sp/>least<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a8536f44940c41d833ce1360e00e925d2" kindref="member">m_nNorm</ref><sp/>==0<sp/>&amp;&amp;<sp/><ref refid="classngl_1_1_abstract_mesh_1a2f47063be79b1f065cadc30e35cf0a17" kindref="member">m_nTex</ref>&gt;0)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae3b5846610df9f8c1bf5244a3879f7fe" kindref="member">nx</ref>=0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ad4afb7472fe8797266ec29964cde0b6f" kindref="member">ny</ref>=0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1ae4735ab5ef64463bd3f2338fe1446abd" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a1d7face66c785a131f14a2f7a0a01218" kindref="member">u</ref>=<ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_tex[j]].m_x;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structngl_1_1_vert_data_1a4fd4a95037c1eb7056fbb0412672cd2d" kindref="member">v</ref>=<ref refid="classngl_1_1_abstract_mesh_1a06b3a8bddf3d42830319da379b3b996e" kindref="member">m_tex</ref>[<ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>[i].m_tex[j]].m_y;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>vboMesh.push_back(d);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>we<sp/>grab<sp/>an<sp/>instance<sp/>of<sp/>our<sp/>VOA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>.reset(<sp/><ref refid="classngl_1_1_v_a_o_factory_1adee5532df7151fab8e8db0e9ebf94305" kindref="member">ngl::VAOFactory::createVAO</ref>(</highlight><highlight class="stringliteral">&quot;simpleVAO&quot;</highlight><highlight class="normal">,<ref refid="classngl_1_1_abstract_mesh_1a4885d5167a332db76bfd4aa1f462928a" kindref="member">m_dataPackType</ref>));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>we<sp/>bind<sp/>it<sp/>so<sp/>it&apos;s<sp/>active<sp/>for<sp/>setting<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;bind();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a305a5b883ac911a3bb8723811259acc1" kindref="member">m_meshSize</ref>=vboMesh.size();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>our<sp/>data<sp/>add<sp/>it<sp/>to<sp/>the<sp/>VAO,<sp/>we<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>VAO<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>much<sp/>(in<sp/>bytes)<sp/>data<sp/>we<sp/>are<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>element<sp/>of<sp/>data<sp/>(in<sp/>this<sp/>case<sp/>the<sp/>address<sp/>of<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//m_vaoMesh-&gt;setData(m_meshSize*sizeof(VertData),vboMesh[0].u);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;setData(<ref refid="classngl_1_1_abstract_v_a_o_1_1_vertex_data" kindref="compound">SimpleVAO::VertexData</ref>(<ref refid="classngl_1_1_abstract_mesh_1a305a5b883ac911a3bb8723811259acc1" kindref="member">m_meshSize</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1_vert_data" kindref="compound">VertData</ref>),vboMesh[0].u));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>have<sp/>packed<sp/>our<sp/>data<sp/>in<sp/>interleaved<sp/>format<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>u,v,nx,ny,nz,x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>look<sp/>at<sp/>the<sp/>shader<sp/>we<sp/>have<sp/>the<sp/>following<sp/>attributes<sp/>being<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec3<sp/>inVert;<sp/>attribute<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec2<sp/>inUV;<sp/>attribute<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>vec3<sp/>inNormal;<sp/>attribure<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>vertexAttributePointer<sp/>so<sp/>the<sp/>correct<sp/>size<sp/>and<sp/>type<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>is<sp/>attribute<sp/>0<sp/>with<sp/>x,y,z(3)<sp/>parts<sp/>of<sp/>type<sp/>GL_FLOAT,<sp/>our<sp/>complete<sp/>packed<sp/>data<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sizeof(vertData)<sp/>and<sp/>the<sp/>offset<sp/>into<sp/>the<sp/>data<sp/>structure<sp/>for<sp/>the<sp/>first<sp/>x<sp/>component<sp/>is<sp/>5<sp/>(u,v,nx,ny,nz)..x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;setVertexAttributePointer(0,3,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1_vert_data" kindref="compound">VertData</ref>),5);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uv<sp/>same<sp/>as<sp/>above<sp/>but<sp/>starts<sp/>at<sp/>0<sp/>and<sp/>is<sp/>attrib<sp/>1<sp/>and<sp/>only<sp/>u,v<sp/>so<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;setVertexAttributePointer(1,2,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1_vert_data" kindref="compound">VertData</ref>),0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>same<sp/>as<sp/>vertex<sp/>only<sp/>starts<sp/>at<sp/>position<sp/>2<sp/>(u,v)-&gt;<sp/>nx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;setVertexAttributePointer(2,3,<ref refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" kindref="member">GL_FLOAT</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structngl_1_1_vert_data" kindref="compound">VertData</ref>),2);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>set<sp/>the<sp/>vertex<sp/>attributes<sp/>we<sp/>tell<sp/>the<sp/>VAO<sp/>class<sp/>how<sp/>many<sp/>indices<sp/>to<sp/>draw<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>glDrawArrays<sp/>is<sp/>called,<sp/>in<sp/>this<sp/>case<sp/>we<sp/>use<sp/>buffSize<sp/>(but<sp/>if<sp/>we<sp/>wished<sp/>less<sp/>of<sp/>the<sp/>sphere<sp/>to<sp/>be<sp/>drawn<sp/>we<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specify<sp/>less<sp/>(in<sp/>steps<sp/>of<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;setNumIndices(<ref refid="classngl_1_1_abstract_mesh_1a305a5b883ac911a3bb8723811259acc1" kindref="member">m_meshSize</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>we<sp/>have<sp/>finished<sp/>for<sp/>now<sp/>so<sp/>time<sp/>to<sp/>unbind<sp/>the<sp/>VAO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;unbind();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>indicate<sp/>we<sp/>have<sp/>a<sp/>vao<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a5109b0163236502482095620a5db728f" kindref="member">m_vao</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classngl_1_1_abstract_mesh_1aeca778cf5182566bb68edce31f817c5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1aeca778cf5182566bb68edce31f817c5e" kindref="member">AbstractMesh::draw</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a5109b0163236502482095620a5db728f" kindref="member">m_vao</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1a56eb30bdaec31e32772833199fd54f22" kindref="member">m_texture</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glew_8h_1a940f58f3728713267a58e2d09ff602b2" kindref="member">glBindTexture</ref>(<ref refid="glew_8h_1ad4de17abefa73fa2ef53379f73b734be" kindref="member">GL_TEXTURE_2D</ref>,<ref refid="classngl_1_1_abstract_mesh_1ae7d52c8f9cc7cd566967f81198588919" kindref="member">m_textureID</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;bind();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;unbind();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classngl_1_1_abstract_mesh_1a778aab7afc0c3015b0d5133dfbf33b94" refkind="member"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>*<sp/><ref refid="classngl_1_1_abstract_mesh_1a778aab7afc0c3015b0d5133dfbf33b94" kindref="member">AbstractMesh::mapVAOVerts</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>*<sp/>ptr=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>our<sp/>VBO<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;bind();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NGLCheckGLError(&quot;Abstract<sp/>Mesh&quot;,__LINE__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a3b3a3f8200f094b781e9f61e2f19fc50" kindref="member">glBindBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;getBufferID(0));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NGLCheckGLError(&quot;Abstract<sp/>Mesh&quot;,__LINE__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USINGIOS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="glew_8h_1a88f951d9fb1bd55e28bc3c8581adf2eb" kindref="member">glMapBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>,<sp/><ref refid="glew_8h_1aa5fd429fd2b79f5936c1421afb205dcd" kindref="member">GL_READ_WRITE</ref>));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ptr<sp/>=<sp/>(float*)glMapBufferOES(GL_ARRAY_BUFFER,GL_READ_WRITE_OES);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NGLCheckGLError(&quot;Abstract<sp/>Mesh&quot;,__LINE__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aca2b5ff30a55850a3597154b79c94186" kindref="member">m_vboMapped</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classngl_1_1_abstract_mesh_1ad5a08610ff985730c8116b337d9d578a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1ad5a08610ff985730c8116b337d9d578a" kindref="member">AbstractMesh::unMapVAO</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1aca2b5ff30a55850a3597154b79c94186" kindref="member">m_vboMapped</ref>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ae6a0a2dca1b86176367fab8941e9ab8f" kindref="member">glUnmapBuffer</ref>(<ref refid="glew_8h_1a7180045dcb52b22af2cd0366026bc3ed" kindref="member">GL_ARRAY_BUFFER</ref>);<sp/></highlight><highlight class="comment">//<sp/>unmap<sp/>it<sp/>after<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aca2b5ff30a55850a3597154b79c94186" kindref="member">m_vboMapped</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa5f50e09c03681f06aef1b9f32725744" kindref="member">m_vaoMesh</ref>-&gt;unbind();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classngl_1_1_abstract_mesh_1a8cbb6c3661cdcc06436db68dd76fa585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1a8cbb6c3661cdcc06436db68dd76fa585" kindref="member">AbstractMesh::calcDimensions</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>center<sp/>of<sp/>the<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>=0.0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>:<sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>+=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>/=<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>extents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a8264b039550ca93f0ed2caded810accb" kindref="member">m_maxX</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0555c2d79d6ab50da520a482563b43c4" kindref="member">m_minX</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1acd96df6e97f2ee1483fe8370fecc8241" kindref="member">m_maxY</ref>=<ref refid="classngl_1_1_abstract_mesh_1a9702f04680673970644c2325b7a08c60" kindref="member">m_minY</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1ada8290a2ad1243d255e84f19a800bd95" kindref="member">m_maxZ</ref>=<ref refid="classngl_1_1_abstract_mesh_1aace446c6ba3195240df78884a10b78b2" kindref="member">m_minZ</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>center<sp/>of<sp/>the<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>=0.0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>:m_verts)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>+=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>/=<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>extents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a8264b039550ca93f0ed2caded810accb" kindref="member">m_maxX</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0555c2d79d6ab50da520a482563b43c4" kindref="member">m_minX</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1acd96df6e97f2ee1483fe8370fecc8241" kindref="member">m_maxY</ref>=<ref refid="classngl_1_1_abstract_mesh_1a9702f04680673970644c2325b7a08c60" kindref="member">m_minY</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1ada8290a2ad1243d255e84f19a800bd95" kindref="member">m_maxZ</ref>=<ref refid="classngl_1_1_abstract_mesh_1aace446c6ba3195240df78884a10b78b2" kindref="member">m_minZ</ref>=<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>:<sp/>m_verts)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_x<sp/>&gt;<ref refid="classngl_1_1_abstract_mesh_1a8264b039550ca93f0ed2caded810accb" kindref="member">m_maxX</ref>)<sp/>{<sp/><ref refid="classngl_1_1_abstract_mesh_1a8264b039550ca93f0ed2caded810accb" kindref="member">m_maxX</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_x;<sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_x<sp/>&lt;<ref refid="classngl_1_1_abstract_mesh_1a0555c2d79d6ab50da520a482563b43c4" kindref="member">m_minX</ref>)<sp/>{<sp/><ref refid="classngl_1_1_abstract_mesh_1a0555c2d79d6ab50da520a482563b43c4" kindref="member">m_minX</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_x;<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y<sp/>&gt;<ref refid="classngl_1_1_abstract_mesh_1acd96df6e97f2ee1483fe8370fecc8241" kindref="member">m_maxY</ref>)<sp/>{<sp/><ref refid="classngl_1_1_abstract_mesh_1acd96df6e97f2ee1483fe8370fecc8241" kindref="member">m_maxY</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y;<sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y<sp/>&lt;<ref refid="classngl_1_1_abstract_mesh_1a9702f04680673970644c2325b7a08c60" kindref="member">m_minY</ref>)<sp/>{<sp/><ref refid="classngl_1_1_abstract_mesh_1a9702f04680673970644c2325b7a08c60" kindref="member">m_minY</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y;<sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z<sp/>&gt;<ref refid="classngl_1_1_abstract_mesh_1ada8290a2ad1243d255e84f19a800bd95" kindref="member">m_maxZ</ref>)<sp/>{<sp/><ref refid="classngl_1_1_abstract_mesh_1ada8290a2ad1243d255e84f19a800bd95" kindref="member">m_maxZ</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z;<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z<sp/>&lt;<ref refid="classngl_1_1_abstract_mesh_1aace446c6ba3195240df78884a10b78b2" kindref="member">m_minZ</ref>)<sp/>{<sp/><ref refid="classngl_1_1_abstract_mesh_1aace446c6ba3195240df78884a10b78b2" kindref="member">m_minZ</ref>=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>bbox<sp/>based<sp/>on<sp/>the<sp/>new<sp/>object<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a87d423496aaeefcbf960da1d74b9636d" kindref="member">m_ext</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_b_box" kindref="compound">BBox</ref>(<ref refid="classngl_1_1_abstract_mesh_1a0555c2d79d6ab50da520a482563b43c4" kindref="member">m_minX</ref>,<ref refid="classngl_1_1_abstract_mesh_1a8264b039550ca93f0ed2caded810accb" kindref="member">m_maxX</ref>,<ref refid="classngl_1_1_abstract_mesh_1a9702f04680673970644c2325b7a08c60" kindref="member">m_minY</ref>,<ref refid="classngl_1_1_abstract_mesh_1acd96df6e97f2ee1483fe8370fecc8241" kindref="member">m_maxY</ref>,<ref refid="classngl_1_1_abstract_mesh_1aace446c6ba3195240df78884a10b78b2" kindref="member">m_minZ</ref>,<ref refid="classngl_1_1_abstract_mesh_1ada8290a2ad1243d255e84f19a800bd95" kindref="member">m_maxZ</ref>));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="classngl_1_1_abstract_mesh_1aecd194e72054c0ba2a89f606368af14a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1aecd194e72054c0ba2a89f606368af14a" kindref="member">AbstractMesh::saveNCCABinaryMesh</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>&amp;_fname<sp/><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>basically<sp/>we<sp/>need<sp/>to<sp/>save<sp/>all<sp/>the<sp/>state<sp/>data<sp/>from<sp/>the<sp/>abstract<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>map<sp/>the<sp/>vbo<sp/>on<sp/>the<sp/>gpu<sp/>and<sp/>dump<sp/>that<sp/>in<sp/>one<sp/>go,<sp/>this<sp/>means<sp/>we<sp/>have<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/>call<sp/>CreateVBO<sp/>first<sp/>the<sp/>Save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::fstream<sp/>file;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>file.open(_fname.c_str(),std::ios::out<sp/>|<sp/><ref refid="glew_8h_1a0ace813ee1f7020974174eb65d53ff0d" kindref="member">std::ios::binary</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.is_open())</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;problems<sp/>Opening<sp/>File<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_fname&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>write<sp/>out<sp/>our<sp/>own<sp/>Magic<sp/>Number<sp/>file<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>header(</highlight><highlight class="stringliteral">&quot;ngl::bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>file.write(header.c_str(),header.length());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a8536f44940c41d833ce1360e00e925d2" kindref="member">m_nNorm</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a2f47063be79b1f065cadc30e35cf0a17" kindref="member">m_nTex</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1aa4e5c1cdc67001f14499bb0da40f6cd0" kindref="member">m_nFaces</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a0cdddd3dd2b076816bd25647acae16c5" kindref="member">m_center</ref>.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a56eb30bdaec31e32772833199fd54f22" kindref="member">m_texture</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a8264b039550ca93f0ed2caded810accb" kindref="member">m_maxX</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1acd96df6e97f2ee1483fe8370fecc8241" kindref="member">m_maxY</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1ada8290a2ad1243d255e84f19a800bd95" kindref="member">m_maxZ</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a0555c2d79d6ab50da520a482563b43c4" kindref="member">m_minX</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1a9702f04680673970644c2325b7a08c60" kindref="member">m_minY</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<ref refid="classngl_1_1_abstract_mesh_1aace446c6ba3195240df78884a10b78b2" kindref="member">m_minZ</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref>));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a4885d5167a332db76bfd4aa1f462928a" kindref="member">m_dataPackType</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref>));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a586cec1c03451ef5bef925b03cd6e286" kindref="member">m_indexSize</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;<sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1ab7f27d366534a8369a420e6a005bb47e" kindref="member">m_bufferPackSize</ref>),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>=<ref refid="classngl_1_1_abstract_mesh_1a586cec1c03451ef5bef925b03cd6e286" kindref="member">m_indexSize</ref>*<ref refid="classngl_1_1_abstract_mesh_1ab7f27d366534a8369a420e6a005bb47e" kindref="member">m_bufferPackSize</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="glew_8h_1a31aeedaeef29442c9c015ab355c8f5ab" kindref="member">GLfloat</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;size<sp/>is&quot;</highlight><highlight class="normal">&lt;&lt;size&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;size),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>*vboMem=this-&gt;<ref refid="classngl_1_1_abstract_mesh_1a778aab7afc0c3015b0d5133dfbf33b94" kindref="member">mapVAOVerts</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast&lt;char<sp/>*&gt;(vboMem),size);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>write<sp/>the<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>size=<ref refid="classngl_1_1_abstract_mesh_1ae8b4d4fa40a706e2d5a630876f65a8f4" kindref="member">m_outIndices</ref>.size();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>out<sp/>indices<sp/>=&quot;</highlight><highlight class="normal">&lt;&lt;size&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(&amp;size),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>:<sp/><ref refid="classngl_1_1_abstract_mesh_1ae8b4d4fa40a706e2d5a630876f65a8f4" kindref="member">m_outIndices</ref>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>file.write(reinterpret_cast<sp/>&lt;char<sp/>*&gt;(d),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classngl_1_1_abstract_mesh_1ad5a08610ff985730c8116b337d9d578a" kindref="member">unMapVAO</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="classngl_1_1_abstract_mesh_1ad37269f60f9bb3d9018df90ffe63812c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_abstract_mesh_1ad37269f60f9bb3d9018df90ffe63812c" kindref="member">AbstractMesh::calcBoundingSphere</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>.size();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref><sp/>&lt;=0<sp/>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;now<sp/>vertices<sp/>loaded<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>=0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aec6feb6b9e924ac4fccd350aa059922c" kindref="member">m_sphereRadius</ref>=0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>minimal<sp/>and<sp/>maximal<sp/>extents<sp/>and<sp/>indexs<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>vert<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minXI=0;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minYI=0;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minZI=0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxXI=0;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxYI=0;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxZI=0;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>minX=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[0].m_x;<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1af9f3eedfdbc0354cba9c459fea98e8a9" kindref="member">maxX</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[0].m_x;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a5fcdea47b03815b11f25134f21a8b025" kindref="member">minY</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[0].m_y;<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1a317f2d2bdad87dc2180c7721994d2073" kindref="member">maxY</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[0].m_y;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1af2e6a53aa48dbdc7a8d0b8a0e5c69133" kindref="member">minZ</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[0].m_z;<sp/><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/><ref refid="glew_8h_1acba857d9c845379e0af0e4b2c7875080" kindref="member">maxZ</ref>=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[0].m_z;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_x<sp/>&lt;<sp/>minX)<sp/>{<sp/>minXI=i;<sp/>minX=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_x;<sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_x<sp/>&gt;<sp/>maxX)<sp/>{<sp/>maxXI=i;<sp/>maxX=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_x;<sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_y<sp/>&lt;<sp/>minY)<sp/>{<sp/>minYI=i;<sp/>minY=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_y;<sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_y<sp/>&gt;<sp/>maxY)<sp/>{<sp/>maxYI=i;<sp/>maxY=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_y;<sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_z<sp/>&lt;<sp/>minZ)<sp/>{<sp/>minZI=i;<sp/>minZ=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_z;<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_z<sp/>&gt;<sp/>maxZ)<sp/>{<sp/>maxZI=i;<sp/>maxZ=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].m_z;<sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>find<sp/>maximally<sp/>seperated<sp/>points<sp/>from<sp/>the<sp/>3<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>use<sp/>this<sp/>to<sp/>initialise<sp/>the<sp/>spheres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dx=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minXI].m_x-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxXI].m_x;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dy=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minXI].m_y-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxXI].m_y;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dz=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minXI].m_z-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxXI].m_z;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>diam2x=dx*dx+dy*dy+dz*dz;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">dx=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minYI].m_x-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxYI].m_x;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">dy=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minYI].m_y-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxYI].m_y;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">dz=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minYI].m_z-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxYI].m_z;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>diam2y=dx*dx+dy*dy+dz*dz;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">dx=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minZI].m_x-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxZI].m_x;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">dy=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minZI].m_y-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxZI].m_y;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">dz=<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[minZI].m_z-<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[maxZI].m_z;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>diam2z=dx*dx+dy*dy+dz*dz;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>diamTwo=diam2x;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1i=minXI;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p2i=maxXI;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diam2y&gt;diamTwo){<sp/>diamTwo=diam2y;<sp/>p1i=minYI;<sp/>p2i=maxYI;}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diam2z&gt;diamTwo){<sp/>diamTwo=diam2z;<sp/>p1i=minZI;<sp/>p2i=maxZI;}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>get<sp/>the<sp/>center<sp/>of<sp/>the<sp/>sphere<sp/>as<sp/>the<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>two<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>=(<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[p1i]+<ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[p2i])/2.0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>now<sp/>calculate<sp/>radius<sp/>and<sp/>radius^2<sp/>of<sp/>the<sp/>initial<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>radTwo=diamTwo/4.0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>rad=sqrt(radTwo);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>now<sp/>check<sp/>and<sp/>adjust<sp/>for<sp/>outlying<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref><sp/>newCenter;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>newRad2;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>newRad;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dist2;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>dist;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref><sp/>delta;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref><sp/>:<sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>dx=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>-<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>dy=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y-<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>dz=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z-<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>squared<sp/>of<sp/>old<sp/>center<sp/>to<sp/>current<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>dist2=dx*dx+dy*dy+dz*dz;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>update<sp/>the<sp/>sphere<sp/>if<sp/>this<sp/>point<sp/>is<sp/>outside<sp/>the<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dist2<sp/>&gt;<sp/>radTwo)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>dist=sqrt(dist2);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>newRad=(rad+dist)/2.0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>newRad2=newRad*newRad;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>delta=dist-newRad;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>compute<sp/>new<sp/>center<sp/>using<sp/>the<sp/>weights<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>newCenter.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>=(newRad*<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>+delta*<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_x)/dist;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>newCenter.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>=(newRad*<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>+delta*<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y)/dist;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>newCenter.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>=(newRad*<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>+delta*<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z)/dist;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>test<sp/>to<sp/>see<sp/>if<sp/>we<sp/>have<sp/>a<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>dx=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_x-newCenter.<ref refid="classngl_1_1_vec3_1a30f6ffdadd9bdb00159553a4ff3f3f25" kindref="member">m_x</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>dy=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_y-newCenter.<ref refid="classngl_1_1_vec3_1a6c46bcd25521e9840d992280bdfb5a91" kindref="member">m_y</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>dz=<ref refid="glew_8h_1a6509431814422c215a65946289dd98b8" kindref="member">v</ref>.m_z-newCenter.<ref refid="classngl_1_1_vec3_1a1e5d951f56e56b18edadfd661eb6012a" kindref="member">m_z</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>dist2=dx*dx+dy*dy+dz*dz;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dist2<sp/>&gt;<sp/>newRad2)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;something<sp/>wrong<sp/>here\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;error<sp/>margin<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;dist2-newRad2&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>=newCenter;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>rad=newRad;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>radTwo=rad*rad;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>if<sp/>dist2&gt;rad2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aec6feb6b9e924ac4fccd350aa059922c" kindref="member">m_sphereRadius</ref>=rad;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1aec6feb6b9e924ac4fccd350aa059922c" kindref="member">m_sphereRadius</ref>=rad;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">std::cout&lt;&lt;<ref refid="classngl_1_1_abstract_mesh_1a5b396d93df500bb90ba5a5f71dccc953" kindref="member">m_sphereCenter</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>rad<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_abstract_mesh_1aec6feb6b9e924ac4fccd350aa059922c" kindref="member">m_sphereRadius</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">}<sp/></highlight><highlight class="comment">//end<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/AbstractMesh.cpp"/>
  </compounddef>
</doxygen>
