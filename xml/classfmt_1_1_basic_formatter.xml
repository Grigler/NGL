<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfmt_1_1_basic_formatter" kind="class" language="C++" prot="public">
    <compoundname>fmt::BasicFormatter</compoundname>
    <basecompoundref refid="classfmt_1_1internal_1_1_formatter_base" prot="private" virt="non-virtual">fmt::internal::FormatterBase</basecompoundref>
    <includes refid="format_8h" local="no">format.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>CharType</declname>
        <defname>CharType</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>ArgFormatter</declname>
        <defname>ArgFormatter</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" prot="public" static="no">
        <type>CharType</type>
        <definition>typedef CharType fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;::Char</definition>
        <argsstring></argsstring>
        <name>Char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The character type for the output. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2037" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2037" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfmt_1_1_basic_formatter_1acb6c2ccec5ecc759d6894e8069ba226a" prot="private" static="no" mutable="no">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref>&lt; <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> &gt; &amp;</type>
        <definition>BasicWriter&lt;Char&gt;&amp; fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;::writer_</definition>
        <argsstring></argsstring>
        <name>writer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2040" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfmt_1_1_basic_formatter_1a890f1e338eaf74e6a5376d8a7ee077e3" prot="private" static="no" mutable="no">
        <type><ref refid="classfmt_1_1internal_1_1_arg_map" kindref="compound">internal::ArgMap</ref>&lt; <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> &gt;</type>
        <definition>internal::ArgMap&lt;Char&gt; fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2041" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2041" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1a5997ffe8021f973e53656c946c4bf556" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;::FMT_DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(BasicFormatter)</argsstring>
        <name>FMT_DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_formatter" kindref="compound">BasicFormatter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1ab2518374009dbb27392efa0d16b2f3a8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfmt_1_1internal_1_1_arg" kindref="compound">internal::Arg</ref></type>
        <definition>internal::Arg fmt::BasicFormatter&lt; Char, AF &gt;::get_arg</definition>
        <argsstring>(BasicStringRef&lt; Char &gt; arg_name, const char *&amp;error)</argsstring>
        <name>get_arg</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_string_ref" kindref="compound">BasicStringRef</ref>&lt; <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> &gt;</type>
          <declname>arg_name</declname>
        </param>
        <param>
          <type>const char *&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2049" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3524" bodyend="3534"/>
        <references refid="namespacefmt_1a4649a895b3f769fe24b268e39a8cf152" compoundref="format_8h" startline="3325" endline="3327">fmt::arg</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1af9f5dc339c7dd167253bc1354f0c5a65" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfmt_1_1internal_1_1_arg" kindref="compound">internal::Arg</ref></type>
        <definition>internal::Arg fmt::BasicFormatter&lt; Char, AF &gt;::parse_arg_index</definition>
        <argsstring>(const Char *&amp;s)</argsstring>
        <name>parse_arg_index</name>
        <param>
          <type>const <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> *&amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2052" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3537" bodyend="3546"/>
        <references refid="namespacefmt_1a4649a895b3f769fe24b268e39a8cf152" compoundref="format_8h" startline="3325" endline="3327">fmt::arg</references>
        <references refid="format_8h_1ad9e2ed6d3b432a04c9622c34a2495304" compoundref="format_8h" startline="172">FMT_THROW</references>
        <references refid="namespacefmt_1_1internal_1a20352082f5ee17703e71a37e30c6ddaf" compoundref="format_8h" startline="3484" endline="3501">fmt::internal::parse_nonnegative_int</references>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1ac6d66a7beef58c3584327bdab9bbd92b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfmt_1_1internal_1_1_arg" kindref="compound">internal::Arg</ref></type>
        <definition>internal::Arg fmt::BasicFormatter&lt; Char, AF &gt;::parse_arg_name</definition>
        <argsstring>(const Char *&amp;s)</argsstring>
        <name>parse_arg_name</name>
        <param>
          <type>const <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> *&amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2055" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3549" bodyend="3561"/>
        <references refid="namespacefmt_1a4649a895b3f769fe24b268e39a8cf152" compoundref="format_8h" startline="3325" endline="3327">fmt::arg</references>
        <references refid="format_8h_1ad9e2ed6d3b432a04c9622c34a2495304" compoundref="format_8h" startline="172">FMT_THROW</references>
        <references refid="namespacefmt_1_1internal_1a27d95fd413ab4be7aca6fe53f1a7f6a6" compoundref="format_8h" startline="3477" endline="3479">fmt::internal::is_name_start</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1a2b190901681ff0413dc60522fe158fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;::BasicFormatter</definition>
        <argsstring>(const ArgList &amp;args, BasicWriter&lt; Char &gt; &amp;w)</argsstring>
        <name>BasicFormatter</name>
        <param>
          <type>const <ref refid="classfmt_1_1_arg_list" kindref="compound">ArgList</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref>&lt; <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <computeroutput><ref refid="classfmt_1_1_basic_formatter" kindref="compound">BasicFormatter</ref></computeroutput> object. References to the arguments and the writer are stored in the formatter object so make sure they have appropriate lifetimes.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2065" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2065" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1abd5692d2f2123b27da7941d56fc6073c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfmt_1_1_basic_writer" kindref="compound">BasicWriter</ref>&lt; <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> &gt; &amp;</type>
        <definition>BasicWriter&lt;Char&gt;&amp; fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;::writer</definition>
        <argsstring>()</argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a reference to the writer associated with this formatter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2069" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="2069" bodyend="2069"/>
        <referencedby refid="namespacefmt_1a9a337b83f27681daadc5565b49e8409d" compoundref="time_8h" startline="18" endline="50">fmt::format_arg</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1a63acecbbf9681005f3c7eb4d42a54bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void fmt::BasicFormatter&lt; Char, AF &gt;::format</definition>
        <argsstring>(BasicCStringRef&lt; Char &gt; format_str)</argsstring>
        <name>format</name>
        <param>
          <type><ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">BasicCStringRef</ref>&lt; <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> &gt;</type>
          <declname>format_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats stored arguments and writes the output to the writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2072" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3734" bodyend="3753"/>
        <references refid="namespacefmt_1a4649a895b3f769fe24b268e39a8cf152" compoundref="format_8h" startline="3325" endline="3327">fmt::arg</references>
        <references refid="classfmt_1_1_basic_c_string_ref_1ae3bafa845b53339b20c4f5edb4f635f9" compoundref="format_8h" startline="531" endline="531">fmt::BasicCStringRef&lt; Char &gt;::c_str</references>
        <references refid="format_8h_1ad9e2ed6d3b432a04c9622c34a2495304" compoundref="format_8h" startline="172">FMT_THROW</references>
        <references refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</references>
        <references refid="namespacefmt_1_1internal_1a27d95fd413ab4be7aca6fe53f1a7f6a6" compoundref="format_8h" startline="3477" endline="3479">fmt::internal::is_name_start</references>
        <references refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" compoundref="ostream_8cc" startline="15" endline="27">fmt::internal::write</references>
        <referencedby refid="namespacefmt_1a3e1efc349649f867c4cc16cab445d7c5" compoundref="ostream_8h" startline="76" endline="87">fmt::format_arg</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfmt_1_1_basic_formatter_1ab436d449f9a0678badb672af2a8ecb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> *</type>
        <definition>const Char * fmt::BasicFormatter&lt; Char, ArgFormatter &gt;::format</definition>
        <argsstring>(const Char *&amp;format_str, const internal::Arg &amp;arg)</argsstring>
        <name>format</name>
        <param>
          <type>const <ref refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" kindref="member">Char</ref> *&amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>const <ref refid="structfmt_1_1internal_1_1_arg" kindref="compound">internal::Arg</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="2075" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="3564" bodyend="3731"/>
        <references refid="structfmt_1_1_align_spec_1aac93fb3829d550af86479f1ecaa73f95" compoundref="format_8h" startline="1627">fmt::AlignSpec::align_</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab9fa8e7eb41061a7670d4d8b43007f23" compoundref="format_8h" startline="1589">fmt::ALIGN_CENTER</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2a63e66a16a075b0b22e5fae027892057f" compoundref="format_8h" startline="1589">fmt::ALIGN_DEFAULT</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2a37d3391e09dceceb0e75094f691b02eb" compoundref="format_8h" startline="1589">fmt::ALIGN_LEFT</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2a93f62fb67b1cbabf62cab3185bb5f4e3" compoundref="format_8h" startline="1589">fmt::ALIGN_NUMERIC</references>
        <references refid="namespacefmt_1ac0671080923edbf0a7c67a567417f0d2ab4ab67c39e6d8562a116f3da83de391a" compoundref="format_8h" startline="1589">fmt::ALIGN_RIGHT</references>
        <references refid="namespacefmt_1_1internal_1a867432b13d2f634bfb4aa28e464b57a1" compoundref="format_8h" startline="3512" endline="3520">fmt::internal::check_sign</references>
        <references refid="structfmt_1_1internal_1_1_value_1a2dcff1e0ac8f7fb7fc6dd448d66978cf" compoundref="format_8h" startline="1023">fmt::internal::Value::custom</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaaeaa06f45cc1a466b789ae71d6d06d1b0" compoundref="format_8h" startline="1032">fmt::internal::Value::CUSTOM</references>
        <references refid="structfmt_1_1_width_spec_1ad1c9740afb2b05c4ac7b2d9fa9760891" compoundref="format_8h" startline="1617">fmt::WidthSpec::fill_</references>
        <references refid="structfmt_1_1_format_spec_1a9fbd00ed2b8e3b96eaa2beb54aff641e" compoundref="format_8h" startline="1648">fmt::FormatSpec::flags_</references>
        <references refid="format_8h_1ad9e2ed6d3b432a04c9622c34a2495304" compoundref="format_8h" startline="172">FMT_THROW</references>
        <references refid="structfmt_1_1internal_1_1_value_1_1_custom_value_1a36f27ca0939e90a5fe6d7d355ea0f97a" compoundref="format_8h" startline="1008">fmt::internal::Value::CustomValue::format</references>
        <references refid="namespacefmt_1a638f25c535b3bfa12dc1478b11885b6f" compoundref="format_8h" startline="3175" endline="3179">fmt::format</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea02280924fe002ad252cfbcc0cf6492aa" compoundref="format_8h" startline="1594">fmt::HASH_FLAG</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaa6ab1b5ad31036f4c90bae16e873b3396" compoundref="format_8h" startline="1029">fmt::internal::Value::INT</references>
        <references refid="structfmt_1_1internal_1_1_value_1ac295b81747c26b97893be505a03381c8" compoundref="format_8h" startline="1012">fmt::internal::Value::int_value</references>
        <references refid="namespacefmt_1_1internal_1a27d95fd413ab4be7aca6fe53f1a7f6a6" compoundref="format_8h" startline="3477" endline="3479">fmt::internal::is_name_start</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaa1cc1a5881e640c0009f58a05b653d535" compoundref="format_8h" startline="1029">fmt::internal::Value::LAST_INTEGER_TYPE</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaa7674f34a96c22fec85d9f27d082b4412" compoundref="format_8h" startline="1029">fmt::internal::Value::LONG_LONG</references>
        <references refid="structfmt_1_1internal_1_1_value_1a1dab8b1df1f88c35b6893d63b1b72af8" compoundref="format_8h" startline="1014">fmt::internal::Value::long_long_value</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbeafc86655957d3b777b4c87eeb32250bc4" compoundref="format_8h" startline="1594">fmt::MINUS_FLAG</references>
        <references refid="namespacefmt_1_1internal_1a20352082f5ee17703e71a37e30c6ddaf" compoundref="format_8h" startline="3484" endline="3501">fmt::internal::parse_nonnegative_int</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea2b053d8fd806a73492750893f902a694" compoundref="format_8h" startline="1594">fmt::PLUS_FLAG</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaaaaa373dcb5378f0ec6cd6e4dc59a8cfb" compoundref="format_8h" startline="1032">fmt::internal::Value::POINTER</references>
        <references refid="structfmt_1_1_format_spec_1a8444724bdd0a55bf3226a17e321c12c5" compoundref="format_8h" startline="1649">fmt::FormatSpec::precision_</references>
        <references refid="namespacefmt_1_1internal_1a706fe7cc890026cebbd52e75d8a97afc" compoundref="format_8h" startline="3503" endline="3509">fmt::internal::require_numeric_argument</references>
        <references refid="namespacefmt_1ac14c51c5c796819e98c600fd04a2fdbea41bce447447361e7a4b3e9d8a84877db" compoundref="format_8h" startline="1594">fmt::SIGN_FLAG</references>
        <references refid="structfmt_1_1internal_1_1_arg_1af1165b4e8647bea5913922de82599e2e" compoundref="format_8h" startline="1039">fmt::internal::Arg::type</references>
        <references refid="structfmt_1_1_format_spec_1aa6f085ef583f708dde9636c03adea6ab" compoundref="format_8h" startline="1650">fmt::FormatSpec::type_</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaac7303224391053ae45d4ff13ad0f017c" compoundref="format_8h" startline="1029">fmt::internal::Value::UINT</references>
        <references refid="structfmt_1_1internal_1_1_value_1a9ced917767812c9572065509f22bec18" compoundref="format_8h" startline="1013">fmt::internal::Value::uint_value</references>
        <references refid="structfmt_1_1internal_1_1_value_1a0305339d0a9571e14e26f385367fedaaa8c2ffe6909d26d46781aa6fb9b8ae418" compoundref="format_8h" startline="1029">fmt::internal::Value::ULONG_LONG</references>
        <references refid="structfmt_1_1internal_1_1_value_1a78424f46c0150190010e5c27ec3c69a0" compoundref="format_8h" startline="1015">fmt::internal::Value::ulong_long_value</references>
        <references refid="structfmt_1_1internal_1_1_value_1_1_custom_value_1aaaa7c10023f8b3886bee9593cddea150" compoundref="format_8h" startline="1007">fmt::internal::Value::CustomValue::value</references>
        <references refid="structfmt_1_1_width_spec_1a83fed5d5a674ea54a48feb6edef4c1c7" compoundref="format_8h" startline="1614">fmt::WidthSpec::width_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This template formats data and writes the output to a writer. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1274">
        <label>fmt::BasicFormatter&lt; Char, ArgFormatter&lt; Char &gt; &gt;</label>
        <link refid="classfmt_1_1_basic_formatter"/>
        <childnode refid="1272" relation="template-instance">
          <edgelabel>&lt; Char, ArgFormatter&lt; Char &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1273">
        <label>fmt::internal::FormatterBase</label>
        <link refid="classfmt_1_1internal_1_1_formatter_base"/>
      </node>
      <node id="1275">
        <label>fmt::BasicFormatter&lt; Char, Impl &gt;</label>
        <link refid="classfmt_1_1_basic_formatter"/>
        <childnode refid="1272" relation="template-instance">
          <edgelabel>&lt; Char, Impl &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1272">
        <label>fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;</label>
        <link refid="classfmt_1_1_basic_formatter"/>
        <childnode refid="1273" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1278">
        <label>fmt::ArgList</label>
        <link refid="classfmt_1_1_arg_list"/>
        <childnode refid="1279" relation="usage">
          <edgelabel>+values_</edgelabel>
        </childnode>
        <childnode refid="1281" relation="usage">
          <edgelabel>+args_</edgelabel>
        </childnode>
      </node>
      <node id="1279">
        <label>fmt::internal::Value</label>
        <link refid="structfmt_1_1internal_1_1_value"/>
        <childnode refid="1280" relation="usage">
          <edgelabel>+custom</edgelabel>
        </childnode>
      </node>
      <node id="1281">
        <label>fmt::internal::Arg</label>
        <link refid="structfmt_1_1internal_1_1_arg"/>
        <childnode refid="1279" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1277">
        <label>fmt::internal::FormatterBase</label>
        <link refid="classfmt_1_1internal_1_1_formatter_base"/>
        <childnode refid="1278" relation="usage">
          <edgelabel>-args_</edgelabel>
        </childnode>
      </node>
      <node id="1280">
        <label>fmt::internal::Value::CustomValue</label>
        <link refid="structfmt_1_1internal_1_1_value_1_1_custom_value"/>
      </node>
      <node id="1276">
        <label>fmt::BasicFormatter&lt; CharType, ArgFormatter &gt;</label>
        <link refid="classfmt_1_1_basic_formatter"/>
        <childnode refid="1277" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/format.h" line="389" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/fmt/format.h" bodystart="389" bodyend="-1"/>
    <listofallmembers>
      <member refid="classfmt_1_1internal_1_1_formatter_base_1a6b7a3a49a08e76e915400748f3cbe7fc" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>args</name></member>
      <member refid="classfmt_1_1_basic_formatter_1a2b190901681ff0413dc60522fe158fdc" prot="public" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>BasicFormatter</name></member>
      <member refid="classfmt_1_1_basic_formatter_1af8270b25395aeb82b8c72c370c5cf13a" prot="public" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>Char</name></member>
      <member refid="classfmt_1_1internal_1_1_formatter_base_1a27444362817694c52d86723bd2b62390" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>check_no_auto_index</name></member>
      <member refid="classfmt_1_1_basic_formatter_1a5997ffe8021f973e53656c946c4bf556" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>FMT_DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classfmt_1_1_basic_formatter_1a63acecbbf9681005f3c7eb4d42a54bf7" prot="public" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>format</name></member>
      <member refid="classfmt_1_1_basic_formatter_1ab436d449f9a0678badb672af2a8ecb32" prot="public" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>format</name></member>
      <member refid="classfmt_1_1internal_1_1_formatter_base_1a5a27cf6bbba1b7e159bb21e12453c216" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>FormatterBase</name></member>
      <member refid="classfmt_1_1_basic_formatter_1ab2518374009dbb27392efa0d16b2f3a8" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>get_arg</name></member>
      <member refid="classfmt_1_1internal_1_1_formatter_base_1ad5baca90f220f3f54c0c4a620ec80b7b" prot="private" virt="non-virtual" ambiguityscope="fmt::internal::FormatterBase::"><scope>fmt::BasicFormatter</scope><name>get_arg</name></member>
      <member refid="classfmt_1_1_basic_formatter_1a890f1e338eaf74e6a5376d8a7ee077e3" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>map_</name></member>
      <member refid="classfmt_1_1internal_1_1_formatter_base_1ac3d5811aa9b695596fe0dc67f870e3d4" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>next_arg</name></member>
      <member refid="classfmt_1_1_basic_formatter_1af9f5dc339c7dd167253bc1354f0c5a65" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>parse_arg_index</name></member>
      <member refid="classfmt_1_1_basic_formatter_1ac6d66a7beef58c3584327bdab9bbd92b" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>parse_arg_name</name></member>
      <member refid="classfmt_1_1internal_1_1_formatter_base_1ab29b5470b0f02edfde9b81ba24a51bf6" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>write</name></member>
      <member refid="classfmt_1_1_basic_formatter_1abd5692d2f2123b27da7941d56fc6073c" prot="public" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>writer</name></member>
      <member refid="classfmt_1_1_basic_formatter_1acb6c2ccec5ecc759d6894e8069ba226a" prot="private" virt="non-virtual"><scope>fmt::BasicFormatter</scope><name>writer_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
