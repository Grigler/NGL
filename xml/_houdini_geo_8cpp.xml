<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_houdini_geo_8cpp" kind="file" language="C++">
    <compoundname>HoudiniGeo.cpp</compoundname>
    <includes refid="_houdini_geo_8h" local="yes">HoudiniGeo.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <incdepgraph>
      <node id="4481">
        <label>Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="4482" relation="include">
        </childnode>
        <childnode refid="4488" relation="include">
        </childnode>
        <childnode refid="4489" relation="include">
        </childnode>
        <childnode refid="4490" relation="include">
        </childnode>
      </node>
      <node id="4503">
        <label>Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="4501" relation="include">
        </childnode>
        <childnode refid="4498" relation="include">
        </childnode>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4504" relation="include">
        </childnode>
      </node>
      <node id="4509">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="4507">
        <label>cstdint</label>
      </node>
      <node id="4490">
        <label>QGLContext</label>
      </node>
      <node id="4493">
        <label>Vec3.h</label>
        <link refid="_vec3_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4484">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="4485" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4501">
        <label>string</label>
      </node>
      <node id="4508">
        <label>map</label>
      </node>
      <node id="4483">
        <label>stddef.h</label>
      </node>
      <node id="4500">
        <label>fstream</label>
      </node>
      <node id="4482">
        <label>glew.h</label>
        <link refid="glew_8h"/>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4484" relation="include">
        </childnode>
        <childnode refid="4487" relation="include">
        </childnode>
      </node>
      <node id="4487">
        <label>GL/glu.h</label>
      </node>
      <node id="4485">
        <label>limits.h</label>
      </node>
      <node id="4495">
        <label>Vec4.h</label>
        <link refid="_vec4_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
        <childnode refid="4493" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4497">
        <label>AbstractVAO.h</label>
        <link refid="_abstract_v_a_o_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
      </node>
      <node id="4480">
        <label>HoudiniGeo.h</label>
        <link refid="_houdini_geo_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4491" relation="include">
        </childnode>
        <childnode refid="4508" relation="include">
        </childnode>
      </node>
      <node id="4486">
        <label>wchar.h</label>
      </node>
      <node id="4504">
        <label>Colour.h</label>
        <link refid="_colour_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
      </node>
      <node id="4502">
        <label>Texture.h</label>
        <link refid="_texture_8h"/>
        <childnode refid="4503" relation="include">
        </childnode>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
      </node>
      <node id="4506">
        <label>vector</label>
      </node>
      <node id="4494">
        <label>array</label>
      </node>
      <node id="4499">
        <label>RibExport.h</label>
        <link refid="_rib_export_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
      </node>
      <node id="4489">
        <label>QtOpenGL/QGLContext</label>
      </node>
      <node id="4505">
        <label>NGLassert.h</label>
        <link refid="_n_g_lassert_8h"/>
      </node>
      <node id="4479">
        <label>HoudiniGeo.cpp</label>
        <link refid="HoudiniGeo.cpp"/>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
      </node>
      <node id="4488">
        <label>GL/gl.h</label>
      </node>
      <node id="4496">
        <label>Vec2.h</label>
        <link refid="_vec2_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4498">
        <label>memory</label>
      </node>
      <node id="4492">
        <label>BBox.h</label>
        <link refid="_b_box_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4493" relation="include">
        </childnode>
        <childnode refid="4495" relation="include">
        </childnode>
        <childnode refid="4497" relation="include">
        </childnode>
        <childnode refid="4498" relation="include">
        </childnode>
      </node>
      <node id="4491">
        <label>AbstractMesh.h</label>
        <link refid="_abstract_mesh_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4492" relation="include">
        </childnode>
        <childnode refid="4499" relation="include">
        </childnode>
        <childnode refid="4502" relation="include">
        </childnode>
        <childnode refid="4505" relation="include">
        </childnode>
        <childnode refid="4495" relation="include">
        </childnode>
        <childnode refid="4497" relation="include">
        </childnode>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
        <childnode refid="4507" relation="include">
        </childnode>
        <childnode refid="4498" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacengl">ngl</innernamespace>
    <briefdescription>
<para>implementation files for HoudiniGeo class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Jon<sp/>Macey</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_houdini_geo_8h" kindref="compound">HoudiniGeo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengl" kindref="compound">ngl</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classngl_1_1_houdini_geo_1af5e5e397e0e6c9532945afa99e3bde3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_houdini_geo_1af5e5e397e0e6c9532945afa99e3bde3a" kindref="member">HoudiniGeo::load</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fName,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_calcBB</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>stream<sp/>and<sp/>parse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>fileIn;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>fileIn.open(_fName.c_str());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fileIn.is_open())</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;File<sp/>:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;_fName&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Not<sp/>founds<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>first<sp/>we<sp/>check<sp/>the<sp/>header<sp/>to<sp/>see<sp/>if<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>only<sp/>OBJ&apos;s<sp/>did<sp/>this!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1a8e50ea5f8174ec8f843a9a12ed27985e" kindref="member">loadHeader</ref>(fileIn);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>need<sp/>to<sp/>load<sp/>any<sp/>attribs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classngl_1_1_houdini_geo_1a473cf2f4a699be6f490d4060cd937dc2" kindref="member">m_nPointAttrib</ref><sp/>!=0)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1a0e8e1c573bee69ae825dcac20f0d874b" kindref="member">loadPointAttribDictionary</ref>(fileIn);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1a573790d8e9f7ff430b3063b550e25e68" kindref="member">loadPoints</ref>(fileIn);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>center<sp/>and<sp/>BBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classngl_1_1_abstract_mesh_1a8cbb6c3661cdcc06436db68dd76fa585" kindref="member">calcDimensions</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>fileIn.close();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classngl_1_1_houdini_geo_1ad05cccf96720d28aad1b87701fb51702" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_houdini_geo_1a4ef3537195be8885f455b28b55d44416" kindref="member">HoudiniGeo::HoudiniGeo</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fName</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1ab39e5c5c849285d6b17cd735dab4d65d" kindref="member">m_vbo</ref>=0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1ae8cb9140141d33e2534690874c58c031" kindref="member">m_loaded</ref>=<ref refid="classngl_1_1_houdini_geo_1af5e5e397e0e6c9532945afa99e3bde3a" kindref="member">load</ref>(_fName);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classngl_1_1_houdini_geo_1a306b110b7cfe58531e740d241c39def0" refkind="member"><highlight class="normal"><ref refid="classngl_1_1_houdini_geo_1a4ef3537195be8885f455b28b55d44416" kindref="member">HoudiniGeo::HoudiniGeo</ref>(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_fName,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>_texName</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1ab39e5c5c849285d6b17cd735dab4d65d" kindref="member">m_vbo</ref>=0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1ae8cb9140141d33e2534690874c58c031" kindref="member">m_loaded</ref>=<ref refid="classngl_1_1_houdini_geo_1af5e5e397e0e6c9532945afa99e3bde3a" kindref="member">load</ref>(_fName);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="classngl_1_1_abstract_mesh_1a2f0e3afb860b5c7bb6b99b96c016fef5" kindref="member">loadTexture</ref>(_texName);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="86" refid="classngl_1_1_houdini_geo_1a8e50ea5f8174ec8f843a9a12ed27985e" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_houdini_geo_1a8e50ea5f8174ec8f843a9a12ed27985e" kindref="member">HoudiniGeo::loadHeader</ref>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream&amp;<sp/>_stream</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>token<sp/>index<sp/>to<sp/>large<sp/>value<sp/>so<sp/>we<sp/>can<sp/>check<sp/>if<sp/>they<sp/>are<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1a39c23e4549361568144c9945c368c094" kindref="member">m_normalTokenIndex</ref>=0xffff;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1ab5203e273f54eb6d68128c15a876b4ea" kindref="member">m_uvTokenIndex</ref>=0x0ffff;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>lineBuffer;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>check<sp/>if<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>tokenize<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep(</highlight><highlight class="stringliteral">&quot;<sp/>\t\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a28a1ca061f91e4bf081ac0e4d48a3c63" kindref="member">tokenizer</ref><sp/>tokens(lineBuffer,<sp/>sep);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*tokens.begin()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;PGEOMETRY&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>valid<sp/>Houdini<sp/>geo<sp/>file<sp/>first<sp/>line<sp/>should<sp/>be<sp/>PGEOMETRY<sp/>version&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>in<sp/>the<sp/>number<sp/>of<sp/>points<sp/>and<sp/>prims</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="namespacengl_1a28a1ca061f91e4bf081ac0e4d48a3c63" kindref="member">tokenizer</ref><sp/>pointPrimTokens(lineBuffer,sep);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ok<sp/>we<sp/>will<sp/>take<sp/>some<sp/>liberties<sp/>here<sp/>and<sp/>assume<sp/>that<sp/>the<sp/>file<sp/>is<sp/>not<sp/>corrupted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>this<sp/>is<sp/>really<sp/>a<sp/>dirty<sp/>pipeline<sp/>tool<sp/>and<sp/>not<sp/>a<sp/>solid<sp/>parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Point/Prim<sp/>Counts:<sp/>NPoints<sp/>#<sp/>NPrims<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>skip<sp/>the<sp/>NPoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>tokenizer::iterator<sp/><sp/>firstWord<sp/>=<sp/>pointPrimTokens.begin();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>++firstWord;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>the<sp/>num<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(*firstWord);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>the<sp/>prims</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>++firstWord;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>NPrims<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>++firstWord;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>the<sp/>num<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1aa4e5c1cdc67001f14499bb0da40f6cd0" kindref="member">m_nFaces</ref><sp/>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(*firstWord);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;num<sp/>points<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>prims<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_abstract_mesh_1aa4e5c1cdc67001f14499bb0da40f6cd0" kindref="member">m_nFaces</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>.resize(<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1a1f7de935fd02870065f99cb4685fc7a8" kindref="member">m_face</ref>.resize(<ref refid="classngl_1_1_abstract_mesh_1aa4e5c1cdc67001f14499bb0da40f6cd0" kindref="member">m_nFaces</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>next<sp/>line<sp/>as<sp/>we<sp/>don&apos;t<sp/>support<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>need<sp/>to<sp/>read<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>header<sp/>and<sp/>find<sp/>what<sp/>attribs<sp/>if<sp/>any<sp/>are<sp/>attached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>Points<sp/>and<sp/>the<sp/>vertex<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>present<sp/>we<sp/>are<sp/>only<sp/>interested<sp/>in<sp/>the<sp/>Texture<sp/>and<sp/>Normal<sp/>attribs<sp/>as<sp/>that<sp/>is<sp/>all<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>supported<sp/>in<sp/>the<sp/>AbstractBase<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacengl_1a28a1ca061f91e4bf081ac0e4d48a3c63" kindref="member">tokenizer</ref><sp/>attribTokens(lineBuffer,sep);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>basic<sp/>format<sp/>is<sp/>as<sp/>follows<sp/>NPointAttrib<sp/>1<sp/>NVertexAttrib<sp/>1<sp/>NPrimAttrib<sp/>0<sp/>NAttrib<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>skip<sp/>the<sp/>NPointAttrib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;lineBuffer&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>firstWord<sp/>=<sp/>attribTokens.begin();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>++firstWord;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>the<sp/>num<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1a473cf2f4a699be6f490d4060cd937dc2" kindref="member">m_nPointAttrib</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(*firstWord);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>the<sp/>prims</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>++firstWord;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>NPrims<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>++firstWord;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1ae1ffd0d8abae60da12120cb20a35f6c4" kindref="member">m_nVertAttrib</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(*firstWord);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;points<sp/>Attrib<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_houdini_geo_1a473cf2f4a699be6f490d4060cd937dc2" kindref="member">m_nPointAttrib</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Vert<sp/>Attrib<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classngl_1_1_houdini_geo_1ae1ffd0d8abae60da12120cb20a35f6c4" kindref="member">m_nVertAttrib</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Finished<sp/>Reading<sp/>Header&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classngl_1_1_houdini_geo_1a573790d8e9f7ff430b3063b550e25e68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_houdini_geo_1a573790d8e9f7ff430b3063b550e25e68" kindref="member">HoudiniGeo::loadPoints</ref>(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream&amp;<sp/>_stream</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"></codeline>
<codeline lineno="164"></codeline>
<codeline lineno="167"></codeline>
<codeline lineno="169"></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep(</highlight><highlight class="stringliteral">&quot;<sp/>\t\r\n()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer::iterator<sp/><sp/>firstWord;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer::iterator<sp/><sp/>lastWord;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>lineBuffer;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="classngl_1_1_abstract_mesh_1af927695f9517bf49191548067ff939ed" kindref="member">m_nVerts</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;lineBuffer&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a28a1ca061f91e4bf081ac0e4d48a3c63" kindref="member">tokenizer</ref><sp/>pointTokens(lineBuffer,sep);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstWord=pointTokens.begin();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastWord=pointTokens.end();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>point<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ad77deca22f617d3f0e0eb786445689fc" kindref="member">x</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(*firstWord++);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a9298c7ad619074f5285b32c6b72bfdea" kindref="member">y</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(*firstWord++);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a826e1ac898f4ef56cea62219f74607db" kindref="member">z</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(*firstWord++);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(*firstWord++);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_abstract_mesh_1af94fc1ce4021f973448c355cadf4c4ba" kindref="member">m_verts</ref>[i].set(x,y,z,w);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>see<sp/>if<sp/>we<sp/>have<sp/>any<sp/>other<sp/>data<sp/>to<sp/>load<sp/>and<sp/>grab<sp/>that<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>difficult<sp/>as<sp/>we<sp/>can<sp/>have<sp/>either<sp/>vert<sp/>data<sp/>or<sp/>prim<sp/>data<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>lets<sp/>just<sp/>grab<sp/>all<sp/>the<sp/>data<sp/>and<sp/>put<sp/>it<sp/>into<sp/>a<sp/>vector<sp/>to<sp/>make<sp/>indexing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector<sp/>&lt;float&gt;<sp/><ref refid="glew_8h_1a0aa8cf39c79d294b1d9f4daef5020bec" kindref="member">values</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(firstWord<sp/>!=lastWord)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(boost::lexical_cast&lt;float&gt;(*firstWord++));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>lets<sp/>load<sp/>the<sp/>normals<sp/>if<sp/>they<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classngl_1_1_houdini_geo_1a0e8e1c573bee69ae825dcac20f0d874b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_houdini_geo_1a0e8e1c573bee69ae825dcac20f0d874b" kindref="member">HoudiniGeo::loadPointAttribDictionary</ref>(</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream&amp;<sp/>_stream</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>lineBuffer;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Loading<sp/>Attrib<sp/>Dictionary<sp/>num<sp/>attribs&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="classngl_1_1_houdini_geo_1a473cf2f4a699be6f490d4060cd937dc2" kindref="member">m_nPointAttrib</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>line<sp/>of<sp/>this<sp/>dictionary<sp/>should<sp/>be<sp/>PointAttrib<sp/>so<sp/>check<sp/>and<sp/>bomb<sp/>if<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lineBuffer<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;PointAttrib&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;file<sp/>not<sp/>in<sp/>correct<sp/>format<sp/>line<sp/>should<sp/>read<sp/>PointAttrib\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>seperator<sp/>for<sp/>the<sp/>tokens<sp/>including<sp/>()<sp/>for<sp/>the<sp/>attribs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep(</highlight><highlight class="stringliteral">&quot;<sp/>\t\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>tokenizer::iterator<sp/><sp/>firstWord;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>tokenizer::iterator<sp/><sp/>sizeToken;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>relIndex=0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="classngl_1_1_houdini_geo_1a473cf2f4a699be6f490d4060cd937dc2" kindref="member">m_nPointAttrib</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>getline(_stream,lineBuffer,</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Found<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;lineBuffer&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengl_1a28a1ca061f91e4bf081ac0e4d48a3c63" kindref="member">tokenizer</ref><sp/>attribTokens(lineBuffer,sep);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>we<sp/>are<sp/>going<sp/>to<sp/>grab<sp/>the<sp/>2nd<sp/>element<sp/>of<sp/>the<sp/>dictionary<sp/>so<sp/>we<sp/>can<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>size<sp/>the<sp/>token<sp/>is,<sp/>we<sp/>then<sp/>use<sp/>it<sp/>to<sp/>get<sp/>the<sp/>relative<sp/>offset<sp/>(begining)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>data<sp/>in<sp/>the<sp/>line<sp/>for<sp/>the<sp/>point<sp/>attrib<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeToken=attribTokens.begin();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>++sizeToken;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>=boost::lexical_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(*sizeToken);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relIndex<sp/>tells<sp/>us<sp/>which<sp/>attribute<sp/>is<sp/>the<sp/>one<sp/>we<sp/>want,<sp/>we<sp/>basically<sp/>inc<sp/>this<sp/>everytime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>find<sp/>an<sp/>attrib<sp/>and<sp/>if<sp/>it&apos;s<sp/>one<sp/>we<sp/>want<sp/>we<sp/>know.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>imagine<sp/>we<sp/>have<sp/>Cd<sp/>Alpha<sp/>N<sp/>uv<sp/>then<sp/>N<sp/>==<sp/>2<sp/>uv<sp/>==<sp/>3<sp/>so<sp/>we<sp/>know<sp/>we<sp/>can<sp/>skip<sp/>the<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>relIndex++;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;relIndex<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;relIndex&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>firstWord=attribTokens.begin();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>have<sp/>a<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>sizeToken<sp/>to<sp/>get<sp/>the<sp/>data<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++sizeToken;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1aa54616f15fad7f1612283828bb4ae597" kindref="member">m_dictionary</ref>[</highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">]=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_hou_dictionary_entry" kindref="compound">HouDictionaryEntry</ref>(</highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,size,*sizeToken,relIndex);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1aa54616f15fad7f1612283828bb4ae597" kindref="member">m_dictionary</ref>[</highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">]-&gt;print();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*firstWord<sp/>==</highlight><highlight class="stringliteral">&quot;uv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++sizeToken;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1aa54616f15fad7f1612283828bb4ae597" kindref="member">m_dictionary</ref>[</highlight><highlight class="stringliteral">&quot;uv&quot;</highlight><highlight class="normal">]=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_hou_dictionary_entry" kindref="compound">HouDictionaryEntry</ref>(</highlight><highlight class="stringliteral">&quot;uv&quot;</highlight><highlight class="normal">,size,*sizeToken,relIndex);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngl_1_1_houdini_geo_1aa54616f15fad7f1612283828bb4ae597" kindref="member">m_dictionary</ref>[</highlight><highlight class="stringliteral">&quot;uv&quot;</highlight><highlight class="normal">]-&gt;print();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classngl_1_1_houdini_geo_1a12621d27e36077600d2fce4a0a6cb1c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngl_1_1_houdini_geo_1a12621d27e36077600d2fce4a0a6cb1c1" kindref="member">HoudiniGeo::drawDebugPoints</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor">#warning<sp/>add<sp/>new<sp/>code<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/>glBegin(GL_POINTS);</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/>glPointSize(4);</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/>for(unsigned<sp/>int<sp/>i=0;<sp/>i&lt;m_nVerts;<sp/>++i)</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/>m_verts[i].vertex();</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="285"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>ngl<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/HoudiniGeo.cpp"/>
  </compounddef>
</doxygen>
