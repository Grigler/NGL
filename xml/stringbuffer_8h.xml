<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="stringbuffer_8h" kind="file" language="C++">
    <compoundname>stringbuffer.h</compoundname>
    <includes refid="rapidjson_8h" local="yes">rapidjson.h</includes>
    <includes refid="stack_8h" local="yes">internal/stack.h</includes>
    <includedby refid="writer_8h" local="yes">writer.h</includedby>
    <incdepgraph>
      <node id="6346">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="6339" relation="include">
        </childnode>
      </node>
      <node id="6338">
        <label>stringbuffer.h</label>
        <link refid="stringbuffer.h"/>
        <childnode refid="6339" relation="include">
        </childnode>
        <childnode refid="6345" relation="include">
        </childnode>
      </node>
      <node id="6342">
        <label>cassert</label>
      </node>
      <node id="6343">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="6339" relation="include">
        </childnode>
      </node>
      <node id="6340">
        <label>cstdlib</label>
      </node>
      <node id="6339">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="6340" relation="include">
        </childnode>
        <childnode refid="6341" relation="include">
        </childnode>
        <childnode refid="6342" relation="include">
        </childnode>
        <childnode refid="6343" relation="include">
        </childnode>
        <childnode refid="6344" relation="include">
        </childnode>
      </node>
      <node id="6344">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="6339" relation="include">
        </childnode>
      </node>
      <node id="6341">
        <label>cstring</label>
      </node>
      <node id="6345">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="6339" relation="include">
        </childnode>
        <childnode refid="6346" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6347">
        <label>stringbuffer.h</label>
        <link refid="stringbuffer.h"/>
        <childnode refid="6348" relation="include">
        </childnode>
      </node>
      <node id="6348">
        <label>writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="6349" relation="include">
        </childnode>
      </node>
      <node id="6349">
        <label>prettywriter.h</label>
        <link refid="prettywriter_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_generic_string_buffer" prot="public">GenericStringBuffer</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stringbuffer_8h_1a88f2d61781c8daefde48a81bdeac6ecd" prot="public" static="no">
        <type><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;</type>
        <definition>typedef GenericStringBuffer&lt;UTF8&lt;&gt; &gt; StringBuffer</definition>
        <argsstring></argsstring>
        <name>StringBuffer</name>
        <briefdescription>
<para>String buffer with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/stringbuffer.h" line="83" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/rapidjson/stringbuffer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void PutN</definition>
        <argsstring>(GenericStringBuffer&lt; UTF8&lt;&gt; &gt; &amp;stream, char c, size_t n)</argsstring>
        <name>PutN</name>
        <param>
          <type><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Implement specialized version of <ref refid="stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c" kindref="member">PutN()</ref> with memset() for better performance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/rapidjson/stringbuffer.h" line="87" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/rapidjson/stringbuffer.h" bodystart="87" bodyend="89"/>
        <references refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" compoundref="rapidjson_8h" startline="119">RAPIDJSON_NAMESPACE_END</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_STRINGBUFFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_STRINGBUFFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rapidjson_8h" kindref="compound">rapidjson.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stack_8h" kindref="compound">internal/stack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"></codeline>
<codeline lineno="34"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>CrtAllocator&gt;</highlight></codeline>
<codeline lineno="35" refid="class_generic_string_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="class_generic_string_buffer_1a735b75db076ffe86d0d294be49655d46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="class_generic_string_buffer_1a735b75db076ffe86d0d294be49655d46" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_generic_string_buffer_1a62f5ea1a53a2a3f98088f8c152b6183e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1a62f5ea1a53a2a3f98088f8c152b6183e" kindref="member">GenericStringBuffer</ref>(Allocator*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity<sp/>=<sp/><ref refid="class_generic_string_buffer_1ae74f9df854dd5a7db4315ef44b016d22" kindref="member">kDefaultCapacity</ref>)<sp/>:<sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>(allocator,<sp/>capacity)<sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1a62f5ea1a53a2a3f98088f8c152b6183e" kindref="member">GenericStringBuffer</ref>(<ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&amp;&amp;<sp/>rhs)<sp/>:<sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>(<ref refid="namespacestd_1a37ba44826afa04fddf20fd70c45ac3b4" kindref="member">std::move</ref>(rhs.stack_))<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&amp;<sp/><ref refid="class_generic_string_buffer_1a09937913fd2f426be04ae6d6a8abb0f6" kindref="member">operator=</ref>(<ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;rhs<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref><sp/>=<sp/><ref refid="namespacestd_1a37ba44826afa04fddf20fd70c45ac3b4" kindref="member">std::move</ref>(rhs.stack_);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(Ch<sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>)<sp/>{<sp/>*<ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/>c;<sp/>}</highlight></codeline>
<codeline lineno="51" refid="class_generic_string_buffer_1a28bb539487db17b07314a532f3b8847c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1a28bb539487db17b07314a532f3b8847c" kindref="member">Flush</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_generic_string_buffer_1a42f15c959046d899cb74c3120a6995f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1a42f15c959046d899cb74c3120a6995f9" kindref="member">Clear</ref>()<sp/>{<sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.Clear();<sp/>}</highlight></codeline>
<codeline lineno="54" refid="class_generic_string_buffer_1a0dbdb77489b95923795011a24f705be5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1a0dbdb77489b95923795011a24f705be5" kindref="member">ShrinkToFit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>and<sp/>pop<sp/>a<sp/>null<sp/>terminator.<sp/>This<sp/>is<sp/>safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.ShrinkToFit();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Pop&lt;Ch&gt;(1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60" refid="class_generic_string_buffer_1a49fd10cdd5dd97a4cf9813d01334d660" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Ch*<sp/><ref refid="class_generic_string_buffer_1a49fd10cdd5dd97a4cf9813d01334d660" kindref="member">Push</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Push&lt;Ch&gt;(<ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);<sp/>}</highlight></codeline>
<codeline lineno="61" refid="class_generic_string_buffer_1a0038e53ba03c271bc4cbbac403ec4de4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1a0038e53ba03c271bc4cbbac403ec4de4" kindref="member">Pop</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>)<sp/>{<sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Pop&lt;Ch&gt;(<ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_generic_string_buffer_1a42ed917a29012d932802f2709e11c572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ch*<sp/><ref refid="class_generic_string_buffer_1a42ed917a29012d932802f2709e11c572" kindref="member">GetString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>and<sp/>pop<sp/>a<sp/>null<sp/>terminator.<sp/>This<sp/>is<sp/>safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Pop&lt;Ch&gt;(1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.template<sp/>Bottom&lt;Ch&gt;();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_generic_string_buffer_1abd04725d776322157be3381f5559c40b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1abd04725d776322157be3381f5559c40b" kindref="member">GetSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>.GetSize();<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_generic_string_buffer_1ae74f9df854dd5a7db4315ef44b016d22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer_1ae74f9df854dd5a7db4315ef44b016d22" kindref="member">kDefaultCapacity</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="74" refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;Allocator&gt;</ref><sp/><ref refid="class_generic_string_buffer_1aaef716643febb9de5957dbf8ff904409" kindref="member">stack_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prohibit<sp/>copy<sp/>constructor<sp/>&amp;<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer_1a62f5ea1a53a2a3f98088f8c152b6183e" kindref="member">GenericStringBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&amp;);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&amp;<sp/><ref refid="class_generic_string_buffer_1a09937913fd2f426be04ae6d6a8abb0f6" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&amp;);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="stringbuffer_8h_1a88f2d61781c8daefde48a81bdeac6ecd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/><ref refid="stringbuffer_8h_1a88f2d61781c8daefde48a81bdeac6ecd" kindref="member">StringBuffer</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="87" refid="stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c" kindref="member">PutN</ref>(<ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&lt;<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref><sp/>&gt;&amp;<sp/><ref refid="glew_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316" kindref="member">stream</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae0f40feefa74d9cb1721a009573cfce5" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memset(<ref refid="glew_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316" kindref="member">stream</ref>.stack_.Push&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;(n),<sp/>c,<sp/>n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(c));</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_STRINGBUFFER_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/rapidjson/stringbuffer.h"/>
  </compounddef>
</doxygen>
