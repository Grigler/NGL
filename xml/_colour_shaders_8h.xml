<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_colour_shaders_8h" kind="file" language="C++">
    <compoundname>ColourShaders.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="_shader_lib_8cpp" local="yes">ShaderLib.cpp</includedby>
    <incdepgraph>
      <node id="4145">
        <label>string</label>
      </node>
      <node id="4144">
        <label>ColourShaders.h</label>
        <link refid="ColourShaders.h"/>
        <childnode refid="4145" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4147">
        <label>ShaderLib.cpp</label>
        <link refid="_shader_lib_8cpp"/>
      </node>
      <node id="4146">
        <label>ColourShaders.h</label>
        <link refid="ColourShaders.h"/>
        <childnode refid="4147" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_colour_shaders_8h_1a922fd1d60ce438daea39baf8c1ff945c" prot="public" static="no" mutable="no">
        <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>const std::string colourVertexShader</definition>
        <argsstring></argsstring>
        <name>colourVertexShader</name>
        <initializer>=
R&quot;DELIM(
#version 150

/// @file Colour.vs
/// @brief <ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref> basic unshaded solid colour <ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref> used with Colour.fs

/// @brief MVP <ref refid="glew_8h_1a7b24a3f2f56eb1244ae69dacb4fecb6f" kindref="member">matrix</ref> passed from our app
uniform mat4 MVP;

// <ref refid="glew_8h_1a1d06221983ffd8920e50099d6382e24f" kindref="member">first</ref> attribute the vertex <ref refid="glew_8h_1a0aa8cf39c79d294b1d9f4daef5020bec" kindref="member">values</ref> from our VAO
<ref refid="glew_8h_1a83ad0ee7f1e06b59c90271716e689080" kindref="member">in</ref> vec3 inVert;
/// @brief the colour to shade draw with
uniform vec4 Colour;

<ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref> main(<ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>)
{

  // calculate the vertex position
  gl_Position = MVP*vec4(inVert, 1.0);

}

)DELIM&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/src/shaders/ColourShaders.h" line="5" column="1" bodyfile="/Users/jmacey/NGL/src/shaders/ColourShaders.h" bodystart="5" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">ngl::ShaderLib::loadColourShaders</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_colour_shaders_8h_1ad14fa863298942f700dc65635b3dcadc" prot="public" static="no" mutable="no">
        <type>const <ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref></type>
        <definition>const std::string colourFragmentShader</definition>
        <argsstring></argsstring>
        <name>colourFragmentShader</name>
        <initializer>=
R&quot;DELIM(
#version 150
/// @file Colour.fs
/// @brief <ref refid="glew_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref> basic unshaded solid colour <ref refid="glew_8h_1a57b2a96adb1d51204909a82d861e395e" kindref="member">shader</ref>
/// @brief the colour to shade draw with
uniform vec4 Colour;
out vec4 outColour;

<ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref> main ()
{
  outColour = Colour;
}


)DELIM&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/src/shaders/ColourShaders.h" line="33" column="1" bodyfile="/Users/jmacey/NGL/src/shaders/ColourShaders.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classngl_1_1_shader_lib_1aec5ebc9a11364651b1820040d373869f" compoundref="_shader_lib_8cpp" startline="689" endline="713">ngl::ShaderLib::loadColourShaders</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COLOURSHADERS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COLOURSHADERS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="_colour_shaders_8h_1a922fd1d60ce438daea39baf8c1ff945c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><ref refid="_colour_shaders_8h_1a922fd1d60ce438daea39baf8c1ff945c" kindref="member">colourVertexShader</ref><sp/>=</highlight></codeline>
<codeline lineno="6"><highlight class="normal">R</highlight><highlight class="stringliteral">&quot;DELIM(</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">#version<sp/>150</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">uniform<sp/>mat4<sp/>MVP;</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">//<sp/>first<sp/>attribute<sp/>the<sp/>vertex<sp/>values<sp/>from<sp/>our<sp/>VAO</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">in<sp/>vec3<sp/>inVert;</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">uniform<sp/>vec4<sp/>Colour;</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">void<sp/>main(void)</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/>//<sp/>calculate<sp/>the<sp/>vertex<sp/>position</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/>gl_Position<sp/>=<sp/>MVP*vec4(inVert,<sp/>1.0);</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">)DELIM&quot;;</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33" refid="_colour_shaders_8h_1ad14fa863298942f700dc65635b3dcadc" refkind="member"><highlight class="stringliteral"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/><sp/><ref refid="_colour_shaders_8h_1ad14fa863298942f700dc65635b3dcadc" kindref="member">colourFragmentShader</ref>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal">R</highlight><highlight class="stringliteral">&quot;DELIM(</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">#version<sp/>150</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">uniform<sp/>vec4<sp/>Colour;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">out<sp/>vec4<sp/>outColour;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">void<sp/>main<sp/>()</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/>outColour<sp/>=<sp/>Colour;</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">)DELIM&quot;;</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/src/shaders/ColourShaders.h"/>
  </compounddef>
</doxygen>
