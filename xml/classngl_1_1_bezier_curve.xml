<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classngl_1_1_bezier_curve" kind="class" language="C++" prot="public">
    <compoundname>ngl::BezierCurve</compoundname>
    <includes refid="_bezier_curve_8h" local="no">BezierCurve.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a2fa9d6fe88ccfb32f617fa814dd893de" prot="protected" static="no" mutable="no">
        <type><ref refid="glew_8h_1a68c4714e43d8e827d80759f9cb864f3c" kindref="member">GLuint</ref></type>
        <definition>GLuint ngl::BezierCurve::m_listIndex</definition>
        <argsstring></argsstring>
        <name>m_listIndex</name>
        <briefdescription>
<para>the display list index created from glCreateLists </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="148" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="148" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" prot="protected" static="no" mutable="no">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::BezierCurve::m_order</definition>
        <argsstring></argsstring>
        <name>m_order</name>
        <briefdescription>
<para>The Order of the Curve = Degree +1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="152" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="152" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" compoundref="_bezier_curve_8cpp" startline="194" endline="204">addPoint</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1ac24714e885010a8574dc552a1ba4f290" compoundref="_bezier_curve_8cpp" startline="220" endline="224">addKnot</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1ab254ec89380b533204cd1f0dc111879b" prot="protected" static="no" mutable="no">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::BezierCurve::m_lod</definition>
        <argsstring></argsstring>
        <name>m_lod</name>
        <briefdescription>
<para>The level of detail used to calculate how much detail to draw. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="156" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="156" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" prot="protected" static="no" mutable="no">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::BezierCurve::m_numCP</definition>
        <argsstring></argsstring>
        <name>m_numCP</name>
        <briefdescription>
<para>The ammount of Control Points in the Curve. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="160" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="160" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" compoundref="_bezier_curve_8cpp" startline="168" endline="188">getPointOnCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" compoundref="_bezier_curve_8cpp" startline="194" endline="204">addPoint</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1ac24714e885010a8574dc552a1ba4f290" compoundref="_bezier_curve_8cpp" startline="220" endline="224">addKnot</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" prot="protected" static="no" mutable="no">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::BezierCurve::m_degree</definition>
        <argsstring></argsstring>
        <name>m_degree</name>
        <briefdescription>
<para>The degree of the curve, Calculated from the Number of Control Points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="164" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="164" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" compoundref="_bezier_curve_8cpp" startline="168" endline="188">getPointOnCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" compoundref="_bezier_curve_8cpp" startline="194" endline="204">addPoint</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" prot="protected" static="no" mutable="no">
        <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>unsigned int ngl::BezierCurve::m_numKnots</definition>
        <argsstring></argsstring>
        <name>m_numKnots</name>
        <briefdescription>
<para>The knot vector always has as many values as the numer of verts (cp) + the degree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="168" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="168" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a4622d0f19a031e78aee54097f5d048bc" compoundref="_bezier_curve_8cpp" startline="38" endline="44">createKnots</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" compoundref="_bezier_curve_8cpp" startline="194" endline="204">addPoint</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1ac24714e885010a8574dc552a1ba4f290" compoundref="_bezier_curve_8cpp" startline="220" endline="224">addKnot</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &gt;</type>
        <definition>std::vector&lt;Vec3&gt; ngl::BezierCurve::m_cp</definition>
        <argsstring></argsstring>
        <name>m_cp</name>
        <briefdescription>
<para>the contol points for the curve </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="172" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="172" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1ab8132edf6f101658709019c7430ab816" compoundref="_bezier_curve_8cpp" startline="47" endline="59">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a21d6f57de08c6d06c87f9fbb58da7211" compoundref="_bezier_curve_8cpp" startline="100" endline="111">~BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" compoundref="_bezier_curve_8cpp" startline="168" endline="188">getPointOnCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" compoundref="_bezier_curve_8cpp" startline="194" endline="204">addPoint</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; ngl::BezierCurve::m_knots</definition>
        <argsstring></argsstring>
        <name>m_knots</name>
        <briefdescription>
<para>the knot vector for the curve </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="176" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="176" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a4622d0f19a031e78aee54097f5d048bc" compoundref="_bezier_curve_8cpp" startline="38" endline="44">createKnots</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1ab8132edf6f101658709019c7430ab816" compoundref="_bezier_curve_8cpp" startline="47" endline="59">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a21d6f57de08c6d06c87f9fbb58da7211" compoundref="_bezier_curve_8cpp" startline="100" endline="111">~BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" compoundref="_bezier_curve_8cpp" startline="168" endline="188">getPointOnCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1ac24714e885010a8574dc552a1ba4f290" compoundref="_bezier_curve_8cpp" startline="220" endline="224">addKnot</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_abstract_v_a_o" kindref="compound">AbstractVAO</ref> *</type>
        <definition>AbstractVAO* ngl::BezierCurve::m_vaoCurve</definition>
        <argsstring></argsstring>
        <name>m_vaoCurve</name>
        <briefdescription>
<para>a vertex array object for our curve drawing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="180" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="180" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a21d6f57de08c6d06c87f9fbb58da7211" compoundref="_bezier_curve_8cpp" startline="100" endline="111">~BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a09380788ad51a31e512e39070eb6c670" compoundref="_bezier_curve_8cpp" startline="160" endline="165">draw</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" prot="protected" static="no" mutable="no">
        <type><ref refid="classngl_1_1_abstract_v_a_o" kindref="compound">AbstractVAO</ref> *</type>
        <definition>AbstractVAO* ngl::BezierCurve::m_vaoPoints</definition>
        <argsstring></argsstring>
        <name>m_vaoPoints</name>
        <briefdescription>
<para>a vertex array object for our point drawing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="184" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="184" bodyend="-1"/>
        <referencedby refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a21d6f57de08c6d06c87f9fbb58da7211" compoundref="_bezier_curve_8cpp" startline="100" endline="111">~BezierCurve</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1aaebc65828ecb6bef1e5f894c06b5c9d7" compoundref="_bezier_curve_8cpp" startline="140" endline="148">drawControlPoints</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a9d49085e7ae40604418ee0685268e85f" compoundref="_bezier_curve_8cpp" startline="151" endline="157">drawHull</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::BezierCurve::BezierCurve</definition>
        <argsstring>() noexcept</argsstring>
        <name>BezierCurve</name>
        <briefdescription>
<para>default ctor sets initial values for Curve to be used with AddPoint , AddKnot etc </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="51" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="26" bodyend="36"/>
        <references refid="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" compoundref="_bezier_curve_8h" startline="164">m_degree</references>
        <references refid="classngl_1_1_bezier_curve_1a2fa9d6fe88ccfb32f617fa814dd893de" compoundref="_bezier_curve_8h" startline="148">m_listIndex</references>
        <references refid="classngl_1_1_bezier_curve_1ab254ec89380b533204cd1f0dc111879b" compoundref="_bezier_curve_8h" startline="156">m_lod</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <references refid="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" compoundref="_bezier_curve_8h" startline="152">m_order</references>
        <references refid="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" compoundref="_bezier_curve_8h" startline="180">m_vaoCurve</references>
        <references refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" compoundref="_bezier_curve_8h" startline="184">m_vaoPoints</references>
        <referencedby refid="classngl_1_1_bezier_curve_1ab8132edf6f101658709019c7430ab816" compoundref="_bezier_curve_8cpp" startline="47" endline="59">BezierCurve</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a38a34ea203e0e5c4e5d4b7053b8ab9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::BezierCurve::BezierCurve</definition>
        <argsstring>(const Vec3 *_p, unsigned int _nPoints, const Real *_k, unsigned int _nKnots) noexcept</argsstring>
        <name>BezierCurve</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> *</type>
          <declname>_p</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_nPoints</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> *</type>
          <declname>_k</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_nKnots</declname>
        </param>
        <briefdescription>
<para>Ctor passing in an Array of CP&apos;s and and Array of knots. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_p</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of Vector objects which are the control </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the Point Array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_k</parametername>
</parameternamelist>
<parameterdescription>
<para>and array of knot values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_nKnots</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the knot array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a3fd4e61f1d3a42e27f1d96d1232a694c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::BezierCurve::BezierCurve</definition>
        <argsstring>(const Real *_p, unsigned int _nPoints) noexcept</argsstring>
        <name>BezierCurve</name>
        <param>
          <type>const <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> *</type>
          <declname>_p</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_nPoints</declname>
        </param>
        <briefdescription>
<para>ctor passing in an array of points, note the knot vector will be automatically calculated as an open vector using a call to create knots </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_p</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of CP values expressed as groups of 3 float x,y,z values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the array *p (note this is the total size of the array) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1ab8132edf6f101658709019c7430ab816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::BezierCurve::BezierCurve</definition>
        <argsstring>(const BezierCurve &amp;_c) noexcept</argsstring>
        <name>BezierCurve</name>
        <param>
          <type>const <ref refid="classngl_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>_c</declname>
        </param>
        <briefdescription>
<para>copy ctor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_c</parametername>
</parameternamelist>
<parameterdescription>
<para>the curve to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="72" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="47" bodyend="59"/>
        <references refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" compoundref="_bezier_curve_8cpp" startline="26" endline="36">BezierCurve</references>
        <references refid="classngl_1_1_bezier_curve_1a4622d0f19a031e78aee54097f5d048bc" compoundref="_bezier_curve_8cpp" startline="38" endline="44">createKnots</references>
        <references refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" compoundref="_bezier_curve_8h" startline="172">m_cp</references>
        <references refid="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" compoundref="_bezier_curve_8h" startline="164">m_degree</references>
        <references refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" compoundref="_bezier_curve_8h" startline="176">m_knots</references>
        <references refid="classngl_1_1_bezier_curve_1ab254ec89380b533204cd1f0dc111879b" compoundref="_bezier_curve_8h" startline="156">m_lod</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <references refid="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" compoundref="_bezier_curve_8h" startline="152">m_order</references>
        <references refid="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" compoundref="_bezier_curve_8h" startline="180">m_vaoCurve</references>
        <references refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" compoundref="_bezier_curve_8h" startline="184">m_vaoPoints</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a21d6f57de08c6d06c87f9fbb58da7211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngl::BezierCurve::~BezierCurve</definition>
        <argsstring>() noexcept</argsstring>
        <name>~BezierCurve</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="76" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="100" bodyend="111"/>
        <references refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" compoundref="_bezier_curve_8h" startline="172">m_cp</references>
        <references refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" compoundref="_bezier_curve_8h" startline="176">m_knots</references>
        <references refid="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" compoundref="_bezier_curve_8h" startline="180">m_vaoCurve</references>
        <references refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" compoundref="_bezier_curve_8h" startline="184">m_vaoPoints</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a0c8a76bda28c062cc2c772c8ec7ddd12">ngl::AbstractVAO::removeVAO</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" compoundref="_abstract_v_a_o_8cpp" startline="29" endline="33">ngl::AbstractVAO::unbind</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a09380788ad51a31e512e39070eb6c670" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::draw</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>draw</name>
        <briefdescription>
<para>Draw method to draw the curve Note this will be slow as it calls the CoxDeBoor function to calculate each time it is much quicker to create a display list and use this. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000012"><xreftitle>Todo</xreftitle><xrefdescription><para>Modify this to use faster method than display lists </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="82" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="160" bodyend="165"/>
        <references refid="classngl_1_1_abstract_v_a_o_1a32a42493f94df2674c89a90cb25cfa2a" compoundref="_abstract_v_a_o_8cpp" startline="23" endline="27">ngl::AbstractVAO::bind</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a0365aa18813979ae23b2854b25c782a5">ngl::AbstractVAO::draw</references>
        <references refid="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" compoundref="_bezier_curve_8h" startline="180">m_vaoCurve</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" compoundref="_abstract_v_a_o_8cpp" startline="29" endline="33">ngl::AbstractVAO::unbind</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1aaebc65828ecb6bef1e5f894c06b5c9d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::drawControlPoints</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>drawControlPoints</name>
        <briefdescription>
<para>draw the control points </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="86" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="140" bodyend="148"/>
        <references refid="classngl_1_1_abstract_v_a_o_1a32a42493f94df2674c89a90cb25cfa2a" compoundref="_abstract_v_a_o_8cpp" startline="23" endline="27">ngl::AbstractVAO::bind</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a0365aa18813979ae23b2854b25c782a5">ngl::AbstractVAO::draw</references>
        <references refid="glew_8h_1a8c24a16d303b4d935f81c240a2cd88b8" compoundref="glew_8h" startline="319">GL_POINTS</references>
        <references refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" compoundref="_bezier_curve_8h" startline="184">m_vaoPoints</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a712e386f5ed795cf42484d3311625ade" compoundref="_abstract_v_a_o_8cpp" startline="17" endline="20">ngl::AbstractVAO::setMode</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" compoundref="_abstract_v_a_o_8cpp" startline="29" endline="33">ngl::AbstractVAO::unbind</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a9d49085e7ae40604418ee0685268e85f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::drawHull</definition>
        <argsstring>() const  noexcept</argsstring>
        <name>drawHull</name>
        <briefdescription>
<para>Draw the control hull. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="90" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="151" bodyend="157"/>
        <references refid="classngl_1_1_abstract_v_a_o_1a32a42493f94df2674c89a90cb25cfa2a" compoundref="_abstract_v_a_o_8cpp" startline="23" endline="27">ngl::AbstractVAO::bind</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a0365aa18813979ae23b2854b25c782a5">ngl::AbstractVAO::draw</references>
        <references refid="glew_8h_1a4ecc64682046ef517e86a18d9acbed1e" compoundref="glew_8h" startline="328">GL_LINE_STRIP</references>
        <references refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" compoundref="_bezier_curve_8h" startline="184">m_vaoPoints</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a712e386f5ed795cf42484d3311625ade" compoundref="_abstract_v_a_o_8cpp" startline="17" endline="20">ngl::AbstractVAO::setMode</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" compoundref="_abstract_v_a_o_8cpp" startline="29" endline="33">ngl::AbstractVAO::unbind</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 ngl::BezierCurve::getPointOnCurve</definition>
        <argsstring>(Real _value) const  noexcept</argsstring>
        <name>getPointOnCurve</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>get a point on the curve in the range of 0 - 1 based on the control points </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_value</parametername>
</parameternamelist>
<parameterdescription>
<para>the point to evaluate between 0 and 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the point at t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="96" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="168" bodyend="188"/>
        <references refid="classngl_1_1_bezier_curve_1ae81fbe1a0dfb6d0cf8fce2068be69ca9" compoundref="_bezier_curve_8cpp" startline="114" endline="136">coxDeBoor</references>
        <references refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" compoundref="_bezier_curve_8h" startline="172">m_cp</references>
        <references refid="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" compoundref="_bezier_curve_8h" startline="164">m_degree</references>
        <references refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" compoundref="_bezier_curve_8h" startline="176">m_knots</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <referencedby refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" compoundref="_bezier_curve_8cpp" startline="226" endline="271">createVAO</referencedby>
        <referencedby refid="classngl_1_1_path_camera_1a2382bb33b09521e9a31caa8eadc28997" compoundref="_path_camera_8cpp" startline="156" endline="180">ngl::PathCamera::update</referencedby>
        <referencedby refid="classngl_1_1_path_camera_1a5fdf9c69645596935d5fa53f8a9177ad" compoundref="_path_camera_8cpp" startline="183" endline="225">ngl::PathCamera::updateLooped</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::addPoint</definition>
        <argsstring>(const Vec3 &amp;_p) noexcept</argsstring>
        <name>addPoint</name>
        <param>
          <type>const <ref refid="classngl_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>_p</declname>
        </param>
        <briefdescription>
<para>add a control point to the Curve </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;_p</parametername>
</parameternamelist>
<parameterdescription>
<para>the point to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="102" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="194" bodyend="204"/>
        <references refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" compoundref="_bezier_curve_8h" startline="172">m_cp</references>
        <references refid="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" compoundref="_bezier_curve_8h" startline="164">m_degree</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <references refid="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" compoundref="_bezier_curve_8h" startline="152">m_order</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a112ebeffc0af396893eb2fedffe2761d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::addPoint</definition>
        <argsstring>(Real _x, Real _y, Real _z) noexcept</argsstring>
        <name>addPoint</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_x</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_y</declname>
        </param>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>add a point to the curve using x,y,z values </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x value of point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y value of point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z value of point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="110" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="207" bodyend="218"/>
        <references refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" compoundref="_bezier_curve_8h" startline="172">m_cp</references>
        <references refid="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" compoundref="_bezier_curve_8h" startline="164">m_degree</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <references refid="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" compoundref="_bezier_curve_8h" startline="152">m_order</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1ac24714e885010a8574dc552a1ba4f290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::addKnot</definition>
        <argsstring>(Real _k) noexcept</argsstring>
        <name>addKnot</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_k</declname>
        </param>
        <briefdescription>
<para>add a knot value to the curve </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_k</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the knot (note this is added to the end of the curve </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="115" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="220" bodyend="224"/>
        <references refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" compoundref="_bezier_curve_8h" startline="176">m_knots</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <references refid="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" compoundref="_bezier_curve_8h" startline="152">m_order</references>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a4622d0f19a031e78aee54097f5d048bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::createKnots</definition>
        <argsstring>() noexcept</argsstring>
        <name>createKnots</name>
        <briefdescription>
<para>create a knot vector array based as an Open Vector (half 0.0 half 1.0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="119" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="38" bodyend="44"/>
        <references refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" compoundref="_bezier_curve_8h" startline="176">m_knots</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <referencedby refid="classngl_1_1_bezier_curve_1ab8132edf6f101658709019c7430ab816" compoundref="_bezier_curve_8cpp" startline="47" endline="59">BezierCurve</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1ae81fbe1a0dfb6d0cf8fce2068be69ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
        <definition>Real ngl::BezierCurve::coxDeBoor</definition>
        <argsstring>(Real _u, unsigned int _i, unsigned int _k, const std::vector&lt; Real &gt; &amp;_knots) const  noexcept</argsstring>
        <name>coxDeBoor</name>
        <param>
          <type><ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref></type>
          <declname>_u</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_i</declname>
        </param>
        <param>
          <type>unsigned <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_k</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacengl_1a5875636a29b76a7bd09b3b52994455a2" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>_knots</declname>
        </param>
        <briefdescription>
<para>implementation of the CoxDeBoor algorithm for Bezier Curves borrowed from Rob Bateman&apos;s example and modified to make it work with the class. NOTE, this is a recursive function </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Real the evaluation of the weight at the current value </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_u</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_i</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_k</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_knots</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of knots for the curve </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="129" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="114" bodyend="136"/>
        <references refid="classngl_1_1_bezier_curve_1ae81fbe1a0dfb6d0cf8fce2068be69ca9" compoundref="_bezier_curve_8cpp" startline="114" endline="136">coxDeBoor</references>
        <referencedby refid="classngl_1_1_bezier_curve_1ae81fbe1a0dfb6d0cf8fce2068be69ca9" compoundref="_bezier_curve_8cpp" startline="114" endline="136">coxDeBoor</referencedby>
        <referencedby refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" compoundref="_bezier_curve_8cpp" startline="168" endline="188">getPointOnCurve</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a2e44d153518b12f4a502f99a1c736f6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::setLOD</definition>
        <argsstring>(int _lod) noexcept</argsstring>
        <name>setLOD</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>_lod</declname>
        </param>
        <briefdescription>
<para>set the Level of Detail for Drawing </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this will have no Effect if the createVAO has been called before </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_lod</parametername>
</parameternamelist>
<parameterdescription>
<para>the level of detail to use when creating the display list for drawing the higher the number the finer the drawing </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="138" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="138" bodyend="138"/>
        <referencedby refid="classngl_1_1_path_camera_1a137b5885b9e3b973f20bce79ae697983" compoundref="_path_camera_8cpp" startline="233" endline="238">ngl::PathCamera::createCurvesForDrawing</referencedby>
      </memberdef>
      <memberdef kind="function" id="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>void ngl::BezierCurve::createVAO</definition>
        <argsstring>() noexcept</argsstring>
        <name>createVAO</name>
        <briefdescription>
<para>set the Level of Detail for Drawing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="142" column="1" bodyfile="/Users/jmacey/NGL/src/BezierCurve.cpp" bodystart="226" bodyend="271"/>
        <references refid="classngl_1_1_abstract_v_a_o_1a32a42493f94df2674c89a90cb25cfa2a" compoundref="_abstract_v_a_o_8cpp" startline="23" endline="27">ngl::AbstractVAO::bind</references>
        <references refid="classngl_1_1_v_a_o_factory_1adee5532df7151fab8e8db0e9ebf94305" compoundref="_v_a_o_factory_8cpp" startline="19" endline="29">ngl::VAOFactory::createVAO</references>
        <references refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" compoundref="_bezier_curve_8cpp" startline="168" endline="188">getPointOnCurve</references>
        <references refid="glew_8h_1a6d19915d4237cb559505bd3e5dcfcf3c" compoundref="glew_8h" startline="642">GL_FLOAT</references>
        <references refid="glew_8h_1a4ecc64682046ef517e86a18d9acbed1e" compoundref="glew_8h" startline="328">GL_LINE_STRIP</references>
        <references refid="glew_8h_1a8c24a16d303b4d935f81c240a2cd88b8" compoundref="glew_8h" startline="319">GL_POINTS</references>
        <references refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" compoundref="_bezier_curve_8h" startline="172">m_cp</references>
        <references refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" compoundref="_bezier_curve_8h" startline="176">m_knots</references>
        <references refid="classngl_1_1_bezier_curve_1ab254ec89380b533204cd1f0dc111879b" compoundref="_bezier_curve_8h" startline="156">m_lod</references>
        <references refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" compoundref="_bezier_curve_8h" startline="160">m_numCP</references>
        <references refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" compoundref="_bezier_curve_8h" startline="168">m_numKnots</references>
        <references refid="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" compoundref="_bezier_curve_8h" startline="180">m_vaoCurve</references>
        <references refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" compoundref="_bezier_curve_8h" startline="184">m_vaoPoints</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a0c8a76bda28c062cc2c772c8ec7ddd12">ngl::AbstractVAO::removeVAO</references>
        <references refid="classngl_1_1_abstract_v_a_o_1aeeabb8d7a3be60a6814d1c44cb52f27a">ngl::AbstractVAO::setData</references>
        <references refid="classngl_1_1_abstract_v_a_o_1ac3bab1083764b87a06bf658e6b6727a8" compoundref="_abstract_v_a_o_8h" startline="91" endline="91">ngl::AbstractVAO::setNumIndices</references>
        <references refid="classngl_1_1_abstract_v_a_o_1aa51d9e09fa5d76cb0868cdff08e94911" compoundref="_abstract_v_a_o_8cpp" startline="36" endline="45">ngl::AbstractVAO::setVertexAttributePointer</references>
        <references refid="classngl_1_1_abstract_v_a_o_1a755b4eb87c240c0c95b292c4762fef04" compoundref="_abstract_v_a_o_8cpp" startline="29" endline="33">ngl::AbstractVAO::unbind</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic Bezier Curve Class allowing the user to generate basic curves using a number of different constriction methods, such as array of Vectors, array of numbers etc The class can automatically generate knot vectors as well or the user can specify their own. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Rob Bateman modified and augmented by Jonathan Macey </para></simplesect>
<simplesect kind="version"><para>3.0 </para></simplesect>
<simplesect kind="date"><para>Last Revision 27/09/09 Updated to NCCA Coding standard and V2.0  History : /06/08 Initial class written </para></simplesect>
<xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>update this class to run the CoxDeBoor algo once and then store the points in a dynamic array based on the LOD value passed in. This will speed up the execution for static curves as at present we calculate each time. Also this array can then be used to draw with VertexArrays and we will not need to create the DisplayLists </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <collaborationgraph>
      <node id="1335">
        <label>size_t</label>
      </node>
      <node id="1333">
        <label>ngl::BezierCurve</label>
        <link refid="classngl_1_1_bezier_curve"/>
        <childnode refid="1334" relation="usage">
          <edgelabel>#m_vaoCurve</edgelabel>
          <edgelabel>#m_vaoPoints</edgelabel>
        </childnode>
      </node>
      <node id="1334">
        <label>ngl::AbstractVAO</label>
        <link refid="classngl_1_1_abstract_v_a_o"/>
        <childnode refid="1335" relation="usage">
          <edgelabel>#m_indicesCount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jmacey/NGL/include/ngl/BezierCurve.h" line="46" column="1" bodyfile="/Users/jmacey/NGL/include/ngl/BezierCurve.h" bodystart="45" bodyend="185"/>
    <listofallmembers>
      <member refid="classngl_1_1_bezier_curve_1ac24714e885010a8574dc552a1ba4f290" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>addKnot</name></member>
      <member refid="classngl_1_1_bezier_curve_1a28b3abbeb5935c03325f19668b2d9329" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>addPoint</name></member>
      <member refid="classngl_1_1_bezier_curve_1a112ebeffc0af396893eb2fedffe2761d" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>addPoint</name></member>
      <member refid="classngl_1_1_bezier_curve_1a6b816b1183d70d1082423aed5f246f5f" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>BezierCurve</name></member>
      <member refid="classngl_1_1_bezier_curve_1a38a34ea203e0e5c4e5d4b7053b8ab9f7" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>BezierCurve</name></member>
      <member refid="classngl_1_1_bezier_curve_1a3fd4e61f1d3a42e27f1d96d1232a694c" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>BezierCurve</name></member>
      <member refid="classngl_1_1_bezier_curve_1ab8132edf6f101658709019c7430ab816" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>BezierCurve</name></member>
      <member refid="classngl_1_1_bezier_curve_1ae81fbe1a0dfb6d0cf8fce2068be69ca9" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>coxDeBoor</name></member>
      <member refid="classngl_1_1_bezier_curve_1a4622d0f19a031e78aee54097f5d048bc" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>createKnots</name></member>
      <member refid="classngl_1_1_bezier_curve_1a56b40c82609b906efa45eb42a2cbce3c" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>createVAO</name></member>
      <member refid="classngl_1_1_bezier_curve_1a09380788ad51a31e512e39070eb6c670" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>draw</name></member>
      <member refid="classngl_1_1_bezier_curve_1aaebc65828ecb6bef1e5f894c06b5c9d7" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>drawControlPoints</name></member>
      <member refid="classngl_1_1_bezier_curve_1a9d49085e7ae40604418ee0685268e85f" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>drawHull</name></member>
      <member refid="classngl_1_1_bezier_curve_1a9b6aa8855fa01623a327844f355b2a8b" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>getPointOnCurve</name></member>
      <member refid="classngl_1_1_bezier_curve_1a05c689fe4f852b5be1d3a3ccab0f4e9d" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_cp</name></member>
      <member refid="classngl_1_1_bezier_curve_1a43e6dc9dcdc80f3f204f46483a9f5a4d" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_degree</name></member>
      <member refid="classngl_1_1_bezier_curve_1a64664783f6b52a5064548c15ee3a74b3" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_knots</name></member>
      <member refid="classngl_1_1_bezier_curve_1a2fa9d6fe88ccfb32f617fa814dd893de" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_listIndex</name></member>
      <member refid="classngl_1_1_bezier_curve_1ab254ec89380b533204cd1f0dc111879b" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_lod</name></member>
      <member refid="classngl_1_1_bezier_curve_1a3a620229907bdeb40524b9d606fc2b4e" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_numCP</name></member>
      <member refid="classngl_1_1_bezier_curve_1a92ef908366289514b20843ce932bc625" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_numKnots</name></member>
      <member refid="classngl_1_1_bezier_curve_1af7e66f8f16ebe0c45a75b72cb9d99d10" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_order</name></member>
      <member refid="classngl_1_1_bezier_curve_1a140010b1b3c0aa34cf8d2f78956b6630" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_vaoCurve</name></member>
      <member refid="classngl_1_1_bezier_curve_1a3da5b6329c1db93a27ff9f3d855ba73f" prot="protected" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>m_vaoPoints</name></member>
      <member refid="classngl_1_1_bezier_curve_1a2e44d153518b12f4a502f99a1c736f6e" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>setLOD</name></member>
      <member refid="classngl_1_1_bezier_curve_1a21d6f57de08c6d06c87f9fbb58da7211" prot="public" virt="non-virtual"><scope>ngl::BezierCurve</scope><name>~BezierCurve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
