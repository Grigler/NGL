<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ostream_8cc" kind="file" language="C++">
    <compoundname>ostream.cc</compoundname>
    <includes refid="ostream_8h" local="yes">fmt/ostream.h</includes>
    <incdepgraph>
      <node id="5314">
        <label>limits</label>
      </node>
      <node id="5307">
        <label>fmt/ostream.h</label>
        <link refid="ostream_8h"/>
        <childnode refid="5308" relation="include">
        </childnode>
        <childnode refid="5323" relation="include">
        </childnode>
      </node>
      <node id="5311">
        <label>cmath</label>
      </node>
      <node id="5309">
        <label>cassert</label>
      </node>
      <node id="5316">
        <label>stdexcept</label>
      </node>
      <node id="5320">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
        <childnode refid="5321" relation="include">
        </childnode>
        <childnode refid="5322" relation="include">
        </childnode>
      </node>
      <node id="5317">
        <label>string</label>
      </node>
      <node id="5323">
        <label>ostream</label>
      </node>
      <node id="5321">
        <label>limits.h</label>
      </node>
      <node id="5322">
        <label>wchar.h</label>
      </node>
      <node id="5312">
        <label>cstdio</label>
      </node>
      <node id="5306">
        <label>ostream.cc</label>
        <link refid="ostream.cc"/>
        <childnode refid="5307" relation="include">
        </childnode>
      </node>
      <node id="5318">
        <label>vector</label>
      </node>
      <node id="5319">
        <label>utility</label>
      </node>
      <node id="5308">
        <label>fmt/format.h</label>
        <link refid="format_8h"/>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5311" relation="include">
        </childnode>
        <childnode refid="5312" relation="include">
        </childnode>
        <childnode refid="5313" relation="include">
        </childnode>
        <childnode refid="5314" relation="include">
        </childnode>
        <childnode refid="5315" relation="include">
        </childnode>
        <childnode refid="5316" relation="include">
        </childnode>
        <childnode refid="5317" relation="include">
        </childnode>
        <childnode refid="5318" relation="include">
        </childnode>
        <childnode refid="5319" relation="include">
        </childnode>
        <childnode refid="5320" relation="include">
        </childnode>
      </node>
      <node id="5310">
        <label>clocale</label>
      </node>
      <node id="5313">
        <label>cstring</label>
      </node>
      <node id="5315">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <innernamespace refid="namespacefmt_1_1internal">fmt::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>Formatting<sp/>library<sp/>for<sp/>C++<sp/>-<sp/>std::ostream<sp/>support</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2012<sp/>-<sp/>2016,<sp/>Victor<sp/>Zverovich</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>For<sp/>the<sp/>license<sp/>information<sp/>refer<sp/>to<sp/>format.h.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ostream_8h" kindref="compound">fmt/ostream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefmt" kindref="compound">fmt</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="15" refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" refkind="member"><highlight class="normal"><ref refid="format_8h_1a02c8898388e0ae59aab58be14fcd4e05" kindref="member">FMT_FUNC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" kindref="member">write</ref>(std::ostream<sp/>&amp;os,<sp/><ref refid="classfmt_1_1_basic_writer" kindref="compound">Writer</ref><sp/>&amp;<ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="glew_8h_1a42c2b1d86fa71a425e73a882cb0a72c8" kindref="member">data</ref><sp/>=<sp/>w.<ref refid="classfmt_1_1_basic_writer_1a62d1c7b5be9c3580326320d5d178d096" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structfmt_1_1internal_1_1_make_unsigned_1a57cbf18702f14a837ba104412394bfba" kindref="member">internal::MakeUnsigned&lt;std::streamsize&gt;::Type</ref><sp/>UnsignedStreamSize;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>UnsignedStreamSize<sp/><ref refid="glew_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref><sp/>=<sp/>w.<ref refid="classfmt_1_1_basic_writer_1a1b6721b4ba4d3fa18ac781a36616cc2a" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>UnsignedStreamSize<sp/>max_size<sp/>=</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefmt_1_1internal_1a28bed1291226be35437bc3173c19c205" kindref="member">internal::to_unsigned</ref>((std::numeric_limits&lt;std::streamsize&gt;::max)());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>UnsignedStreamSize<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref><sp/>=<sp/>size<sp/>&lt;=<sp/>max_size<sp/>?<sp/>size<sp/>:<sp/>max_size;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>os.write(data,<sp/>static_cast&lt;std::streamsize&gt;(n));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>+=<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>-=<sp/><ref refid="glew_8h_1a4cf5f6946cc0a65dbe0d2406017e469c" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespacefmt_1a553a4de7d3382f362eba0a5e2a7c8184" refkind="member"><highlight class="normal"><ref refid="format_8h_1a02c8898388e0ae59aab58be14fcd4e05" kindref="member">FMT_FUNC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefmt_1adec465a02f79e1e023ec283fa6da9f13" kindref="member">print</ref>(std::ostream<sp/>&amp;os,<sp/><ref refid="classfmt_1_1_basic_c_string_ref" kindref="compound">CStringRef</ref><sp/>format_str,<sp/><ref refid="classfmt_1_1_arg_list" kindref="compound">ArgList</ref><sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classfmt_1_1_basic_memory_writer" kindref="compound">MemoryWriter</ref><sp/><ref refid="glew_8h_1a433584688554d9a05d22844c39473968" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>w.<ref refid="classfmt_1_1_basic_writer_1aaa83498c649d4a90ea3366bae62f4eac" kindref="member">write</ref>(format_str,<sp/>args);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="namespacefmt_1_1internal_1a7c721969e9660580a237bd4130422ab6" kindref="member">internal::write</ref>(os,<sp/>w);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jmacey/NGL/include/ngl/fmt/ostream.cc"/>
  </compounddef>
</doxygen>
